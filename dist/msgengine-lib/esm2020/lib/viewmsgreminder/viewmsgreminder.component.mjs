import { Component, ViewChild } from '@angular/core';
import Swal from 'sweetalert2';
import * as CryptoJS from 'crypto-js';
import { Buffer } from 'buffer';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@angular/common/http";
import * as i3 from "../msgengine-lib.service";
import * as i4 from "../varlist.service";
import * as i5 from "@ng-bootstrap/ng-bootstrap";
import * as i6 from "../validationchecklist.service";
import * as i7 from "../encrypy-decrpy.service";
import * as i8 from "@angular/common";
import * as i9 from "@angular/forms";
import * as i10 from "../libtabs/libtabs.component";
import * as i11 from "../libutils/libutils.component";
import * as i12 from "../libpagination/libpagination.component";
import * as i13 from "ngx-pagination";
import * as i14 from "../translate.pipe";
export class ViewmsgreminderComponent {
    constructor(route, httpClient, commonserveice, varlist, modalService, vldChkLst, encDec) {
        this.route = route;
        this.httpClient = httpClient;
        this.commonserveice = commonserveice;
        this.varlist = varlist;
        this.modalService = modalService;
        this.vldChkLst = vldChkLst;
        this.encDec = encDec;
        this.messaageslist = {
            "successMsg": "Date saved successfully",
            "errorMsg": "Something Went Wrong",
            "warningtype": "You want to delete this record",
            "deleteMsg": "Record has been deleted",
            "schedularUrl": "Please Enter a URL",
            "schedularUrlValid": "Please Enter a Valid URL",
            "startDate": "Please select a Start Date",
            "freqType": " frequency Type",
            "freqDuration": "Please Enter frequency Duration"
        };
        this.jsonurl = [
            {
                "pagetitle": "View Reminder",
                "tabList": [
                    { "tabName": "Add", "tabUrl": "../addmessageengine" },
                    { "tabName": "View", "tabUrl": "../viewmessageengine" },
                    { "tabName": "Reminder", "tabUrl": "./viewmessagereminder", "tabClass": "active" }
                ],
                "utils": [
                    { "utilName": "search" },
                    { "utilName": "print" },
                    { "utilName": "delete" },
                    { "utilName": "publish" },
                    { "utilName": "unpublish" },
                ],
            }
        ];
        this.letterID = "";
        this.isFlag = true;
        this.page = 1;
        this.count = 0;
        this.tableSize = 10;
        this.pageSizes = [10, 20, 50, 100, 500, 1000];
        this.loading = false;
        this.letterIdArray = [];
        this.pubUnpStatus = [];
        this.sevName = "";
        this.selFormName = 0;
        this.txtLetterName = null;
        this.freqType = 0;
        this.freqDuration = null;
        this.txtFormId = null;
        this.schedularUrl = null;
        this.schedularStatus = 0;
        this.langKey = 'en';
        this.indexNumber = 0;
        this.formenable = this.varlist.formEnable;
        this.sevName = varlist.serviceModuleconfig;
    }
    ngOnInit() {
        this.loadconfig();
        this.viewItemsReminder('', '', '', '', 2);
        //this.addChangeEventForLabel();
        if (this.formenable == true) {
            this.getForms();
        }
        this.sessiontoken = sessionStorage.getItem('ADMIN_SESSION');
        let SeetionParsed;
        if (this.varlist.sessionEncrypted == true) {
            SeetionParsed = JSON.parse(CryptoJS.AES.decrypt(this.sessiontoken, this.varlist.apiHashingKey).toString(CryptoJS.enc.Utf8));
        }
        else {
            SeetionParsed = JSON.parse(this.sessiontoken);
        }
        this.userId = SeetionParsed.USER_ID;
    }
    loadconfig() {
        this.tablist = this.jsonurl[0].tabList;
        this.utillist = this.jsonurl[0].utils;
        this.title = this.jsonurl[0].pagetitle;
    }
    multilingual(test) {
        return test;
    }
    getForms() {
        let params = {};
        this.commonserveice.getForms(params).subscribe({
            next: (response) => {
                let respData = response.RESPONSE_DATA;
                let respToken = response.RESPONSE_TOKEN;
                let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();
                if (respToken == verifyToken) {
                    let res = Buffer.from(respData, 'base64');
                    res = JSON.parse(res.toString());
                    if (res.status === 200) {
                        this.formNames = res.result;
                    }
                    else {
                        console.log(res.messages);
                    }
                }
                else {
                    this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                }
            },
            error: (msg) => {
                this.commonserveice.directlogoutlib();
            }
        });
    }
    selectAll(e) {
        let checkBoxes = document.querySelectorAll('.rowCheck');
        if (e.target.checked) {
            for (let i = 0; i < checkBoxes.length; i++) {
                let ids = checkBoxes[i].id;
                this.letterIdArray.push(parseInt(ids));
                this.pubUnpStatus.push({ 'letterId': ids, 'publishUnpublisStatus': checkBoxes[i].getAttribute("pubstatus") });
                checkBoxes[i].checked = true;
            }
        }
        else {
            this.pubUnpStatus = [];
            this.letterIdArray = [];
            for (let i = 0; i < checkBoxes.length; i++) {
                checkBoxes[i].checked = false;
            }
        }
    }
    viewItemsReminder(intMessageConfigId, intMessageConfigType, formId, formName, messageType) {
        this.letterIdArray = [];
        this.txtMessageConfigType = 0;
        this.selFormName = null;
        let messageParams = {
            "intMessageConfigId": intMessageConfigId,
            "intMessageConfigType": intMessageConfigType,
            "formId": formId,
            "formName": formName,
            "messageType": messageType
        };
        this.loading = true;
        this.pubUnpStatus = [];
        this.commonserveice.viewMessage(messageParams).subscribe({
            next: (response) => {
                let respData = response.RESPONSE_DATA;
                let respToken = response.RESPONSE_TOKEN;
                let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();
                if (respToken == verifyToken) {
                    let res = Buffer.from(respData, 'base64');
                    res = JSON.parse(res.toString());
                    if (res.status == 200) {
                        this.messageList = res.result;
                        // console.log(this.messageList)
                        this.isFlag = true;
                        this.loading = false;
                    }
                    else if (res.status == 417) {
                        this.isFlag = false;
                        this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                    }
                    else {
                        this.isFlag = false;
                        this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                    }
                }
                else {
                    this.isFlag = false;
                    this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                }
            },
            error: (msg) => {
                this.commonserveice.directlogoutlib();
            }
        });
    }
    viewSearchList() {
        let Formid = this.selFormName;
        let MessageConfigType = this.txtMessageConfigType;
        this.viewItemsReminder('', MessageConfigType, Formid, '', 2);
    }
    createreminder(intProcessId, intMessageConfigId, intMessageConfigType) {
        this.open(this.createreminderModal);
        this.sMintProcessId = intProcessId;
        this.sMintMessageConfigId = intMessageConfigId;
        this.sMintMessageConfigType = intMessageConfigType;
    }
    onTableDataChange(event) {
        this.page = event;
        this.indexNumber = (this.page - 1) * this.tableSize;
    }
    onTableSizeChange(event) {
        this.tableSize = event.target.value;
        this.page = 1;
        this.indexNumber = 0;
    }
    onChange(checkid, e, publishStatus) {
        let totalCheckbox = document.querySelectorAll('.rowCheck').length;
        let totalChecked = document.querySelectorAll('.rowCheck:checked').length;
        let parentcheck = document.querySelectorAll('.checkall');
        if (totalCheckbox == totalChecked) {
            parentcheck[0].checked = true;
        }
        else {
            parentcheck[0].checked = false;
        }
        if (e.target.checked) {
            if (!this.letterIdArray.includes(checkid)) {
                this.letterIdArray.push(checkid);
                this.pubUnpStatus.push({ 'letterId': checkid, 'publishUnpublisStatus': publishStatus });
            }
        }
        else {
            let index = this.letterIdArray.indexOf(checkid);
            let indxAdd = 0;
            for (let mk of this.pubUnpStatus) {
                if (mk.letterId == checkid) {
                    this.pubUnpStatus.splice(indxAdd, 1);
                    break;
                }
                indxAdd++;
            }
            this.letterIdArray.splice(index, 1);
        }
    }
    editReminder(messageStr) {
        let encSchemeStr = this.encDec.encText(messageStr.toString());
        this.route.navigate(['/admin/editReminderEngine', encSchemeStr]);
    }
    //\\ ======================== // Create Scheduler // ======================== //\\
    createSchedular() {
        let startDateVal = this.startDateTime;
        let freqTypeVal = this.freqType;
        let freqDurationVal = this.freqDuration;
        if (!this.vldChkLst.blankCheck(this.schedularUrl, this.commonserveice.langReplace(this.messaageslist.schedularUrl), 'schedularUrl')) { }
        else if (!this.vldChkLst.is_url(this.schedularUrl)) { }
        else if (!this.vldChkLst.blankCheck(startDateVal, this.commonserveice.langReplace(this.messaageslist.startDate), 'startDateTime')) { }
        else if (!this.vldChkLst.selectDropdown(freqTypeVal, this.commonserveice.langReplace(this.messaageslist.freqType), 'freqType')) { }
        else if (!this.vldChkLst.blankCheck(freqDurationVal, this.commonserveice.langReplace(this.messaageslist.freqDuration), 'freqDuration')) { }
        else {
            let messageParams = {
                "MessageConfigId": this.sMintMessageConfigId,
                "processId": this.sMintProcessId,
                "MessageConfigType": this.sMintMessageConfigType,
                "startDate": startDateVal,
                "endDate": this.endDateTime,
                "frequencyType": freqTypeVal,
                "frequencyDuration": this.freqDuration,
                "schedularUrl": this.schedularUrl,
                "SchedularStatus": this.schedularStatus
            };
            this.loading = true;
            this.commonserveice.reminderSchedular(messageParams).subscribe({
                next: (response) => {
                    let respData = response.RESPONSE_DATA;
                    let respToken = response.RESPONSE_TOKEN;
                    let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();
                    if (respToken == verifyToken) {
                        let res = Buffer.from(respData, 'base64');
                        res = JSON.parse(res.toString());
                        if (res.status == 200) {
                            this.loading = false;
                            this.isFlag = true;
                            Swal.fire({
                                text: this.commonserveice.langReplace("Your Schedular Created Successfully") + ' !',
                                icon: 'success',
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: this.commonserveice.langReplace('Ok')
                            }).then((result) => {
                                this.modalService.dismissAll();
                                this.viewItemsReminder('', '', '', '', 2);
                                this.resetSchedular();
                            });
                        }
                        else if (res.status == 417) {
                            this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.somethingWrong));
                        }
                        else {
                            this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                        }
                    }
                    else {
                        this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                    }
                },
                error: (msg) => {
                    this.commonserveice.directlogoutlib();
                }
            });
        }
    }
    //\\ ======================== // Create Scheduler // ======================== //\\
    //\\ ======================== // Executed Scheduler // ======================== //\\
    executeSchedular(intMessageConfigId, intProcessId) {
        let messageParams = {
            "MessageConfigId": intMessageConfigId,
            "processId": intProcessId,
        };
        this.commonserveice.msgexecuteSchedular(messageParams).subscribe({
            next: (response) => {
                let respData = response.RESPONSE_DATA;
                let respToken = response.RESPONSE_TOKEN;
                let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();
                if (respToken == verifyToken) {
                    let res = Buffer.from(respData, 'base64');
                    res = JSON.parse(res.toString());
                    if (res.status == 200) {
                        this.loading = false;
                        this.isFlag = true;
                        Swal.fire({
                            icon: 'success',
                            text: this.commonserveice.langReplace("Your Scheduler Execution Started") + ' !',
                        });
                        this.viewItemsReminder('', '', '', '', 2);
                    }
                    else if (res.status == 417) {
                        this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.somethingWrong));
                    }
                    else {
                        this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                    }
                }
                else {
                    this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                }
            },
            error: (msg) => {
                this.commonserveice.directlogoutlib();
            }
        });
    }
    //\\ ======================== // Executed Scheduler // ======================== //\\
    //\\ ======================== // Stop Scheduler // ======================== //\\
    stopSchedular(intMessageConfigId, intProcessId) {
        let messageParams = {
            "MessageConfigId": intMessageConfigId,
            "processId": intProcessId,
        };
        this.commonserveice.msgstopSchedular(messageParams).subscribe({
            next: (response) => {
                let respData = response.RESPONSE_DATA;
                let respToken = response.RESPONSE_TOKEN;
                let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();
                if (respToken == verifyToken) {
                    let res = Buffer.from(respData, 'base64');
                    res = JSON.parse(res.toString());
                    if (res.status == 200) {
                        this.loading = false;
                        this.isFlag = true;
                        Swal.fire({
                            icon: 'success',
                            text: this.commonserveice.langReplace("Your Scheduler Is Stopped") + ' !',
                        });
                        this.viewItemsReminder('', '', '', '', 2);
                    }
                    else if (res.status == 417) {
                        this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                    }
                    else {
                        this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                    }
                }
                else {
                    this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                }
            },
            error: (msg) => {
                this.commonserveice.directlogoutlib();
            }
        });
    }
    //\\ ======================== // Stop Scheduler // ======================== //\\
    resetSchedular() {
        this.startDateTime = '';
        this.endDateTime = '';
        this.freqType = 0;
        this.freqDuration = '';
        this.schedularUrl = '';
    }
    //\\ ======================== // Show Preview // ======================== //\\
    showPreview(intMessageConfigId, intProcessId) {
        let messageParams = {
            "intMessageConfigId": intMessageConfigId,
            "intMessageConfigType": "",
            "formId": intProcessId,
            "formName": "",
            "messageType": "2"
        };
        // console.log(messageParams)
        this.loading = true;
        this.commonserveice.viewMessage(messageParams).subscribe({
            next: (response) => {
                let respData = response.RESPONSE_DATA;
                let respToken = response.RESPONSE_TOKEN;
                let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();
                if (respToken == verifyToken) {
                    let res = Buffer.from(respData, 'base64');
                    res = JSON.parse(res.toString());
                    if (res.status == 200) {
                        this.excuteList = res.result;
                        //console.log(this.excuteList)
                        this.isFlag = true;
                        this.loading = false;
                    }
                    else if (res.status == 417) {
                        this.isFlag = false;
                        this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.somethingWrong));
                    }
                    else {
                        this.isFlag = false;
                        this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                    }
                }
                else {
                    this.isFlag = false;
                    this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                }
            },
            error: (msg) => {
                this.commonserveice.directlogoutlib();
            }
        });
    }
    //\\ ======================== // Show Preview // ======================== //\\
    //\\ ======================== // Modal Open // ======================== //\\ 
    open(content) {
        this.modalService.open(content, { size: 'lg', backdrop: 'static', keyboard: false, ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {
        }, (reason) => { });
    }
    //\\ ======================== // Modal Open // ======================== //\\ 
    closeModal() {
        this.modalService.dismissAll();
        this.resetSchedular();
    }
    //\\ ======================== // Modal Close // ======================== //\\
    htmldecode(data) {
        let doc = new DOMParser().parseFromString(data, "text/html");
        return doc.documentElement.textContent;
    }
}
ViewmsgreminderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ViewmsgreminderComponent, deps: [{ token: i1.Router }, { token: i2.HttpClient }, { token: i3.MsgengineLibService }, { token: i4.VarlistService }, { token: i5.NgbModal }, { token: i6.ValidatorchecklistService }, { token: i7.EncrypyDecrpyService }], target: i0.ɵɵFactoryTarget.Component });
ViewmsgreminderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: ViewmsgreminderComponent, selector: "lib-viewmsgreminder", viewQueries: [{ propertyName: "createreminderModal", first: true, predicate: ["createreminderModal"], descendants: true }], ngImport: i0, template: "<!--===Page Title===-->\n<div class=\"page-title\">\n \n    <h4>{{title | translate}}</h4>\n  </div>\n  <!--===Page Title===-->\n  \n  <div class=\"page-controls-section\" id=\"page-content\">\n    <div class=\"card\">\n      <div class=\"controls-section-header\">\n       \n\n        <ul class=\"nav nav-tabs nav-fill\" role=\"tablist\">\n            <lib-libtabs *ngFor=\"let tablist of tablist\" [tabMessage]=\"tablist\"></lib-libtabs>\n    \n        </ul>\n        <div class=\"indicatorslist\">\n\n            <lib-libutils *ngFor=\"let utillist of utillist\" [childMessage]=\"utillist\"  [sendIds]=\"letterIdArray\"\n            [funType]=\"sevName\" [pubUnpubStatus]=\"pubUnpStatus\"  (callfunction)=\"viewItemsReminder('','','','',2)\"\n            (callfunction2)='selectAll($event)'></lib-libutils>\n\n   \n         \n        </div>\n\n\n      </div>\n      <div class=\"card-body\">\n  \n  \n        <div class=\"controls-section\">\n          <!-- Search Panel -->\n          <div class=\"search-container active\" id=\"search-container\">\n  \n            <div class=\"search-sec\">\n  \n              <div class=\"row\">\n  \n                <div class=\"col-12 col-md-3 col-lg-3\" *ngIf=\"formenable\">\n                  <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"selFormName\" placeholder=\"Select Form Name\">\n                  </div>\n                </div>\n  \n                <div class=\"col-12 col-md-3 col-lg-3\">\n                  <div class=\"form-group\">\n                    <select class=\"form-select docSizeType\" [(ngModel)]=\"txtMessageConfigType\">\n                      <option value=\"0\" disabled selected>{{\"Select Message config Type\" | translate}}</option>\n                      <option value=1>Mail</option>\n                      <option value=2>SMS</option>\n                      <option value=3>Whatsapp</option>\n                    </select>\n                  </div>\n                </div>\n  \n  \n                <div class=\"col-12 col-md-3 col-lg-3\">\n                  <div class=\"form-group\">\n                    <button class=\"btn btn-primary\" (click)=\"viewSearchList()\">{{\"Search\" | translate}} </button>\n                    <button class=\"btn btn-danger ml-1\" (click)=\"viewItemsReminder('','','','',2)\">\n                      {{\"Reset\" | translate}}</button>\n                  </div>\n                </div>\n              </div>\n  \n  \n            </div>\n  \n  \n          </div>\n          <!-- Search Panel -->\n          <div *ngIf=\"messageList?.length > 0; else norecord\">\n  \n            <div class=\"d-flex justify-content-between mb-3\">\n              <div>\n                <ul class=\"legends\">\n                  <li><span class=\"bg-success\"></span> {{\"Publish\" | translate}}</li>\n                  <li><span class=\"bg-danger\"></span>{{\"Unpublish\" | translate}} </li>\n                </ul>\n              </div>\n              <div>\n                {{\"Per Page\" | translate}} :\n                <select (change)=\"onTableSizeChange($event)\">\n                  <option *ngFor=\"let size of pageSizes\" [ngValue]=\"size\">\n                    {{ size }}\n                  </option>\n                </select>\n              </div>\n            </div>\n            <div class=\"table-responsive print-section\" id=\"print-section\">\n              <table data-toggle=\"table\" class=\"table table-bordered valign-middle\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\" style=\"width:40px\" class=\"noPrint\">\n                      <div class=\"form-check\">\n                        <input class=\"form-check-input checkall\" type=\"checkbox\" (change)=\"selectAll($event)\" id=\"checkall\"\n                          name=\"checkall\" value=\"checkall\">\n  \n                      </div>\n                    </th>\n                    <th scope=\"col\" style=\"width:50px\">{{\"Sl No\" | translate}}</th>\n                    <th scope=\"col\" *ngIf=\"formenable\">{{\"Form Name\" | translate}}</th>\n                    <th scope=\"col\">{{\"Configuration Type\" | translate}}</th>\n                    <th scope=\"col\">{{\"Message Type\" | translate}}</th>\n                    <th scope=\"col\">{{\"Created On\" | translate}}</th>\n                    <th scope=\"col\">{{\"Last Execution Date\" | translate}}</th>\n                    <th scope=\"col\" [width]=\"150\">{{\"Set Reminder\" | translate}}</th>\n                    <th scope=\"col\" class=\"noPrint\">{{\"Preview\" | translate}}</th>\n                    <th scope=\"col\" class=\"noPrint\" style=\"width:80px\">{{\"Action\" | translate}}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor=\"let messages of messageList | paginate\n                          : {\n                              itemsPerPage: tableSize,\n                              currentPage: page,\n                              totalItems: count\n                            };\n                      let i = index\">\n                    <td class=\"noPrint border-left-2\"\n                      [ngClass]=\"{'border-left-danger': messages.tinPublishStatus === 0 , 'border-left-success': messages.tinPublishStatus === 1 }\">\n                      <div>\n                        <input class=\"form-check-input rowCheck\" [attr.pubstatus]=\"messages.tinPublishStatus\"\n                          type=\"checkbox\"\n                          (change)=\"onChange(messages.intMessageConfigId, $event,messages.tinPublishStatus)\"\n                          name=\"{{messages.intMessageConfigId}}\" [id]=\"messages.intMessageConfigId\"\n                          [value]=\"messages.intMessageConfigId\">\n                      </div>\n                    </td>\n\n\n                    \n                    <td>{{i+1+indexNumber}}</td>\n                    <td *ngIf=\"formenable\"><a type=\"button\" class=\"text-primary\" data-bs-toggle=\"modal\"\n                        [attr.data-bs-target]=\"'#previewModal'+i\">\n                        {{messages.vchProcessName}}</a>\n                    </td>\n                    <td>\n                      <a type=\"button\" *ngIf=\"!formenable\" class=\"text-primary\" data-bs-toggle=\"modal\"\n                        [attr.data-bs-target]=\"'#previewModal'+i\">\n                        {{(messages.intMessageConfigType == 1) ? 'Mail':(messages.intMessageConfigType == 2) ?'SMS':\n                      'Whatsapp'}}\n                      </a>\n                      <span *ngIf=\"formenable\">\n                      {{(messages.intMessageConfigType == 1) ? 'Mail':(messages.intMessageConfigType == 2) ?'SMS':\n                      'Whatsapp'}}</span></td>\n                    <td>{{messages.intmessageType == 1 ? 'Messaging': 'Reminder'}}</td>\n                    <td>{{messages.dtmCreatedOn}}</td>\n                    <td>{{(messages.schedularStatus == 1) ? messages.stopExecutionDate :'--'}}</td>\n                    <!-- <td>{{messages.vchLanguage}}</td> -->\n                    <td>\n                      <a type=\"button\" class=\"btn btn-primary btn-sm text-white width-100\" \n                        *ngIf=\"messages.schedularStatus == 0\" (click)=\"createreminder(messages.intProcessId,messages.intMessageConfigId,messages.intMessageConfigType)\">\n                        {{\"Create\" | translate}} </a>\n                      <span *ngIf=\"messages.schedularStatus == 1\">\n                        <a type=\"button\" class=\"btn btn-success btn-sm text-white width-100\"\n                          (click)=\"executeSchedular(messages.intMessageConfigId,messages.intProcessId)\">{{\"EXECUTE\" | translate}}</a>\n                      </span>\n                      <span *ngIf=\"messages.schedularStatus == 2\">\n                        <a type=\"button\" class=\"btn btn-danger btn-sm text-white width-100\"\n                          (click)=\"stopSchedular(messages.intMessageConfigId,messages.intProcessId)\">{{\"STOP\" | translate}}</a>\n                      </span>\n                    </td>\n                    <td class=\"noPrint\">\n                      <div *ngIf=\"messages.schedularStatus == 1;else nodt \">\n                        <a href=\"javascriprt:void(0)\" class=\"text-info\" data-bs-toggle=\"modal\"\n                          [attr.data-bs-target]=\"'#excuteModal'+i\">{{\"Preview\" | translate}}</a>\n                      </div>\n                      <ng-template #nodt>-</ng-template>\n                    </td>\n                    <!--=========== Modal For Message Details ===================-->\n  \n                    <td class=\"noPrint\"><a class=\"text-primary\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Edit\"\n                        (click)=\"editReminder(messages.intMessageConfigId+':'+messages.intProcessId+':'+messages.vchProcessName)\"><i\n                          class=\"icon-edit-solid\"></i></a>\n\n                          <div class=\"modal fade noPrint\" id=\"excuteModal{{i}}\" tabindex=\"-1\" aria-labelledby=\"excuteModalLabel\"\n                          aria-hidden=\"true\">\n                          <div class=\"modal-dialog modal-lg\">\n                            <div class=\"modal-content\">\n                              <div class=\"modal-header\">\n                                <h5 class=\"modal-title mb-0\" id=\"excuteModalLabel\">{{\"Execute Details\" | translate}}\n                                </h5>\n                                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                              </div>\n                              <div class=\"modal-body\">\n                                <table class=\"table table-bordered\">\n                                  <tbody>\n                                    <tr>\n                                      <td class=\"w-25 fw-bold\">{{\"Scheduler URL\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.schedularUrl}}</td>\n      \n                                    </tr>\n      \n                                    <tr>\n                                      <td class=\"fw-bold\">{{\"Start Date and Time\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.dtmStartDate}}</td>\n                                    </tr>\n      \n                                    <tr>\n                                      <td class=\"fw-bold\">{{\"End Date and Time\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.dtmEndDate}}</td>\n                                    </tr>\n      \n                                    <tr>\n                                      <td class=\"fw-bold\">{{\"Frequency Type\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.frequencyType == 1 ? 'Month': (messages.frequencyType == 2)\n                                        ?'Day': (messages.frequencyType == 3) ?'Hour' :'Second'}}</td>\n                                    </tr>\n                                    <tr>\n                                      <td class=\"fw-bold\">{{\"Frequency Duration\" | translate}}</td>\n                                      <td colspan=\"2\">{{messages.frequencyDuration}}</td>\n                                    </tr>\n                                  </tbody>\n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n      \n      \n                        <div class=\"modal fade noPrint\" id=\"previewModal{{i}}\" tabindex=\"-1\" aria-labelledby=\"previewModalLabel\"\n                          aria-hidden=\"true\">\n                          <div class=\"modal-dialog modal-lg\">\n                            <div class=\"modal-content\">\n                              <div class=\"modal-header\">\n                                <h5 class=\"modal-title mb-0\" id=\"previewModalLabel\">{{\"Message Details\" | translate}}\n                                </h5>\n                                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                              </div>\n                              <div class=\"modal-body\">\n                                <table class=\"table table-bordered\">\n                                  <tbody>\n                                    <tr *ngIf=\"formenable\">\n                                      <td class=\"w-25 fw-bold\">{{\"Form Name\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.vchProcessName}}</td>\n                                    </tr>\n      \n                                    <tr>\n                                      <td class=\"fw-bold\">{{\"Message Subject\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.vchSubject}}</td>\n                                    </tr>\n      \n                                    <tr *ngIf=\"messages.intMessageConfigType == 2\">\n                                      <td class=\"w-25 fw-bold\">{{\"SMS TemplateId\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.vchSmsTemplateId}}</td>\n                                    </tr>\n      \n                                    <tr *ngIf=\"messages.intMessageConfigType == 3 && messages.intDocumentType == 1\">\n                                      <td class=\"w-25 fw-bold\"> {{\"Audio\" | translate}} </td>\n                                      <td colspan=\"2\">\n                                        <audio controls>\n                                          <source src=\"{{messages.vchDocument}}\" type=\"audio/mp3\">\n                                          {{\"Your browser does not support the audio tag\"}}.\n                                        </audio>\n                                      </td>\n                                    </tr>\n      \n                                    <tr *ngIf=\"messages.intMessageConfigType == 3 && messages.intDocumentType == 2\">\n                                      <td class=\"w-25 fw-bold\"> {{\"Video\" | translate}} </td>\n                                      <td colspan=\"2\">\n                                        <video width=\"320\" height=\"240\" controls>\n                                          <source src=\"{{messages.vchDocument}}\" type=\"video/mp4\">\n                                          {{\"Your browser does not support the video tag\"}}.\n                                        </video>\n                                      </td>\n                                    </tr>\n      \n                                    <tr *ngIf=\"messages.intMessageConfigType == 3 && messages.intDocumentType == 3\">\n                                      <td class=\"w-25 fw-bold\"> {{\"Image\" | translate}} </td>\n                                      <td colspan=\"2\"><img src=\"{{messages.vchDocument}}\" style=\"max-width:100%\"\n                                          height=\"70px\"></td>\n                                    </tr>\n      \n                                    <tr>\n                                      <td class=\"fw-bold\">{{\"Message Content\" | translate}} </td>\n                                      <td>\n                                        <div class=\"pdfContainer\" [innerHtml]=\"htmldecode(messages.vchMessageContent)\"  ></div>\n                                      </td>\n                                    </tr>\n      \n                                  </tbody>\n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        </td>\n\n\n           \n  \n  \n  \n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <lib-libpagination [page]=\"page\" [count]=\"count\" [tableSize]=\"tableSize\" (callfunction)=\"onTableDataChange($event)\"></lib-libpagination>\n           \n          </div>\n          <ng-template #norecord>\n            <h6 class=\"no-content\">{{\"No Record Found\" | translate}} </h6>\n          </ng-template>\n        </div>\n  \n      </div>\n    </div>\n  </div>\n\n  <ng-template #createreminderModal id=\"createreminderModal\" class=\"noPrint\" let-modal>\n    <div class=\"modal-header\">\n      <h5 class=\"modal-title mb-0\" >\n        {{\"Reminder Scheduler\" | translate}}\n      </h5>\n      <button\n        type=\"button\"\n        class=\"btn-close\"\n        (click)=\"closeModal()\"\n        aria-label=\"Close\"\n      ></button>\n    </div>\n\n\n\n    <div class=\"modal-body\">\n \n      <div class=\"form-group\">\n        <div class=\"row\">\n          <label class=\"col-md-4 col-lg-3 text-dark\"> <span class=\"text-danger\">*</span>\n            {{\"Scheduler URL\" | translate}}</label>\n          <div class=\"col-md-8 col-lg-6\">\n            <input type=\"text\" [(ngModel)]=\"schedularUrl\" id=\"schedularUrl\" class=\"form-control\" name=\"\"\n              placeholder=\"https://www.google.co.in/\">\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"row\">\n          <label class=\"col-md-4 col-lg-3 text-dark\"> <span class=\"text-danger\">*</span>{{\"Start Date and Time\" | translate}} </label>\n          <div class=\"col-md-8 col-lg-6\">\n            <input type=\"datetime-local\" [(ngModel)]=\"startDateTime\"  id=\"startDateTime\"  class=\"form-control\" name=\"\">\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"row\">\n          <label class=\"col-md-4 col-lg-3 text-dark\"><span class=\"text-danger\"> </span>{{\"End Date and Time\" | translate}} </label>\n          <div class=\"col-md-8 col-lg-6\">\n            <input type=\"datetime-local\" [(ngModel)]=\"endDateTime\"  id=\"endDateTime\"  class=\"form-control\" name=\"\">\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"row\">\n          <label class=\"col-md-4 col-lg-3 text-dark\"><span class=\"text-danger\">*</span>{{\"Frequency Type\" | translate}} </label>\n          <div class=\"col-md-8 col-lg-6\">\n            <select class=\"form-select docSizeType\" [(ngModel)]=\"freqType\"  id=\"freqType\" >\n              <option value=\"0\" disabled selected>{{\"Select\" | translate}}</option>\n              <option value=1>Month</option>\n              <option value=2>Day</option>\n              <option value=3>Hours</option>\n              <option value=4>Seconds</option>\n            </select>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"row\">\n          <label class=\"col-md-4 col-lg-3 text-dark\"><span class=\"text-danger\">*</span> {{\"Frequency Duration\" | translate}}</label>\n          <div class=\"col-md-8 col-lg-6\">\n            <input type=\"number\" [(ngModel)]=\"freqDuration\"  id=\"freqDuration\"  class=\"form-control\" name=\"\"\n              placeholder=\"\">\n          </div>\n        </div>\n      </div>\n\n    \n      <div class=\"form-group\">\n        <div class=\"row\">\n          <label class=\"col-md-4 col-lg-3 text-dark\"> </label>\n          <div class=\"col-md-8 col-lg-6\">\n            <button class=\"btn btn-primary\"\n          \n              (click)=\"createSchedular()\">{{\"Submit\" | translate}}</button>\n            <button class=\"btn btn-danger ml-1\"\n              (click)=\"resetSchedular()\">{{\"Reset\" | translate}}</button>\n          </div>\n        </div>\n      </div>\n       \n       \n    </div>\n  </ng-template>", styles: [""], dependencies: [{ kind: "directive", type: i8.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i8.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i8.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i9.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i9.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i9.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i9.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { kind: "directive", type: i9.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i9.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i9.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i10.LibtabsComponent, selector: "lib-libtabs", inputs: ["tabMessage", "activeid"] }, { kind: "component", type: i11.LibutilsComponent, selector: "lib-libutils", inputs: ["childMessage", "sendIds", "funType", "pubUnpubStatus", "reloadUrl"], outputs: ["callfunction", "callfunction3"] }, { kind: "component", type: i12.LibpaginationComponent, selector: "lib-libpagination", inputs: ["page", "count", "tableSize"], outputs: ["callfunction"] }, { kind: "pipe", type: i13.PaginatePipe, name: "paginate" }, { kind: "pipe", type: i14.TranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ViewmsgreminderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-viewmsgreminder', template: "<!--===Page Title===-->\n<div class=\"page-title\">\n \n    <h4>{{title | translate}}</h4>\n  </div>\n  <!--===Page Title===-->\n  \n  <div class=\"page-controls-section\" id=\"page-content\">\n    <div class=\"card\">\n      <div class=\"controls-section-header\">\n       \n\n        <ul class=\"nav nav-tabs nav-fill\" role=\"tablist\">\n            <lib-libtabs *ngFor=\"let tablist of tablist\" [tabMessage]=\"tablist\"></lib-libtabs>\n    \n        </ul>\n        <div class=\"indicatorslist\">\n\n            <lib-libutils *ngFor=\"let utillist of utillist\" [childMessage]=\"utillist\"  [sendIds]=\"letterIdArray\"\n            [funType]=\"sevName\" [pubUnpubStatus]=\"pubUnpStatus\"  (callfunction)=\"viewItemsReminder('','','','',2)\"\n            (callfunction2)='selectAll($event)'></lib-libutils>\n\n   \n         \n        </div>\n\n\n      </div>\n      <div class=\"card-body\">\n  \n  \n        <div class=\"controls-section\">\n          <!-- Search Panel -->\n          <div class=\"search-container active\" id=\"search-container\">\n  \n            <div class=\"search-sec\">\n  \n              <div class=\"row\">\n  \n                <div class=\"col-12 col-md-3 col-lg-3\" *ngIf=\"formenable\">\n                  <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"selFormName\" placeholder=\"Select Form Name\">\n                  </div>\n                </div>\n  \n                <div class=\"col-12 col-md-3 col-lg-3\">\n                  <div class=\"form-group\">\n                    <select class=\"form-select docSizeType\" [(ngModel)]=\"txtMessageConfigType\">\n                      <option value=\"0\" disabled selected>{{\"Select Message config Type\" | translate}}</option>\n                      <option value=1>Mail</option>\n                      <option value=2>SMS</option>\n                      <option value=3>Whatsapp</option>\n                    </select>\n                  </div>\n                </div>\n  \n  \n                <div class=\"col-12 col-md-3 col-lg-3\">\n                  <div class=\"form-group\">\n                    <button class=\"btn btn-primary\" (click)=\"viewSearchList()\">{{\"Search\" | translate}} </button>\n                    <button class=\"btn btn-danger ml-1\" (click)=\"viewItemsReminder('','','','',2)\">\n                      {{\"Reset\" | translate}}</button>\n                  </div>\n                </div>\n              </div>\n  \n  \n            </div>\n  \n  \n          </div>\n          <!-- Search Panel -->\n          <div *ngIf=\"messageList?.length > 0; else norecord\">\n  \n            <div class=\"d-flex justify-content-between mb-3\">\n              <div>\n                <ul class=\"legends\">\n                  <li><span class=\"bg-success\"></span> {{\"Publish\" | translate}}</li>\n                  <li><span class=\"bg-danger\"></span>{{\"Unpublish\" | translate}} </li>\n                </ul>\n              </div>\n              <div>\n                {{\"Per Page\" | translate}} :\n                <select (change)=\"onTableSizeChange($event)\">\n                  <option *ngFor=\"let size of pageSizes\" [ngValue]=\"size\">\n                    {{ size }}\n                  </option>\n                </select>\n              </div>\n            </div>\n            <div class=\"table-responsive print-section\" id=\"print-section\">\n              <table data-toggle=\"table\" class=\"table table-bordered valign-middle\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\" style=\"width:40px\" class=\"noPrint\">\n                      <div class=\"form-check\">\n                        <input class=\"form-check-input checkall\" type=\"checkbox\" (change)=\"selectAll($event)\" id=\"checkall\"\n                          name=\"checkall\" value=\"checkall\">\n  \n                      </div>\n                    </th>\n                    <th scope=\"col\" style=\"width:50px\">{{\"Sl No\" | translate}}</th>\n                    <th scope=\"col\" *ngIf=\"formenable\">{{\"Form Name\" | translate}}</th>\n                    <th scope=\"col\">{{\"Configuration Type\" | translate}}</th>\n                    <th scope=\"col\">{{\"Message Type\" | translate}}</th>\n                    <th scope=\"col\">{{\"Created On\" | translate}}</th>\n                    <th scope=\"col\">{{\"Last Execution Date\" | translate}}</th>\n                    <th scope=\"col\" [width]=\"150\">{{\"Set Reminder\" | translate}}</th>\n                    <th scope=\"col\" class=\"noPrint\">{{\"Preview\" | translate}}</th>\n                    <th scope=\"col\" class=\"noPrint\" style=\"width:80px\">{{\"Action\" | translate}}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor=\"let messages of messageList | paginate\n                          : {\n                              itemsPerPage: tableSize,\n                              currentPage: page,\n                              totalItems: count\n                            };\n                      let i = index\">\n                    <td class=\"noPrint border-left-2\"\n                      [ngClass]=\"{'border-left-danger': messages.tinPublishStatus === 0 , 'border-left-success': messages.tinPublishStatus === 1 }\">\n                      <div>\n                        <input class=\"form-check-input rowCheck\" [attr.pubstatus]=\"messages.tinPublishStatus\"\n                          type=\"checkbox\"\n                          (change)=\"onChange(messages.intMessageConfigId, $event,messages.tinPublishStatus)\"\n                          name=\"{{messages.intMessageConfigId}}\" [id]=\"messages.intMessageConfigId\"\n                          [value]=\"messages.intMessageConfigId\">\n                      </div>\n                    </td>\n\n\n                    \n                    <td>{{i+1+indexNumber}}</td>\n                    <td *ngIf=\"formenable\"><a type=\"button\" class=\"text-primary\" data-bs-toggle=\"modal\"\n                        [attr.data-bs-target]=\"'#previewModal'+i\">\n                        {{messages.vchProcessName}}</a>\n                    </td>\n                    <td>\n                      <a type=\"button\" *ngIf=\"!formenable\" class=\"text-primary\" data-bs-toggle=\"modal\"\n                        [attr.data-bs-target]=\"'#previewModal'+i\">\n                        {{(messages.intMessageConfigType == 1) ? 'Mail':(messages.intMessageConfigType == 2) ?'SMS':\n                      'Whatsapp'}}\n                      </a>\n                      <span *ngIf=\"formenable\">\n                      {{(messages.intMessageConfigType == 1) ? 'Mail':(messages.intMessageConfigType == 2) ?'SMS':\n                      'Whatsapp'}}</span></td>\n                    <td>{{messages.intmessageType == 1 ? 'Messaging': 'Reminder'}}</td>\n                    <td>{{messages.dtmCreatedOn}}</td>\n                    <td>{{(messages.schedularStatus == 1) ? messages.stopExecutionDate :'--'}}</td>\n                    <!-- <td>{{messages.vchLanguage}}</td> -->\n                    <td>\n                      <a type=\"button\" class=\"btn btn-primary btn-sm text-white width-100\" \n                        *ngIf=\"messages.schedularStatus == 0\" (click)=\"createreminder(messages.intProcessId,messages.intMessageConfigId,messages.intMessageConfigType)\">\n                        {{\"Create\" | translate}} </a>\n                      <span *ngIf=\"messages.schedularStatus == 1\">\n                        <a type=\"button\" class=\"btn btn-success btn-sm text-white width-100\"\n                          (click)=\"executeSchedular(messages.intMessageConfigId,messages.intProcessId)\">{{\"EXECUTE\" | translate}}</a>\n                      </span>\n                      <span *ngIf=\"messages.schedularStatus == 2\">\n                        <a type=\"button\" class=\"btn btn-danger btn-sm text-white width-100\"\n                          (click)=\"stopSchedular(messages.intMessageConfigId,messages.intProcessId)\">{{\"STOP\" | translate}}</a>\n                      </span>\n                    </td>\n                    <td class=\"noPrint\">\n                      <div *ngIf=\"messages.schedularStatus == 1;else nodt \">\n                        <a href=\"javascriprt:void(0)\" class=\"text-info\" data-bs-toggle=\"modal\"\n                          [attr.data-bs-target]=\"'#excuteModal'+i\">{{\"Preview\" | translate}}</a>\n                      </div>\n                      <ng-template #nodt>-</ng-template>\n                    </td>\n                    <!--=========== Modal For Message Details ===================-->\n  \n                    <td class=\"noPrint\"><a class=\"text-primary\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Edit\"\n                        (click)=\"editReminder(messages.intMessageConfigId+':'+messages.intProcessId+':'+messages.vchProcessName)\"><i\n                          class=\"icon-edit-solid\"></i></a>\n\n                          <div class=\"modal fade noPrint\" id=\"excuteModal{{i}}\" tabindex=\"-1\" aria-labelledby=\"excuteModalLabel\"\n                          aria-hidden=\"true\">\n                          <div class=\"modal-dialog modal-lg\">\n                            <div class=\"modal-content\">\n                              <div class=\"modal-header\">\n                                <h5 class=\"modal-title mb-0\" id=\"excuteModalLabel\">{{\"Execute Details\" | translate}}\n                                </h5>\n                                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                              </div>\n                              <div class=\"modal-body\">\n                                <table class=\"table table-bordered\">\n                                  <tbody>\n                                    <tr>\n                                      <td class=\"w-25 fw-bold\">{{\"Scheduler URL\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.schedularUrl}}</td>\n      \n                                    </tr>\n      \n                                    <tr>\n                                      <td class=\"fw-bold\">{{\"Start Date and Time\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.dtmStartDate}}</td>\n                                    </tr>\n      \n                                    <tr>\n                                      <td class=\"fw-bold\">{{\"End Date and Time\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.dtmEndDate}}</td>\n                                    </tr>\n      \n                                    <tr>\n                                      <td class=\"fw-bold\">{{\"Frequency Type\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.frequencyType == 1 ? 'Month': (messages.frequencyType == 2)\n                                        ?'Day': (messages.frequencyType == 3) ?'Hour' :'Second'}}</td>\n                                    </tr>\n                                    <tr>\n                                      <td class=\"fw-bold\">{{\"Frequency Duration\" | translate}}</td>\n                                      <td colspan=\"2\">{{messages.frequencyDuration}}</td>\n                                    </tr>\n                                  </tbody>\n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n      \n      \n                        <div class=\"modal fade noPrint\" id=\"previewModal{{i}}\" tabindex=\"-1\" aria-labelledby=\"previewModalLabel\"\n                          aria-hidden=\"true\">\n                          <div class=\"modal-dialog modal-lg\">\n                            <div class=\"modal-content\">\n                              <div class=\"modal-header\">\n                                <h5 class=\"modal-title mb-0\" id=\"previewModalLabel\">{{\"Message Details\" | translate}}\n                                </h5>\n                                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                              </div>\n                              <div class=\"modal-body\">\n                                <table class=\"table table-bordered\">\n                                  <tbody>\n                                    <tr *ngIf=\"formenable\">\n                                      <td class=\"w-25 fw-bold\">{{\"Form Name\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.vchProcessName}}</td>\n                                    </tr>\n      \n                                    <tr>\n                                      <td class=\"fw-bold\">{{\"Message Subject\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.vchSubject}}</td>\n                                    </tr>\n      \n                                    <tr *ngIf=\"messages.intMessageConfigType == 2\">\n                                      <td class=\"w-25 fw-bold\">{{\"SMS TemplateId\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.vchSmsTemplateId}}</td>\n                                    </tr>\n      \n                                    <tr *ngIf=\"messages.intMessageConfigType == 3 && messages.intDocumentType == 1\">\n                                      <td class=\"w-25 fw-bold\"> {{\"Audio\" | translate}} </td>\n                                      <td colspan=\"2\">\n                                        <audio controls>\n                                          <source src=\"{{messages.vchDocument}}\" type=\"audio/mp3\">\n                                          {{\"Your browser does not support the audio tag\"}}.\n                                        </audio>\n                                      </td>\n                                    </tr>\n      \n                                    <tr *ngIf=\"messages.intMessageConfigType == 3 && messages.intDocumentType == 2\">\n                                      <td class=\"w-25 fw-bold\"> {{\"Video\" | translate}} </td>\n                                      <td colspan=\"2\">\n                                        <video width=\"320\" height=\"240\" controls>\n                                          <source src=\"{{messages.vchDocument}}\" type=\"video/mp4\">\n                                          {{\"Your browser does not support the video tag\"}}.\n                                        </video>\n                                      </td>\n                                    </tr>\n      \n                                    <tr *ngIf=\"messages.intMessageConfigType == 3 && messages.intDocumentType == 3\">\n                                      <td class=\"w-25 fw-bold\"> {{\"Image\" | translate}} </td>\n                                      <td colspan=\"2\"><img src=\"{{messages.vchDocument}}\" style=\"max-width:100%\"\n                                          height=\"70px\"></td>\n                                    </tr>\n      \n                                    <tr>\n                                      <td class=\"fw-bold\">{{\"Message Content\" | translate}} </td>\n                                      <td>\n                                        <div class=\"pdfContainer\" [innerHtml]=\"htmldecode(messages.vchMessageContent)\"  ></div>\n                                      </td>\n                                    </tr>\n      \n                                  </tbody>\n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        </td>\n\n\n           \n  \n  \n  \n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <lib-libpagination [page]=\"page\" [count]=\"count\" [tableSize]=\"tableSize\" (callfunction)=\"onTableDataChange($event)\"></lib-libpagination>\n           \n          </div>\n          <ng-template #norecord>\n            <h6 class=\"no-content\">{{\"No Record Found\" | translate}} </h6>\n          </ng-template>\n        </div>\n  \n      </div>\n    </div>\n  </div>\n\n  <ng-template #createreminderModal id=\"createreminderModal\" class=\"noPrint\" let-modal>\n    <div class=\"modal-header\">\n      <h5 class=\"modal-title mb-0\" >\n        {{\"Reminder Scheduler\" | translate}}\n      </h5>\n      <button\n        type=\"button\"\n        class=\"btn-close\"\n        (click)=\"closeModal()\"\n        aria-label=\"Close\"\n      ></button>\n    </div>\n\n\n\n    <div class=\"modal-body\">\n \n      <div class=\"form-group\">\n        <div class=\"row\">\n          <label class=\"col-md-4 col-lg-3 text-dark\"> <span class=\"text-danger\">*</span>\n            {{\"Scheduler URL\" | translate}}</label>\n          <div class=\"col-md-8 col-lg-6\">\n            <input type=\"text\" [(ngModel)]=\"schedularUrl\" id=\"schedularUrl\" class=\"form-control\" name=\"\"\n              placeholder=\"https://www.google.co.in/\">\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"row\">\n          <label class=\"col-md-4 col-lg-3 text-dark\"> <span class=\"text-danger\">*</span>{{\"Start Date and Time\" | translate}} </label>\n          <div class=\"col-md-8 col-lg-6\">\n            <input type=\"datetime-local\" [(ngModel)]=\"startDateTime\"  id=\"startDateTime\"  class=\"form-control\" name=\"\">\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"row\">\n          <label class=\"col-md-4 col-lg-3 text-dark\"><span class=\"text-danger\"> </span>{{\"End Date and Time\" | translate}} </label>\n          <div class=\"col-md-8 col-lg-6\">\n            <input type=\"datetime-local\" [(ngModel)]=\"endDateTime\"  id=\"endDateTime\"  class=\"form-control\" name=\"\">\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"row\">\n          <label class=\"col-md-4 col-lg-3 text-dark\"><span class=\"text-danger\">*</span>{{\"Frequency Type\" | translate}} </label>\n          <div class=\"col-md-8 col-lg-6\">\n            <select class=\"form-select docSizeType\" [(ngModel)]=\"freqType\"  id=\"freqType\" >\n              <option value=\"0\" disabled selected>{{\"Select\" | translate}}</option>\n              <option value=1>Month</option>\n              <option value=2>Day</option>\n              <option value=3>Hours</option>\n              <option value=4>Seconds</option>\n            </select>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"row\">\n          <label class=\"col-md-4 col-lg-3 text-dark\"><span class=\"text-danger\">*</span> {{\"Frequency Duration\" | translate}}</label>\n          <div class=\"col-md-8 col-lg-6\">\n            <input type=\"number\" [(ngModel)]=\"freqDuration\"  id=\"freqDuration\"  class=\"form-control\" name=\"\"\n              placeholder=\"\">\n          </div>\n        </div>\n      </div>\n\n    \n      <div class=\"form-group\">\n        <div class=\"row\">\n          <label class=\"col-md-4 col-lg-3 text-dark\"> </label>\n          <div class=\"col-md-8 col-lg-6\">\n            <button class=\"btn btn-primary\"\n          \n              (click)=\"createSchedular()\">{{\"Submit\" | translate}}</button>\n            <button class=\"btn btn-danger ml-1\"\n              (click)=\"resetSchedular()\">{{\"Reset\" | translate}}</button>\n          </div>\n        </div>\n      </div>\n       \n       \n    </div>\n  </ng-template>" }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i2.HttpClient }, { type: i3.MsgengineLibService }, { type: i4.VarlistService }, { type: i5.NgbModal }, { type: i6.ValidatorchecklistService }, { type: i7.EncrypyDecrpyService }]; }, propDecorators: { createreminderModal: [{
                type: ViewChild,
                args: ['createreminderModal']
            }] } });
//# sourceMappingURL=data:application/json;base64,