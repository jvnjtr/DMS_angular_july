import { Component } from '@angular/core';
import Swal from 'sweetalert2';
import * as CryptoJS from 'crypto-js';
import { Buffer } from 'buffer';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@angular/common/http";
import * as i3 from "../msgengine-lib.service";
import * as i4 from "../varlist.service";
import * as i5 from "@ng-bootstrap/ng-bootstrap";
import * as i6 from "../encrypy-decrpy.service";
import * as i7 from "@angular/common";
import * as i8 from "@angular/forms";
import * as i9 from "../libtabs/libtabs.component";
import * as i10 from "../libutils/libutils.component";
import * as i11 from "../libpagination/libpagination.component";
import * as i12 from "ngx-pagination";
import * as i13 from "../translate.pipe";
export class ViewmsgengineComponent {
    constructor(route, httpClient, 
    // public commonserveice: CommonvarlistService,
    // private getwayService: GetwayvarlistuartionService,
    commonserveice, varlist, modalService, encDec) {
        this.route = route;
        this.httpClient = httpClient;
        this.commonserveice = commonserveice;
        this.varlist = varlist;
        this.modalService = modalService;
        this.encDec = encDec;
        this.jsonurl = [
            {
                "pagetitle": "View Message Engine",
                "tabList": [
                    { "tabName": "Add", "tabUrl": "../addmessageengine" },
                    { "tabName": "View", "tabUrl": "../viewmessageengine", "tabClass": "active" },
                    { "tabName": "Reminder", "tabUrl": "../viewmessagereminder" }
                ],
                "utils": [
                    { "utilName": "search" },
                    { "utilName": "print" },
                    { "utilName": "delete" },
                    { "utilName": "publish" },
                    { "utilName": "unpublish" },
                ],
                "messages": {
                    "successMsg": "Date saved successfully",
                    "errorMsg": "Something Went Wrong",
                    "warningtype": "You want to delete this record",
                    "deleteMsg": "Record has been deleted"
                }
            }
        ];
        this.letterID = "";
        // editor: any = ClassicEditor;
        this.isFlag = true;
        this.page = 1;
        this.count = 0;
        this.tableSize = 10;
        this.pageSizes = [10, 20, 50, 100, 500, 1000];
        this.loading = false;
        this.letterIdArray = [];
        this.pubUnpStatus = [];
        this.sevName = "";
        this.selFormName = 0;
        this.txtLetterName = null;
        this.langKey = 'en';
        this.indexNumber = 0;
        this.formenable = this.varlist.formEnable;
        this.sevName = varlist.serviceModuleconfig;
    }
    ngOnInit() {
        this.loadconfig();
        this.viewItems('', '', '', '', 1);
        if (this.formenable == true) {
            this.getForms();
        }
        //this.addChangeEventForLabel();
    }
    loadconfig() {
        this.tablist = this.jsonurl[0].tabList;
        this.utillist = this.jsonurl[0].utils;
        this.messaageslist = this.jsonurl[0].messages;
        this.title = this.jsonurl[0].pagetitle;
    }
    multilingual(test) {
        return test;
    }
    getForms() {
        let params = {};
        this.commonserveice.getForms(params).subscribe({
            next: (response) => {
                let respData = response.RESPONSE_DATA;
                let respToken = response.RESPONSE_TOKEN;
                let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();
                if (respToken == verifyToken) {
                    let res = Buffer.from(respData, 'base64');
                    res = JSON.parse(res.toString());
                    //console.log('res');
                    if (res.status === 200) {
                        this.formNames = res.result;
                    }
                    else {
                        console.log(res.messages);
                    }
                }
                else {
                    this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                }
            },
            error: (msg) => {
                this.commonserveice.directlogoutlib();
            }
        });
    }
    viewItems(MessageConfigId, intMessageConfigType, formId, formName, messageType) {
        this.letterIdArray = [];
        this.txtMessageConfigType = 0;
        this.selFormName = null;
        let messageParams = {
            "intMessageConfigId": MessageConfigId,
            "intMessageConfigType": intMessageConfigType,
            "formId": formId,
            "formName": formName,
            "messageType": messageType
        };
        this.loading = true;
        this.pubUnpStatus = [];
        this.commonserveice.viewMessage(messageParams).subscribe({
            next: (response) => {
                let respData = response.RESPONSE_DATA;
                let respToken = response.RESPONSE_TOKEN;
                let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();
                if (respToken == verifyToken) {
                    let res = Buffer.from(respData, 'base64');
                    res = JSON.parse(res.toString());
                    if (res.status == 200) {
                        this.messageList = res.result;
                        // console.log(this.messageList)
                        this.isFlag = true;
                        this.loading = false;
                    }
                    else if (res.status == 417) {
                        this.isFlag = false;
                        this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                    }
                    else {
                        this.isFlag = false;
                        this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                    }
                }
                else {
                    this.isFlag = false;
                    this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                }
            },
            error: (msg) => {
                this.commonserveice.directlogoutlib();
            }
        });
    }
    viewSearchList() {
        let Formid = this.selFormName;
        let MessageConfigType = this.txtMessageConfigType;
        this.viewItems('', MessageConfigType, Formid, '', 1);
    }
    onTableDataChange(event) {
        this.page = event;
        this.indexNumber = (this.page - 1) * this.tableSize;
    }
    onTableSizeChange(event) {
        this.tableSize = event.target.value;
        this.page = 1;
        this.indexNumber = 0;
    }
    onChange(checkid, e, publishStatus) {
        let totalCheckbox = document.querySelectorAll('.rowCheck').length;
        let totalChecked = document.querySelectorAll('.rowCheck:checked').length;
        let parentcheck = document.querySelectorAll('.checkall');
        if (totalCheckbox == totalChecked) {
            parentcheck[0].checked = true;
        }
        else {
            parentcheck[0].checked = false;
        }
        if (e.target.checked) {
            if (!this.letterIdArray.includes(checkid)) {
                this.letterIdArray.push(checkid);
                this.pubUnpStatus.push({ 'letterId': checkid, 'publishUnpublisStatus': publishStatus });
            }
        }
        else {
            let index = this.letterIdArray.indexOf(checkid);
            let indxAdd = 0;
            for (let mk of this.pubUnpStatus) {
                if (mk.letterId == checkid) {
                    this.pubUnpStatus.splice(indxAdd, 1);
                    break;
                }
                indxAdd++;
            }
            this.letterIdArray.splice(index, 1);
        }
    }
    selectAll(e) {
        let checkBoxes = document.querySelectorAll('.rowCheck');
        if (e.target.checked) {
            for (let i = 0; i < checkBoxes.length; i++) {
                let ids = checkBoxes[i].id;
                this.letterIdArray.push(parseInt(ids));
                this.pubUnpStatus.push({ 'letterId': ids, 'publishUnpublisStatus': checkBoxes[i].getAttribute("pubstatus") });
                checkBoxes[i].checked = true;
            }
        }
        else {
            this.pubUnpStatus = [];
            this.letterIdArray = [];
            for (let i = 0; i < checkBoxes.length; i++) {
                checkBoxes[i].checked = false;
            }
        }
    }
    //edit function call for edit id================================
    editMessage(messageStr) {
        let encSchemeStr = this.encDec.encText(messageStr.toString());
        this.route.navigate(['/admin/addmessageengine', encSchemeStr]);
    }
    deleteLetter(messageId) {
        let messageParams = {
            "itemId": messageId,
            "itemStatus": "1"
        };
        Swal.fire({
            title: 'Are you sure' + '?',
            text: this.messaageslist.warningtype,
            icon: 'warning',
            showCancelButton: true,
            cancelButtonText: 'Cancel',
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes' + ', ' + 'delete it' + "!"
        }).then((result) => {
            if (result.isConfirmed) {
                this.commonserveice.newMessage(messageParams).subscribe({
                    next: (response) => {
                        if (response.status == 200) {
                            this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.messaageslist.deleteMsg));
                            this.viewItems('', '', '', '', 1);
                        }
                        else {
                            this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.messaageslist.errorMsg));
                        }
                    },
                    error: (msg) => {
                        this.commonserveice.directlogoutlib();
                    }
                });
            }
        });
    }
    htmldecode(data) {
        let doc = new DOMParser().parseFromString(data, "text/html");
        return doc.documentElement.textContent;
    }
}
ViewmsgengineComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ViewmsgengineComponent, deps: [{ token: i1.Router }, { token: i2.HttpClient }, { token: i3.MsgengineLibService }, { token: i4.VarlistService }, { token: i5.NgbModal }, { token: i6.EncrypyDecrpyService }], target: i0.ɵɵFactoryTarget.Component });
ViewmsgengineComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: ViewmsgengineComponent, selector: "lib-viewmsgengine", ngImport: i0, template: "<!--===Page Title===-->\r\n<div class=\"page-title\">\r\n\r\n    <h4>{{title | translate}}</h4>\r\n  </div>\r\n  <!--===Page Title===-->\r\n  <!--===controle section===-->\r\n  <div class=\"page-controls-section\" id=\"page-content\">\r\n    <div class=\"card\">\r\n      <div class=\"controls-section-header\">\r\n       \r\n        <ul class=\"nav nav-tabs nav-fill\" role=\"tablist\">\r\n            <lib-libtabs *ngFor=\"let tablist of tablist\" [tabMessage]=\"tablist\"></lib-libtabs>\r\n    \r\n        </ul>\r\n        <div class=\"indicatorslist\">\r\n\r\n            <lib-libutils *ngFor=\"let utillist of utillist\" [childMessage]=\"utillist\" [sendIds]=\"letterIdArray\" \r\n            [funType]=\"sevName\" [pubUnpubStatus]=\"pubUnpStatus\"  (callfunction)=\"viewItems('','','','',1)\"\r\n            (callfunction2)='selectAll($event)'></lib-libutils>\r\n          \r\n         \r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"card-body\">\r\n  \r\n  \r\n        <div class=\"controls-section\">\r\n          <!-- Search Panel -->\r\n          <div class=\"search-container active\" id=\"search-container\">\r\n  \r\n            <div class=\"search-sec\">\r\n  \r\n              <div class=\"row\">\r\n  \r\n                <div class=\"col-12 col-md-3 col-lg-3\" *ngIf=\"formenable\">\r\n                  <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"selFormName\" placeholder=\"Select Form Name\">\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"col-12 col-md-3 col-lg-3\">\r\n                  <div class=\"form-group\">\r\n                    <select class=\"form-select docSizeType\" [(ngModel)]=\"txtMessageConfigType\">\r\n                      <option value=\"0\" disabled selected>{{\"Select Message config Type\" | translate}}</option>\r\n                      <option value=1>Mail</option>\r\n                      <option value=2>SMS</option>\r\n                      <option value=3>Whatsapp</option>\r\n                    </select>\r\n  \r\n                  </div>\r\n                </div>\r\n  \r\n  \r\n                <div class=\"col-12 col-md-3 col-lg-3\">\r\n                  <div class=\"form-group\">\r\n                    <button class=\"btn btn-primary\" (click)=\"viewSearchList()\"> {{\"Search\" | translate}}</button>\r\n                    <button class=\"btn btn-danger ml-1\" (click)=\"viewItems('','','','',1)\"> {{\"Reset\" | translate}}</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n  \r\n  \r\n            </div>\r\n  \r\n  \r\n          </div>\r\n          <!-- Search Panel -->\r\n          <div *ngIf=\"messageList?.length > 0; else norecord\">\r\n  \r\n            <div class=\"d-flex justify-content-between mb-3\">\r\n              <div>\r\n                <ul class=\"legends\">\r\n                  <li><span class=\"bg-success\"></span> {{\"Publish\" | translate}}</li>\r\n                  <li><span class=\"bg-danger\"></span> {{\"Unpublish\" | translate}}</li>\r\n                </ul>\r\n              </div>\r\n              <div>\r\n                {{\"Per Page\" | translate}}:\r\n                <select (change)=\"onTableSizeChange($event)\">\r\n                  <option *ngFor=\"let size of pageSizes\" [ngValue]=\"size\">\r\n                    {{ size }}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div class=\"table-responsive print-section\" id=\"print-section\"> \r\n              <table data-toggle=\"table\" class=\"table table-bordered valign-middle\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\" style=\"width:40px\" class=\"noPrint\">\r\n                      <div class=\"form-check\">\r\n                        <input class=\"form-check-input checkall\" type=\"checkbox\" (change)=\"selectAll($event)\" id=\"checkall\"\r\n                          name=\"checkall\" value=\"checkall\">\r\n  \r\n                      </div>\r\n                    </th>\r\n                    <th scope=\"col\" class=\"noPrint\" style=\"width:40px\">{{\"Sl No\"| translate }}</th>\r\n                    <th scope=\"col\" *ngIf=\"formenable\">{{\"Form Name\" | translate}}</th>\r\n                    <th scope=\"col\">{{\"Configuration Type\" | translate}}</th>\r\n                    <th scope=\"col\">{{\"SMS TemplateId\" | translate}}</th>\r\n                    <th scope=\"col\">{{\"Message Type\" | translate}}</th>\r\n                    <th scope=\"col\">{{\"Language\" | translate}}</th>\r\n                    <th scope=\"col\">{{\"Created On\" | translate}}</th>\r\n                    <th scope=\"col\" class=\"noPrint\" style=\"width:80px\">{{\"Action\" | translate}}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr  *ngFor=\"let messages of messageList | paginate\r\n                          : {\r\n                              itemsPerPage: tableSize,\r\n                              currentPage: page,\r\n                              totalItems: count\r\n                            };\r\n                      let i = index\">\r\n                    <td class=\"noPrint border-left-2\"\r\n                      [ngClass]=\"{'border-left-danger': messages.tinPublishStatus === 0 , 'border-left-success': messages.tinPublishStatus === 1 }\">\r\n                      <div>\r\n                        <input class=\"form-check-input rowCheck\" type=\"checkbox\"\r\n                          (change)=\"onChange(messages.intMessageConfigId, $event,messages.tinPublishStatus)\"\r\n                          name=\"{{messages.intMessageConfigId }}\" [id]=\"messages.intMessageConfigId\"\r\n                          [value]=\"messages.intMessageConfigId\" [attr.pubstatus]=\"messages.tinPublishStatus\">\r\n                      </div>\r\n                    </td>\r\n                    <td>{{i+1+indexNumber}} </td>\r\n                    <td *ngIf=\"formenable\"><a type=\"button\" class=\"text-primary\" data-bs-toggle=\"modal\"\r\n                        [attr.data-bs-target]=\"'#previewModal'+i\">\r\n                        {{messages.vchProcessName}}\r\n                      </a>\r\n                    </td>\r\n                    <td>\r\n                      <a type=\"button\" *ngIf=\"!formenable\" class=\"text-primary\" data-bs-toggle=\"modal\"\r\n                        [attr.data-bs-target]=\"'#previewModal'+i\">\r\n                        {{(messages.intMessageConfigType == 1) ? 'Mail':(messages.intMessageConfigType == 2) ?'SMS':\r\n                      'Whatsapp'}}\r\n                      </a>\r\n                      <span *ngIf=\"formenable\">\r\n                      {{(messages.intMessageConfigType == 1) ? 'Mail':(messages.intMessageConfigType == 2) ?'SMS':\r\n                      'Whatsapp'}}</span></td>\r\n                    <td>{{messages.vchSmsTemplateId !='' ? messages.vchSmsTemplateId: '--'}}</td>\r\n                    <td>{{messages.intmessageType == 1 ? 'Messaging': 'Reminder'}}</td>\r\n                    <td>{{messages.vchLanguage}}</td>\r\n                    <td>{{messages.dtmCreatedOn}}</td>\r\n                    <td class=\"noPrint\"><a class=\"text-primary\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Edit\"\r\n                        (click)=\"editMessage(messages.intMessageConfigId+':'+messages.intProcessId+':'+messages.vchProcessName)\"><i\r\n                          class=\"icon-edit-solid\"></i></a>\r\n                         \r\n                          <div class=\"modal fade noPrint\"  id=\"previewModal{{i}}\" tabindex=\"-1\" aria-labelledby=\"previewModalLabel\"\r\n                          aria-hidden=\"true\">\r\n                          <div class=\"modal-dialog modal-lg\">\r\n                            <div class=\"modal-content\">\r\n                              <div class=\"modal-header\">\r\n                                <h5 class=\"modal-title mb-0\" id=\"previewModalLabel\">{{\"Message Details\" | translate}}\r\n                                </h5>\r\n                                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                              </div>\r\n                              <div class=\"modal-body\">\r\n                                <table class=\"table table-bordered\">\r\n                                  <tbody>\r\n                                    <tr *ngIf=\"formenable\">\r\n                                      <td class=\"w-25 fw-bold\">{{\"Form Name\" | translate}} </td>\r\n                                      <td colspan=\"2\">{{messages.vchProcessName}}</td>\r\n                                    </tr>\r\n      \r\n                                    <tr>\r\n                                      <td class=\"fw-bold\">{{\"Subject\" | translate}} </td>\r\n                                      <td colspan=\"2\">{{messages.vchSubject}}</td>\r\n                                    </tr>\r\n      \r\n                                    <tr *ngIf=\"messages.intMessageConfigType == 2\">\r\n                                      <td class=\"w-25 fw-bold\">{{\"SMS TemplateId\" | translate}} </td>\r\n                                      <td colspan=\"2\">{{messages.vchSmsTemplateId}}</td>\r\n                                    </tr>\r\n      \r\n                                    <tr *ngIf=\"messages.intMessageConfigType == 3 && messages.intDocumentType == 1\">\r\n                                      <td class=\"w-25 fw-bold\"> {{\"Audio\" | translate}} </td>\r\n                                      <td colspan=\"2\">\r\n                                        <audio controls>\r\n                                          <source src=\"{{messages.vchDocument}}\" type=\"audio/mp3\">\r\n                                          {{\"Your browser does not support the audio tag\"}}.\r\n                                        </audio>\r\n                                      </td>\r\n                                    </tr>\r\n      \r\n                                    <tr *ngIf=\"messages.intMessageConfigType == 3 && messages.intDocumentType == 2\">\r\n                                      <td class=\"w-25 fw-bold\"> {{\"Video\" | translate}} </td>\r\n                                      <td colspan=\"2\">\r\n                                        <video width=\"320\" height=\"240\" controls>\r\n                                          <source src=\"{{messages.vchDocument}}\" type=\"video/mp4\">\r\n                                          {{\"Your browser does not support the video tag\"}}.\r\n                                        </video>\r\n                                      </td>\r\n                                    </tr>\r\n      \r\n                                    <tr *ngIf=\"messages.intMessageConfigType == 3 && messages.intDocumentType == 3\">\r\n                                      <td class=\"w-25 fw-bold\"> {{\"Image\" | translate}} </td>\r\n                                      <td colspan=\"2\"><img src=\"{{messages.vchDocument}}\" style=\"max-width:100%\"\r\n                                          height=\"70px\"></td>\r\n                                    </tr>\r\n      \r\n                                    <tr>\r\n                                      <td class=\"fw-bold\">{{\"Message Content\" | translate}} </td>\r\n                                      <td>\r\n                                        <div class=\"pdfContainer\" [innerHtml]=\"htmldecode(messages.vchMessageContent)\">\r\n\r\n                                        \r\n                                        </div>\r\n                                      </td>\r\n                                    </tr>\r\n      \r\n      \r\n      \r\n                                  </tbody>\r\n                                </table>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        </td>\r\n\r\n\r\n                \r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <lib-libpagination [page]=\"page\" [count]=\"count\" [tableSize]=\"tableSize\" (callfunction)=\"onTableDataChange($event)\"></lib-libpagination>\r\n          </div>\r\n          <ng-template #norecord>\r\n            <h6 class=\"no-content\"> {{\"No Record Found\" | translate}}</h6>\r\n          </ng-template>\r\n        </div>\r\n  \r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"loader\" *ngIf=\"loading\">\r\n    <div class=\"loader-item\"></div>\r\n    <p>{{\"Loading\"}}...</p>\r\n  </div>\r\n", styles: [""], dependencies: [{ kind: "directive", type: i7.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i7.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i8.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i8.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i8.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i8.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i8.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i8.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i9.LibtabsComponent, selector: "lib-libtabs", inputs: ["tabMessage", "activeid"] }, { kind: "component", type: i10.LibutilsComponent, selector: "lib-libutils", inputs: ["childMessage", "sendIds", "funType", "pubUnpubStatus", "reloadUrl"], outputs: ["callfunction", "callfunction3"] }, { kind: "component", type: i11.LibpaginationComponent, selector: "lib-libpagination", inputs: ["page", "count", "tableSize"], outputs: ["callfunction"] }, { kind: "pipe", type: i12.PaginatePipe, name: "paginate" }, { kind: "pipe", type: i13.TranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ViewmsgengineComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-viewmsgengine', template: "<!--===Page Title===-->\r\n<div class=\"page-title\">\r\n\r\n    <h4>{{title | translate}}</h4>\r\n  </div>\r\n  <!--===Page Title===-->\r\n  <!--===controle section===-->\r\n  <div class=\"page-controls-section\" id=\"page-content\">\r\n    <div class=\"card\">\r\n      <div class=\"controls-section-header\">\r\n       \r\n        <ul class=\"nav nav-tabs nav-fill\" role=\"tablist\">\r\n            <lib-libtabs *ngFor=\"let tablist of tablist\" [tabMessage]=\"tablist\"></lib-libtabs>\r\n    \r\n        </ul>\r\n        <div class=\"indicatorslist\">\r\n\r\n            <lib-libutils *ngFor=\"let utillist of utillist\" [childMessage]=\"utillist\" [sendIds]=\"letterIdArray\" \r\n            [funType]=\"sevName\" [pubUnpubStatus]=\"pubUnpStatus\"  (callfunction)=\"viewItems('','','','',1)\"\r\n            (callfunction2)='selectAll($event)'></lib-libutils>\r\n          \r\n         \r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"card-body\">\r\n  \r\n  \r\n        <div class=\"controls-section\">\r\n          <!-- Search Panel -->\r\n          <div class=\"search-container active\" id=\"search-container\">\r\n  \r\n            <div class=\"search-sec\">\r\n  \r\n              <div class=\"row\">\r\n  \r\n                <div class=\"col-12 col-md-3 col-lg-3\" *ngIf=\"formenable\">\r\n                  <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"selFormName\" placeholder=\"Select Form Name\">\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"col-12 col-md-3 col-lg-3\">\r\n                  <div class=\"form-group\">\r\n                    <select class=\"form-select docSizeType\" [(ngModel)]=\"txtMessageConfigType\">\r\n                      <option value=\"0\" disabled selected>{{\"Select Message config Type\" | translate}}</option>\r\n                      <option value=1>Mail</option>\r\n                      <option value=2>SMS</option>\r\n                      <option value=3>Whatsapp</option>\r\n                    </select>\r\n  \r\n                  </div>\r\n                </div>\r\n  \r\n  \r\n                <div class=\"col-12 col-md-3 col-lg-3\">\r\n                  <div class=\"form-group\">\r\n                    <button class=\"btn btn-primary\" (click)=\"viewSearchList()\"> {{\"Search\" | translate}}</button>\r\n                    <button class=\"btn btn-danger ml-1\" (click)=\"viewItems('','','','',1)\"> {{\"Reset\" | translate}}</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n  \r\n  \r\n            </div>\r\n  \r\n  \r\n          </div>\r\n          <!-- Search Panel -->\r\n          <div *ngIf=\"messageList?.length > 0; else norecord\">\r\n  \r\n            <div class=\"d-flex justify-content-between mb-3\">\r\n              <div>\r\n                <ul class=\"legends\">\r\n                  <li><span class=\"bg-success\"></span> {{\"Publish\" | translate}}</li>\r\n                  <li><span class=\"bg-danger\"></span> {{\"Unpublish\" | translate}}</li>\r\n                </ul>\r\n              </div>\r\n              <div>\r\n                {{\"Per Page\" | translate}}:\r\n                <select (change)=\"onTableSizeChange($event)\">\r\n                  <option *ngFor=\"let size of pageSizes\" [ngValue]=\"size\">\r\n                    {{ size }}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div class=\"table-responsive print-section\" id=\"print-section\"> \r\n              <table data-toggle=\"table\" class=\"table table-bordered valign-middle\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\" style=\"width:40px\" class=\"noPrint\">\r\n                      <div class=\"form-check\">\r\n                        <input class=\"form-check-input checkall\" type=\"checkbox\" (change)=\"selectAll($event)\" id=\"checkall\"\r\n                          name=\"checkall\" value=\"checkall\">\r\n  \r\n                      </div>\r\n                    </th>\r\n                    <th scope=\"col\" class=\"noPrint\" style=\"width:40px\">{{\"Sl No\"| translate }}</th>\r\n                    <th scope=\"col\" *ngIf=\"formenable\">{{\"Form Name\" | translate}}</th>\r\n                    <th scope=\"col\">{{\"Configuration Type\" | translate}}</th>\r\n                    <th scope=\"col\">{{\"SMS TemplateId\" | translate}}</th>\r\n                    <th scope=\"col\">{{\"Message Type\" | translate}}</th>\r\n                    <th scope=\"col\">{{\"Language\" | translate}}</th>\r\n                    <th scope=\"col\">{{\"Created On\" | translate}}</th>\r\n                    <th scope=\"col\" class=\"noPrint\" style=\"width:80px\">{{\"Action\" | translate}}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr  *ngFor=\"let messages of messageList | paginate\r\n                          : {\r\n                              itemsPerPage: tableSize,\r\n                              currentPage: page,\r\n                              totalItems: count\r\n                            };\r\n                      let i = index\">\r\n                    <td class=\"noPrint border-left-2\"\r\n                      [ngClass]=\"{'border-left-danger': messages.tinPublishStatus === 0 , 'border-left-success': messages.tinPublishStatus === 1 }\">\r\n                      <div>\r\n                        <input class=\"form-check-input rowCheck\" type=\"checkbox\"\r\n                          (change)=\"onChange(messages.intMessageConfigId, $event,messages.tinPublishStatus)\"\r\n                          name=\"{{messages.intMessageConfigId }}\" [id]=\"messages.intMessageConfigId\"\r\n                          [value]=\"messages.intMessageConfigId\" [attr.pubstatus]=\"messages.tinPublishStatus\">\r\n                      </div>\r\n                    </td>\r\n                    <td>{{i+1+indexNumber}} </td>\r\n                    <td *ngIf=\"formenable\"><a type=\"button\" class=\"text-primary\" data-bs-toggle=\"modal\"\r\n                        [attr.data-bs-target]=\"'#previewModal'+i\">\r\n                        {{messages.vchProcessName}}\r\n                      </a>\r\n                    </td>\r\n                    <td>\r\n                      <a type=\"button\" *ngIf=\"!formenable\" class=\"text-primary\" data-bs-toggle=\"modal\"\r\n                        [attr.data-bs-target]=\"'#previewModal'+i\">\r\n                        {{(messages.intMessageConfigType == 1) ? 'Mail':(messages.intMessageConfigType == 2) ?'SMS':\r\n                      'Whatsapp'}}\r\n                      </a>\r\n                      <span *ngIf=\"formenable\">\r\n                      {{(messages.intMessageConfigType == 1) ? 'Mail':(messages.intMessageConfigType == 2) ?'SMS':\r\n                      'Whatsapp'}}</span></td>\r\n                    <td>{{messages.vchSmsTemplateId !='' ? messages.vchSmsTemplateId: '--'}}</td>\r\n                    <td>{{messages.intmessageType == 1 ? 'Messaging': 'Reminder'}}</td>\r\n                    <td>{{messages.vchLanguage}}</td>\r\n                    <td>{{messages.dtmCreatedOn}}</td>\r\n                    <td class=\"noPrint\"><a class=\"text-primary\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Edit\"\r\n                        (click)=\"editMessage(messages.intMessageConfigId+':'+messages.intProcessId+':'+messages.vchProcessName)\"><i\r\n                          class=\"icon-edit-solid\"></i></a>\r\n                         \r\n                          <div class=\"modal fade noPrint\"  id=\"previewModal{{i}}\" tabindex=\"-1\" aria-labelledby=\"previewModalLabel\"\r\n                          aria-hidden=\"true\">\r\n                          <div class=\"modal-dialog modal-lg\">\r\n                            <div class=\"modal-content\">\r\n                              <div class=\"modal-header\">\r\n                                <h5 class=\"modal-title mb-0\" id=\"previewModalLabel\">{{\"Message Details\" | translate}}\r\n                                </h5>\r\n                                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                              </div>\r\n                              <div class=\"modal-body\">\r\n                                <table class=\"table table-bordered\">\r\n                                  <tbody>\r\n                                    <tr *ngIf=\"formenable\">\r\n                                      <td class=\"w-25 fw-bold\">{{\"Form Name\" | translate}} </td>\r\n                                      <td colspan=\"2\">{{messages.vchProcessName}}</td>\r\n                                    </tr>\r\n      \r\n                                    <tr>\r\n                                      <td class=\"fw-bold\">{{\"Subject\" | translate}} </td>\r\n                                      <td colspan=\"2\">{{messages.vchSubject}}</td>\r\n                                    </tr>\r\n      \r\n                                    <tr *ngIf=\"messages.intMessageConfigType == 2\">\r\n                                      <td class=\"w-25 fw-bold\">{{\"SMS TemplateId\" | translate}} </td>\r\n                                      <td colspan=\"2\">{{messages.vchSmsTemplateId}}</td>\r\n                                    </tr>\r\n      \r\n                                    <tr *ngIf=\"messages.intMessageConfigType == 3 && messages.intDocumentType == 1\">\r\n                                      <td class=\"w-25 fw-bold\"> {{\"Audio\" | translate}} </td>\r\n                                      <td colspan=\"2\">\r\n                                        <audio controls>\r\n                                          <source src=\"{{messages.vchDocument}}\" type=\"audio/mp3\">\r\n                                          {{\"Your browser does not support the audio tag\"}}.\r\n                                        </audio>\r\n                                      </td>\r\n                                    </tr>\r\n      \r\n                                    <tr *ngIf=\"messages.intMessageConfigType == 3 && messages.intDocumentType == 2\">\r\n                                      <td class=\"w-25 fw-bold\"> {{\"Video\" | translate}} </td>\r\n                                      <td colspan=\"2\">\r\n                                        <video width=\"320\" height=\"240\" controls>\r\n                                          <source src=\"{{messages.vchDocument}}\" type=\"video/mp4\">\r\n                                          {{\"Your browser does not support the video tag\"}}.\r\n                                        </video>\r\n                                      </td>\r\n                                    </tr>\r\n      \r\n                                    <tr *ngIf=\"messages.intMessageConfigType == 3 && messages.intDocumentType == 3\">\r\n                                      <td class=\"w-25 fw-bold\"> {{\"Image\" | translate}} </td>\r\n                                      <td colspan=\"2\"><img src=\"{{messages.vchDocument}}\" style=\"max-width:100%\"\r\n                                          height=\"70px\"></td>\r\n                                    </tr>\r\n      \r\n                                    <tr>\r\n                                      <td class=\"fw-bold\">{{\"Message Content\" | translate}} </td>\r\n                                      <td>\r\n                                        <div class=\"pdfContainer\" [innerHtml]=\"htmldecode(messages.vchMessageContent)\">\r\n\r\n                                        \r\n                                        </div>\r\n                                      </td>\r\n                                    </tr>\r\n      \r\n      \r\n      \r\n                                  </tbody>\r\n                                </table>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        </td>\r\n\r\n\r\n                \r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <lib-libpagination [page]=\"page\" [count]=\"count\" [tableSize]=\"tableSize\" (callfunction)=\"onTableDataChange($event)\"></lib-libpagination>\r\n          </div>\r\n          <ng-template #norecord>\r\n            <h6 class=\"no-content\"> {{\"No Record Found\" | translate}}</h6>\r\n          </ng-template>\r\n        </div>\r\n  \r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"loader\" *ngIf=\"loading\">\r\n    <div class=\"loader-item\"></div>\r\n    <p>{{\"Loading\"}}...</p>\r\n  </div>\r\n" }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i2.HttpClient }, { type: i3.MsgengineLibService }, { type: i4.VarlistService }, { type: i5.NgbModal }, { type: i6.EncrypyDecrpyService }]; } });
//# sourceMappingURL=data:application/json;base64,