import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../msgengine-lib.service";
import * as i2 from "@angular/common";
import * as i3 from "@angular/router";
import * as i4 from "../translate.pipe";
export class LibtabsComponent {
    constructor(commonserveice) {
        this.commonserveice = commonserveice;
    }
    ngOnInit() {
        this.tabURL = this.tabMessage.tabUrl;
        if (typeof this.tabMessage.id != 'undefined' && this.tabMessage.id != '') {
            this.tabURL = this.tabMessage.tabUrl + '/' + this.tabMessage.id;
        }
    }
}
LibtabsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: LibtabsComponent, deps: [{ token: i1.MsgengineLibService }], target: i0.ɵɵFactoryTarget.Component });
LibtabsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: LibtabsComponent, selector: "lib-libtabs", inputs: { tabMessage: "tabMessage", activeid: "activeid" }, ngImport: i0, template: "<li>\n    <a\n      class=\"nav-item nav-link tab-link\"\n      [ngClass]=\"\n        activeid == undefined || activeid == '' || activeid == '0'\n          ? {\n              active:\n                tabMessage.tabClass === 'active add d-none' ||\n                tabMessage.tabClass === 'active',\n              'd-none': tabMessage.tabClass === 'active edit d-none'\n            }\n          : {\n              active: tabMessage.tabClass === 'active edit d-none',\n              'd-none': tabMessage.tabClass === 'active add d-none'\n            }\n      \"\n      [routerLink]=\"activeid ? (tabMessage.tabUrl == '' ? '../'+tabMessage.tabUrl+'/'+activeid : '../'+ tabMessage.tabUrl ) : tabURL\"\n      [attr.tabspecialclass]=\"tabMessage.pageType\"\n    >\n      {{ tabMessage.tabName | translate  }}\n    </a>\n  </li>\n", styles: [""], dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i3.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "pipe", type: i4.TranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: LibtabsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-libtabs', template: "<li>\n    <a\n      class=\"nav-item nav-link tab-link\"\n      [ngClass]=\"\n        activeid == undefined || activeid == '' || activeid == '0'\n          ? {\n              active:\n                tabMessage.tabClass === 'active add d-none' ||\n                tabMessage.tabClass === 'active',\n              'd-none': tabMessage.tabClass === 'active edit d-none'\n            }\n          : {\n              active: tabMessage.tabClass === 'active edit d-none',\n              'd-none': tabMessage.tabClass === 'active add d-none'\n            }\n      \"\n      [routerLink]=\"activeid ? (tabMessage.tabUrl == '' ? '../'+tabMessage.tabUrl+'/'+activeid : '../'+ tabMessage.tabUrl ) : tabURL\"\n      [attr.tabspecialclass]=\"tabMessage.pageType\"\n    >\n      {{ tabMessage.tabName | translate  }}\n    </a>\n  </li>\n" }]
        }], ctorParameters: function () { return [{ type: i1.MsgengineLibService }]; }, propDecorators: { tabMessage: [{
                type: Input
            }], activeid: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlidGFicy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9tc2dlbmdpbmUtbGliL3NyYy9saWIvbGlidGFicy9saWJ0YWJzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL21zZ2VuZ2luZS1saWIvc3JjL2xpYi9saWJ0YWJzL2xpYnRhYnMuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7Ozs7OztBQVF6RCxNQUFNLE9BQU8sZ0JBQWdCO0lBSzNCLFlBQW1CLGNBQWtDO1FBQWxDLG1CQUFjLEdBQWQsY0FBYyxDQUFvQjtJQUFJLENBQUM7SUFFMUQsUUFBUTtRQUNOLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUM7UUFDckMsSUFBSSxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsRUFBRSxJQUFJLFdBQVcsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsSUFBSSxFQUFFLEVBQUU7WUFDeEUsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUM7U0FDakU7SUFDSCxDQUFDOzs4R0FaVSxnQkFBZ0I7a0dBQWhCLGdCQUFnQiwrR0NSN0IsMHpCQXNCQTs0RkRkYSxnQkFBZ0I7a0JBTDVCLFNBQVM7K0JBQ0UsYUFBYTswR0FNZCxVQUFVO3NCQUFsQixLQUFLO2dCQUNHLFFBQVE7c0JBQWhCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1zZ2VuZ2luZUxpYlNlcnZpY2UgfSBmcm9tICcuLi9tc2dlbmdpbmUtbGliLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdsaWItbGlidGFicycsXG4gIHRlbXBsYXRlVXJsOiAnLi9saWJ0YWJzLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbGlidGFicy5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTGlidGFic0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIG1lc3NhZ2U6IGFueTtcbiAgQElucHV0KCkgdGFiTWVzc2FnZTogYW55O1xuICBASW5wdXQoKSBhY3RpdmVpZDogYW55O1xuICB0YWJVUkw6IGFueTtcbiAgY29uc3RydWN0b3IocHVibGljIGNvbW1vbnNlcnZlaWNlOk1zZ2VuZ2luZUxpYlNlcnZpY2UpIHsgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMudGFiVVJMID0gdGhpcy50YWJNZXNzYWdlLnRhYlVybDtcbiAgICBpZiAodHlwZW9mIHRoaXMudGFiTWVzc2FnZS5pZCAhPSAndW5kZWZpbmVkJyAmJiB0aGlzLnRhYk1lc3NhZ2UuaWQgIT0gJycpIHtcbiAgICAgIHRoaXMudGFiVVJMID0gdGhpcy50YWJNZXNzYWdlLnRhYlVybCArICcvJyArIHRoaXMudGFiTWVzc2FnZS5pZDtcbiAgICB9XG4gIH1cblxufVxuIiwiPGxpPlxuICAgIDxhXG4gICAgICBjbGFzcz1cIm5hdi1pdGVtIG5hdi1saW5rIHRhYi1saW5rXCJcbiAgICAgIFtuZ0NsYXNzXT1cIlxuICAgICAgICBhY3RpdmVpZCA9PSB1bmRlZmluZWQgfHwgYWN0aXZlaWQgPT0gJycgfHwgYWN0aXZlaWQgPT0gJzAnXG4gICAgICAgICAgPyB7XG4gICAgICAgICAgICAgIGFjdGl2ZTpcbiAgICAgICAgICAgICAgICB0YWJNZXNzYWdlLnRhYkNsYXNzID09PSAnYWN0aXZlIGFkZCBkLW5vbmUnIHx8XG4gICAgICAgICAgICAgICAgdGFiTWVzc2FnZS50YWJDbGFzcyA9PT0gJ2FjdGl2ZScsXG4gICAgICAgICAgICAgICdkLW5vbmUnOiB0YWJNZXNzYWdlLnRhYkNsYXNzID09PSAnYWN0aXZlIGVkaXQgZC1ub25lJ1xuICAgICAgICAgICAgfVxuICAgICAgICAgIDoge1xuICAgICAgICAgICAgICBhY3RpdmU6IHRhYk1lc3NhZ2UudGFiQ2xhc3MgPT09ICdhY3RpdmUgZWRpdCBkLW5vbmUnLFxuICAgICAgICAgICAgICAnZC1ub25lJzogdGFiTWVzc2FnZS50YWJDbGFzcyA9PT0gJ2FjdGl2ZSBhZGQgZC1ub25lJ1xuICAgICAgICAgICAgfVxuICAgICAgXCJcbiAgICAgIFtyb3V0ZXJMaW5rXT1cImFjdGl2ZWlkID8gKHRhYk1lc3NhZ2UudGFiVXJsID09ICcnID8gJy4uLycrdGFiTWVzc2FnZS50YWJVcmwrJy8nK2FjdGl2ZWlkIDogJy4uLycrIHRhYk1lc3NhZ2UudGFiVXJsICkgOiB0YWJVUkxcIlxuICAgICAgW2F0dHIudGFic3BlY2lhbGNsYXNzXT1cInRhYk1lc3NhZ2UucGFnZVR5cGVcIlxuICAgID5cbiAgICAgIHt7IHRhYk1lc3NhZ2UudGFiTmFtZSB8IHRyYW5zbGF0ZSAgfX1cbiAgICA8L2E+XG4gIDwvbGk+XG4iXX0=