import { Component } from '@angular/core';
import Swal from 'sweetalert2';
import * as CryptoJS from 'crypto-js';
import { Buffer } from 'buffer';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@angular/common/http";
import * as i3 from "../msgengine-lib.service";
import * as i4 from "../validationchecklist.service";
import * as i5 from "../encrypy-decrpy.service";
import * as i6 from "../varlist.service";
import * as i7 from "@angular/common";
import * as i8 from "@angular/forms";
import * as i9 from "../libtabs/libtabs.component";
import * as i10 from "../libutils/libutils.component";
import * as i11 from "../translate.pipe";
export class AddgetwayComponent {
    //\\ ======================== // Variables // ======================== //\\ 
    constructor(route, httpClient, commonserveice, vldChkLst, encDec, varlist) {
        this.route = route;
        this.httpClient = httpClient;
        this.commonserveice = commonserveice;
        this.vldChkLst = vldChkLst;
        this.encDec = encDec;
        this.varlist = varlist;
        this.jsonurl = [{
                "pagetitle": "Gateway Configuration",
                "tabList": [{
                        "tabName": "Add",
                        "tabUrl": "../addgateway",
                        "tabClass": "active"
                    },
                    {
                        "tabName": "View",
                        "tabUrl": "../viewgateway"
                    }
                ],
                "utils": [{
                        "utilName": "mandatory"
                    }
                ],
            }];
        this.messaageslist = {
            "successMsg": "Data saved successfully",
            "updatesuccessMsg": "Data Updated successfully",
            "errorMsg": "Error in database",
            "warningtype": "You want to delete this record",
            "msgApilabel": "Label can not be blank",
            "msgApikey": "Key can not be blank",
            "msgApivalue": "Value can not be blank",
            "getwayType": "Gateway type",
            "getwayName": "Gateway name",
            "getwayURl": "Enter Gateway Url",
            "methodtype": "method type",
            "contactaddress": "Enter contact address",
            "msggetwayName": "Enter Gateway name"
        };
        this.selType = 0;
        this.selgetwayName = 0;
        this.selgetwayId = 0;
        this.dynamicListArray = [];
        this.selPostmenthod = 0;
        this.langKey = 'en';
    }
    ngOnInit() {
        this.loadconfig();
        this.getGetwaytypes();
        // this.addChangeEventForLabel();
    }
    loadconfig() {
        this.tablist = this.jsonurl[0].tabList;
        this.utillist = this.jsonurl[0].utils;
        this.title = this.jsonurl[0].pagetitle;
    }
    multilingual(test) {
        return test;
    }
    //\\ ======================== // Get getway types // ======================== //\\ 
    getGetwaytypes() {
        let getwayparm = {};
        this.commonserveice.viewGatwayTypes(getwayparm).subscribe({
            next: (response) => {
                let respData = response.RESPONSE_DATA;
                let respToken = response.RESPONSE_TOKEN;
                let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();
                if (respToken == verifyToken) {
                    let res = Buffer.from(respData, 'base64');
                    res = JSON.parse(res.toString());
                    if (res.status == "200") {
                        this.getwaytypes = res.result;
                    }
                    else if (res.status == 501) {
                        this.commonserveice.directlogoutlib();
                    }
                    else {
                        this.commonserveice.swalfire('error', this.commonserveice.langReplace(res.message));
                    }
                }
                else {
                    this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                }
            },
            error: (msg) => {
                this.commonserveice.directlogoutlib();
            }
        });
    }
    //\\ ======================== // Get getway types // ======================== //\\ 
    //\\ ======================== // Get getway Names // ======================== //\\ 
    getgetwayNames() {
        let typeid = this.selType;
        this.getwayNamelist = [];
        this.selgetwayId = "0";
        let formParams = {
            "Type": typeid
        };
        this.commonserveice.getGetwayName(formParams).subscribe({
            next: (response) => {
                let respData = response.RESPONSE_DATA;
                let respToken = response.RESPONSE_TOKEN;
                let res = Buffer.from(respData, 'base64');
                let responseResult = JSON.parse(res.toString());
                let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();
                if (respToken == verifyToken) {
                    if (responseResult.status == "200") {
                        this.getwayNamelist = responseResult.result;
                    }
                    else if (responseResult.status == 400) {
                    }
                    else if (responseResult.status == 501) {
                        this.commonserveice.directlogoutlib();
                    }
                    else {
                        this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.somethingWrong));
                    }
                }
                else {
                    this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                }
            },
            error: (msg) => {
                this.commonserveice.directlogoutlib();
            }
        });
    }
    //\\ ======================== // Get getway Names // ======================== //\\ 
    //\\ ======================== // Addmore Rows // ======================== //\\ 
    addRow() {
        let lastChild = this.dynamicListArray[this.dynamicListArray.length - 1];
        if (this.dynamicListArray.length > 0) {
            //if(!this.vldChkLst.blankCheck(this.txtUrl, this.messaageslist.getwayURl,'txtUrl'))
            if (lastChild.vchLabel === '' || typeof (lastChild.vchLabel) == undefined || lastChild.vchLabel == null) {
                Swal.fire({
                    icon: 'error',
                    text: this.commonserveice.langReplace(this.messaageslist.msgApilabel),
                });
            }
            else if (lastChild.vchKey === '' || typeof (lastChild.vchKey) == undefined || lastChild.vchKey == null) {
                Swal.fire({
                    icon: 'error',
                    text: this.commonserveice.langReplace(this.messaageslist.msgApikey),
                });
            }
            else if (lastChild.vchValue === '' || typeof (lastChild.vchValue) == undefined || lastChild.vchValue == null) {
                Swal.fire({
                    icon: 'error',
                    text: this.commonserveice.langReplace(this.messaageslist.msgApivalue),
                });
            }
            else {
                this.dynamicListArray.push({
                    intId: '',
                    vchLabel: '',
                    vchKey: '',
                    vchValue: ''
                });
            }
        }
        else {
            this.dynamicListArray.push({
                intId: '',
                vchLabel: '',
                vchKey: '',
                vchValue: ''
            });
        }
    }
    //\\ ======================== // Addmore Rows // ======================== //\\ 
    deleteApiRow(i, id) {
        let formParams = {
            "intId": id
        };
        Swal.fire({
            title: this.commonserveice.langReplace('Are you sure') + ' ?',
            text: this.messaageslist.warningtype,
            icon: 'warning',
            showCancelButton: true,
            cancelButtonText: this.commonserveice.langReplace('Cancel'),
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: this.commonserveice.langReplace('Yes') + ',' + this.commonserveice.langReplace('delete it') + "!"
        }).then((result) => {
            if (result.isConfirmed) {
                if (this.selgetwayId == "other") {
                    //   alert("yes")
                    this.dynamicListArray.splice(i, 1);
                }
                else {
                    this.commonserveice.deleteGetwayConfig(formParams).subscribe({
                        next: (response) => {
                            let respData = response.RESPONSE_DATA;
                            let respToken = response.RESPONSE_TOKEN;
                            let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();
                            if (respToken == verifyToken) {
                                let res = Buffer.from(respData, 'base64');
                                res = JSON.parse(res.toString());
                                if (res.status == 200) {
                                    Swal.fire(this.commonserveice.langReplace('Deleted') + '!', this.commonserveice.langReplace(this.messaageslist.deleteMsg), 'success');
                                    this.dynamicListArray.splice(i, 1);
                                    this.viewOldGetways();
                                }
                                else if (res.status == 417) {
                                    this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                                }
                                else {
                                    this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.messaageslist.errorMsg));
                                }
                            }
                            else {
                                this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                            }
                        },
                        error: (msg) => {
                            this.commonserveice.directlogoutlib();
                        }
                    });
                }
            }
        });
    }
    //\\ ======================== // Get old getway details // ======================== //\\
    viewOldGetways() {
        this.dynamicListArray = [];
        this.txtUrl = '';
        this.selPostmenthod = "0";
        this.txtContactAddress = "";
        this.selgetwayName = "";
        let typeid = this.selType;
        let intid = this.selgetwayId;
        if (intid != "other") {
            let formParams = {
                "typeId": typeid,
                "intId": intid
            };
            this.commonserveice.getPrevDetails(formParams).subscribe({
                next: (response) => {
                    let respData = response.RESPONSE_DATA;
                    let respToken = response.RESPONSE_TOKEN;
                    let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();
                    if (respToken == verifyToken) {
                        let res = Buffer.from(respData, 'base64');
                        let responseResult = JSON.parse(res);
                        if (responseResult.status == 200) {
                            this.getDetailslist = responseResult.result;
                            let getDtlsres = this.getDetailslist.result;
                            console.log(this.getDetailslist);
                            this.txtUrl = this.getDetailslist.data[0].url;
                            this.selPostmenthod = this.getDetailslist.data[0].dataPostMethod;
                            this.txtContactAddress = this.getDetailslist.data[0].contactaddress;
                            this.selgetwayName = this.getDetailslist.data[0].vchName;
                            for (let i = 0; i <= getDtlsres.length; i++) {
                                let obj = {};
                                obj["intId"] = getDtlsres[i].intId;
                                obj["vchLabel"] = getDtlsres[i].vchLabel;
                                obj["vchKey"] = getDtlsres[i].vchKey;
                                obj["vchValue"] = getDtlsres[i].vchValue;
                                this.dynamicListArray.push(obj);
                            }
                        }
                        else if (responseResult.status == 501) {
                            this.commonserveice.directlogoutlib();
                        }
                        else {
                            this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.somethingWrong));
                        }
                    }
                    else {
                        this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.somethingWrong));
                    }
                },
                error: (msg) => {
                    this.commonserveice.directlogoutlib();
                }
            });
        }
    }
    //\\ ======================== // Get old getway details // ======================== //\\ 
    //\\ ======================== // Create New configuration // ======================== //\\ 
    manageGetWayConfig() {
        let lastChild = this.dynamicListArray[this.dynamicListArray.length - 1];
        if (!this.vldChkLst.selectDropdown(this.selType, this.commonserveice.langReplace(this.messaageslist.getwayType), 'selType')) { }
        else if (!this.vldChkLst.selectDropdown(this.selgetwayId, this.commonserveice.langReplace(this.messaageslist.getwayName), 'selgetwayId')) { }
        else if ((this.selgetwayId == "other") && (!this.vldChkLst.blankCheck(this.txtgetwaymName, this.commonserveice.langReplace(this.messaageslist.msggetwayName), 'txtgetwaymName'))) { }
        else if (!this.vldChkLst.blankCheck(this.txtUrl, this.commonserveice.langReplace(this.messaageslist.getwayURl), 'txtUrl')) { }
        else if (!this.vldChkLst.is_url(this.txtUrl)) { }
        else if (!this.vldChkLst.selectDropdown(this.selPostmenthod, this.commonserveice.langReplace(this.messaageslist.methodtype), 'selPostMethod')) { }
        else if (!this.vldChkLst.blankCheck(this.txtContactAddress, this.commonserveice.langReplace(this.messaageslist.contactaddress), 'txtContactAddress')) { }
        else if (this.dynamicListArray.length == 0) {
            this.commonserveice.swalfire('error', this.commonserveice.langReplace("Add key values"));
        }
        else if ((this.dynamicListArray.length > 0) && (!this.vldChkLst.blankCheck(lastChild.vchLabel, this.commonserveice.langReplace(this.messaageslist.msgApilabel)))) { }
        else if ((this.dynamicListArray.length > 0) && (!this.vldChkLst.blankCheck(lastChild.vchKey, this.commonserveice.langReplace(this.messaageslist.msgApikey)))) { }
        else if ((this.dynamicListArray.length > 0) && (!this.vldChkLst.blankCheck(lastChild.vchValue, this.commonserveice.langReplace(this.messaageslist.msgApivalue)))) { }
        else {
            let selctgetwayid;
            let getwayName;
            if (this.selgetwayId == 'other') {
                selctgetwayid = '';
                getwayName = this.txtgetwaymName;
            }
            else {
                selctgetwayid = this.selgetwayId;
                getwayName = this.selgetwayName;
            }
            let docParams = {
                "itemId": selctgetwayid,
                "typeId": this.selType,
                "name": getwayName,
                "vchUrl": this.txtUrl,
                "vchDataPostMethod": this.selPostmenthod,
                "vchContactAddress": this.txtContactAddress,
                "itemStatus": "",
                "allDocsdata": this.dynamicListArray
            };
            this.commonserveice.newGetwayConfig(docParams).subscribe({
                next: (response) => {
                    let respData = response.RESPONSE_DATA;
                    let respToken = response.RESPONSE_TOKEN;
                    let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();
                    if (respToken == verifyToken) {
                        let res = Buffer.from(respData, 'base64');
                        let responseResult = JSON.parse(res);
                        if (responseResult.status == 200) {
                            Swal.fire({
                                text: this.commonserveice.langReplace(this.messaageslist.successMsg),
                                icon: 'success',
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: this.commonserveice.langReplace('Ok')
                            }).then((result) => {
                                this.resetform();
                                this.route.navigate(['admin/viewgateway']);
                            });
                        }
                        else if (responseResult.status == 202) {
                            // this.loading=false;
                            Swal.fire({
                                text: this.commonserveice.langReplace(this.messaageslist.updatesuccessMsg),
                                icon: 'success',
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: this.commonserveice.langReplace('Ok')
                            }).then((result) => {
                                this.resetform();
                                this.route.navigate(['admin/viewgateway']);
                            });
                        }
                        else if (responseResult.status == 501) {
                            this.commonserveice.directlogoutlib();
                        }
                        else if (responseResult.status == 400) {
                            this.commonserveice.swalfire('error', this.commonserveice.langReplace(responseResult.message.metaName[0]));
                            // this.loading=false;
                        }
                        else {
                            //this.loading=false;
                            this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.somethingWrong));
                        }
                    }
                    else {
                        this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.somethingWrong));
                    }
                },
                error: (msg) => {
                    this.commonserveice.directlogoutlib();
                }
            });
        }
    }
    //\\ ======================== // Create New configuration // ======================== //\\ 
    //\\ ======================== // Reset Form // ======================== //\\ 
    resetform() {
        this.selType = 0;
        this.selgetwayId = 0;
        this.txtContactAddress = null;
        this.selPostmenthod = 0;
        this.txtUrl = null;
        this.txtContactAddress = null;
        this.selgetwayName = 0;
        this.dynamicListArray = [];
    }
}
AddgetwayComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: AddgetwayComponent, deps: [{ token: i1.Router }, { token: i2.HttpClient }, { token: i3.MsgengineLibService }, { token: i4.ValidatorchecklistService }, { token: i5.EncrypyDecrpyService }, { token: i6.VarlistService }], target: i0.ɵɵFactoryTarget.Component });
AddgetwayComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: AddgetwayComponent, selector: "lib-addgetway", ngImport: i0, template: "<!--  =============================================================================\n// File Name\t\t      : addgateway-config.component.html\n// Description \t              : This is used for config getway configuration\n// Created by                 : Bikash Kumar Panda\n// Created on                 : 17-May-2023\n// Designed by                : Bikash Kumar Panda\n// Designed on                : 17-May-2023\n// Developed by               : Bikash Kumar Panda\n// Developed on               : 18-May-2023\n// Style sheet                : addgateway-config.component.scss\n============================================================================= -->\n<!--===Page Title===-->\n<div class=\"page-title\">\n\n    <h4>{{title | translate}}</h4>\n</div>\n<!--===Page Title===-->\n<!--===controle section===-->\n<div class=\"page-controls-section\" id=\"page-content\">\n    <div class=\"card\">\n        <div class=\"controls-section-header\">\n          \n            <ul class=\"nav nav-tabs nav-fill\" role=\"tablist\">\n               <lib-libtabs *ngFor=\"let tablist of tablist\" [tabMessage]=\"tablist\"></lib-libtabs>\n              \n            </ul>\n            <div class=\"indicatorslist\">\n                <lib-libutils *ngFor=\"let utillist of utillist\" [childMessage]=\"utillist\"></lib-libutils>\n               \n            </div>\n\n        </div>\n        <div class=\"card-body\">\n            <div class=\"controls-section\">\n                <!--begin::Form-->\n                <div class=\"row mb-3\">\n                    <div class=\"col-lg-7\">\n                        <div class=\"row\">\n                            <label class=\"col-md-4 col-lg-4 mt-2\">*{{\"Type\" | translate}}</label>\n                            <div class=\"col-md-8 col-lg-7\">\n                                <div class=\"form-group\">\n                                    <select class=\"form-select\" [(ngModel)]=\"selType\" id=\"selType\" (change)='getgetwayNames()'>\n                                        <option value=\"0\"> {{\"Select\" | translate}}</option>\n                                        <option *ngFor=\"let gettype of getwaytypes;let i index\"\n                                            [value]=\"gettype.typeId\">{{gettype.typeName}}</option>\n                                    </select>\n\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <label class=\"col-md-4 col-lg-4 mt-2\">* {{\"Name\" | translate}} </label>\n                            <div class=\"col-md-8 col-lg-7\">\n                                <div class=\"form-group\">\n                                    <select class=\"form-select\" (change)='viewOldGetways()' id=\"selgetwayId\" [(ngModel)]=\"selgetwayId\">\n                                        <option value=\"0\" > {{\"Select\" | translate}}</option>\n                                        <option *ngFor=\"let gNames of getwayNamelist\" [value]=\"gNames.intId\">{{ \n                                            gNames.vchName }}</option>\n                                        <option value=\"other\">Other</option>\n                                    </select>\n                                    <input type=\"hidden\" [(ngModel)]=\"selgetwayName\">\n                                    <div *ngIf=\"selgetwayId == 'other' \">\n                                        <input type=\"text\" placeholder=\"Enter Name\" id=\"txtgetwaymName\"  class=\"form-control mt-3\"\n                                            [(ngModel)]=\"txtgetwaymName\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <label class=\"col-md-4 col-lg-4 mt-2\">*{{\"URL\" | translate}} </label>\n                            <div class=\"col-md-8 col-lg-7\">\n                                <div class=\"form-group\">\n                                    <input type=\"text\" class=\"form-control amhfld arabic\" name=\"vchUrl\"\n                                        [(ngModel)]=\"txtUrl\" id=\"txtUrl\" autocomplete=\"off\" value=\"\" maxlength=\"250\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <label class=\"col-md-4 col-lg-4 mt-2\">*{{\"Data post method\" | translate}}</label>\n                            <div class=\"col-md-8 col-lg-7\">\n                                <div class=\"form-group\">\n                                    <select name=\"selPostMethod\" id=\"selPostMethod\" [(ngModel)]=\"selPostmenthod\"\n                                        class=\"form-select\">\n                                        <option value=\"0\">{{\"Select\" | translate}}</option>\n                                        <option value=\"na\">NA</option>\n                                        <option value=\"get\">GET</option>\n                                        <option value=\"post\">POST</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <label class=\"col-md-4 col-lg-4 mt-2\">* {{\"Contact Address\" | translate}}</label>\n                            <div class=\"col-md-8 col-lg-7\">\n                                <div class=\"form-group\">\n                                    <textarea class=\"form-control\" [(ngModel)]=\"txtContactAddress\" id=\"txtContactAddress\" rows=\"2\" cols=\"2\">\n\n                                                                </textarea>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-5\">\n                        <div class=\"\">\n                            <h6 class=\"mb-1\"> {{\"Dynamic keys for value\" | translate}} </h6>\n                            <div class=\"overflow-auto pe-2\" style=\"height:270px;\">\n                                <table class=\"table table-bordered\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">{{\"Key\" | translate}}</th>\n                                            <th scope=\"col\">{{\"Description\" | translate}}</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td>[APPLICANT_MOBILE]</td>\n                                            <td>{{\"This key will be used to fetch the applicant mobile number\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[APPLICANT_NAME]</td>\n                                            <td>{{\"This key will be used to bind the SMS content\"}}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>[APP_NO]</td>\n                                            <td>{{\"This key will be used to bind the Application number\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[APP_DATE]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[APP_SLNO]</td>\n                                            <td>{{\"This key will be used to bind the Letter number\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARMER_DIST]</td>\n                                            <td>{{\"This key will be used to bind district of the  farmer\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARMER_BLOCK]</td>\n                                            <td>{{\"This key will be used to bind block/ULB of the farmer\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARMER_GP]</td>\n                                            <td>{{\"This key will be used to bind GP/Ward of the farmer\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARMER_VILLAGE]</td>\n                                            <td>{{\"This key will be used to bind village of the farmer\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[SERVICE_VERIFICATION]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARMER_CATEGORY]</td>\n                                            <td>{{\"This key will be used to bind caste category of the farmer\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARMER_FATHER]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARM_DISTRICT]</td>\n                                            <td>{{\"This key will be used to bind district of the farm\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARM_BLOCK]</td>\n                                            <td>{{\"This key will be used to bind block of the farm\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARM_GP]</td>\n                                            <td>{{\"This key will be used to bind GP of the farm\"}}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARM_VILLAGE]</td>\n                                            <td>{{\"This key will be used to bind Village of the farm\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[VALID_UPTO_6_MONTH]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[VALID_UPTO_12_MONTH]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[INSPECTION_DATE]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[INSPECTED_LAND_AREA]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[INSPECTED_TOTAL_LAND_AREA]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[INSPECTED_LAND_AREA_DEVELOPED]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[VALID_UPTO_24_MONTH]</td>\n                                            <td></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n\n                <div>\n                    <div class=\"table-responsive\">\n                        <table class=\"table table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\" style=\"width:50px\"> {{\"Sl No\" | translate}}</th>\n                                    <th scope=\"col\"> {{\"Label\" | translate}} <span class=\"text-danger\">*</span>\n                                    </th>\n                                    <th scope=\"col\">{{\"Key\" | translate}} <span class=\"text-danger\">*</span>\n                                    </th>\n                                    <th scope=\"col\">{{\"Value\" | translate}} <span class=\"text-danger\">*</span>\n                                    </th>\n                                    <th scope=\"col\" style=\"width:70px\">{{\"Action\" | translate}}</th>\n                                </tr>\n                            </thead>\n                            <tbody id=\"appendTr\">\n\n                                <tr *ngFor=\"let apiArray of dynamicListArray; let i = index;\">\n                                    <td>{{i+1}}</td>\n                                    <td>\n                                        <input class=\"form-control\" name=\"{{apiArray.vchLabel}}\"\n                                            [(ngModel)]=\"apiArray.vchLabel\" id=\"label_{{i}}\" type=\"text\" />\n                                    </td>\n                                    <td>\n                                        <input class=\"form-control\" name=\"{{apiArray.vchKey}}\"\n                                            [(ngModel)]=\"apiArray.vchKey\" id=\"key_{{i}}\" type=\"text\" />\n                                    </td>\n\n                                    <td>\n                                        <input class=\"form-control\" name=\"{{apiArray.vchValue}}\"\n                                            [(ngModel)]=\"apiArray.vchValue\" id=\"value_{{i}}\" type=\"text\" />\n                                    </td>\n                                    <td>\n                                        <button class=\"btn btn-danger px-2\" (click)=\"deleteApiRow(i, apiArray.intId)\"><i\n                                                class=\"icon-trash-alt\"></i></button>\n\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td colspan=\"6\">\n                                        <button class=\"btn btn-info btn-sm\" (click)=\"addRow()\">{{\"Add Row\" | translate}}  </button>\n                                    </td>\n\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <!--end::Form-->\n            </div>\n        </div>\n        <div class=\"card-footer text-center\">\n            <button class=\"btn btn-primary\" (click)=\"manageGetWayConfig()\">{{\"Submit\" | translate}}</button>\n            <button id=\"clear-all-fields\" class=\"btn btn-danger ml-1\">{{\"Reset\" | translate}}</button>\n        </div>\n    </div>\n</div>\n\n", styles: [""], dependencies: [{ kind: "directive", type: i7.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i8.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i8.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i8.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i8.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i8.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i8.MaxLengthValidator, selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }, { kind: "directive", type: i8.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i9.LibtabsComponent, selector: "lib-libtabs", inputs: ["tabMessage", "activeid"] }, { kind: "component", type: i10.LibutilsComponent, selector: "lib-libutils", inputs: ["childMessage", "sendIds", "funType", "pubUnpubStatus", "reloadUrl"], outputs: ["callfunction", "callfunction3"] }, { kind: "pipe", type: i11.TranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: AddgetwayComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-addgetway', template: "<!--  =============================================================================\n// File Name\t\t      : addgateway-config.component.html\n// Description \t              : This is used for config getway configuration\n// Created by                 : Bikash Kumar Panda\n// Created on                 : 17-May-2023\n// Designed by                : Bikash Kumar Panda\n// Designed on                : 17-May-2023\n// Developed by               : Bikash Kumar Panda\n// Developed on               : 18-May-2023\n// Style sheet                : addgateway-config.component.scss\n============================================================================= -->\n<!--===Page Title===-->\n<div class=\"page-title\">\n\n    <h4>{{title | translate}}</h4>\n</div>\n<!--===Page Title===-->\n<!--===controle section===-->\n<div class=\"page-controls-section\" id=\"page-content\">\n    <div class=\"card\">\n        <div class=\"controls-section-header\">\n          \n            <ul class=\"nav nav-tabs nav-fill\" role=\"tablist\">\n               <lib-libtabs *ngFor=\"let tablist of tablist\" [tabMessage]=\"tablist\"></lib-libtabs>\n              \n            </ul>\n            <div class=\"indicatorslist\">\n                <lib-libutils *ngFor=\"let utillist of utillist\" [childMessage]=\"utillist\"></lib-libutils>\n               \n            </div>\n\n        </div>\n        <div class=\"card-body\">\n            <div class=\"controls-section\">\n                <!--begin::Form-->\n                <div class=\"row mb-3\">\n                    <div class=\"col-lg-7\">\n                        <div class=\"row\">\n                            <label class=\"col-md-4 col-lg-4 mt-2\">*{{\"Type\" | translate}}</label>\n                            <div class=\"col-md-8 col-lg-7\">\n                                <div class=\"form-group\">\n                                    <select class=\"form-select\" [(ngModel)]=\"selType\" id=\"selType\" (change)='getgetwayNames()'>\n                                        <option value=\"0\"> {{\"Select\" | translate}}</option>\n                                        <option *ngFor=\"let gettype of getwaytypes;let i index\"\n                                            [value]=\"gettype.typeId\">{{gettype.typeName}}</option>\n                                    </select>\n\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <label class=\"col-md-4 col-lg-4 mt-2\">* {{\"Name\" | translate}} </label>\n                            <div class=\"col-md-8 col-lg-7\">\n                                <div class=\"form-group\">\n                                    <select class=\"form-select\" (change)='viewOldGetways()' id=\"selgetwayId\" [(ngModel)]=\"selgetwayId\">\n                                        <option value=\"0\" > {{\"Select\" | translate}}</option>\n                                        <option *ngFor=\"let gNames of getwayNamelist\" [value]=\"gNames.intId\">{{ \n                                            gNames.vchName }}</option>\n                                        <option value=\"other\">Other</option>\n                                    </select>\n                                    <input type=\"hidden\" [(ngModel)]=\"selgetwayName\">\n                                    <div *ngIf=\"selgetwayId == 'other' \">\n                                        <input type=\"text\" placeholder=\"Enter Name\" id=\"txtgetwaymName\"  class=\"form-control mt-3\"\n                                            [(ngModel)]=\"txtgetwaymName\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <label class=\"col-md-4 col-lg-4 mt-2\">*{{\"URL\" | translate}} </label>\n                            <div class=\"col-md-8 col-lg-7\">\n                                <div class=\"form-group\">\n                                    <input type=\"text\" class=\"form-control amhfld arabic\" name=\"vchUrl\"\n                                        [(ngModel)]=\"txtUrl\" id=\"txtUrl\" autocomplete=\"off\" value=\"\" maxlength=\"250\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <label class=\"col-md-4 col-lg-4 mt-2\">*{{\"Data post method\" | translate}}</label>\n                            <div class=\"col-md-8 col-lg-7\">\n                                <div class=\"form-group\">\n                                    <select name=\"selPostMethod\" id=\"selPostMethod\" [(ngModel)]=\"selPostmenthod\"\n                                        class=\"form-select\">\n                                        <option value=\"0\">{{\"Select\" | translate}}</option>\n                                        <option value=\"na\">NA</option>\n                                        <option value=\"get\">GET</option>\n                                        <option value=\"post\">POST</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <label class=\"col-md-4 col-lg-4 mt-2\">* {{\"Contact Address\" | translate}}</label>\n                            <div class=\"col-md-8 col-lg-7\">\n                                <div class=\"form-group\">\n                                    <textarea class=\"form-control\" [(ngModel)]=\"txtContactAddress\" id=\"txtContactAddress\" rows=\"2\" cols=\"2\">\n\n                                                                </textarea>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-5\">\n                        <div class=\"\">\n                            <h6 class=\"mb-1\"> {{\"Dynamic keys for value\" | translate}} </h6>\n                            <div class=\"overflow-auto pe-2\" style=\"height:270px;\">\n                                <table class=\"table table-bordered\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">{{\"Key\" | translate}}</th>\n                                            <th scope=\"col\">{{\"Description\" | translate}}</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td>[APPLICANT_MOBILE]</td>\n                                            <td>{{\"This key will be used to fetch the applicant mobile number\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[APPLICANT_NAME]</td>\n                                            <td>{{\"This key will be used to bind the SMS content\"}}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>[APP_NO]</td>\n                                            <td>{{\"This key will be used to bind the Application number\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[APP_DATE]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[APP_SLNO]</td>\n                                            <td>{{\"This key will be used to bind the Letter number\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARMER_DIST]</td>\n                                            <td>{{\"This key will be used to bind district of the  farmer\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARMER_BLOCK]</td>\n                                            <td>{{\"This key will be used to bind block/ULB of the farmer\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARMER_GP]</td>\n                                            <td>{{\"This key will be used to bind GP/Ward of the farmer\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARMER_VILLAGE]</td>\n                                            <td>{{\"This key will be used to bind village of the farmer\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[SERVICE_VERIFICATION]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARMER_CATEGORY]</td>\n                                            <td>{{\"This key will be used to bind caste category of the farmer\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARMER_FATHER]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARM_DISTRICT]</td>\n                                            <td>{{\"This key will be used to bind district of the farm\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARM_BLOCK]</td>\n                                            <td>{{\"This key will be used to bind block of the farm\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARM_GP]</td>\n                                            <td>{{\"This key will be used to bind GP of the farm\"}}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARM_VILLAGE]</td>\n                                            <td>{{\"This key will be used to bind Village of the farm\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[VALID_UPTO_6_MONTH]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[VALID_UPTO_12_MONTH]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[INSPECTION_DATE]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[INSPECTED_LAND_AREA]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[INSPECTED_TOTAL_LAND_AREA]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[INSPECTED_LAND_AREA_DEVELOPED]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[VALID_UPTO_24_MONTH]</td>\n                                            <td></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n\n                <div>\n                    <div class=\"table-responsive\">\n                        <table class=\"table table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\" style=\"width:50px\"> {{\"Sl No\" | translate}}</th>\n                                    <th scope=\"col\"> {{\"Label\" | translate}} <span class=\"text-danger\">*</span>\n                                    </th>\n                                    <th scope=\"col\">{{\"Key\" | translate}} <span class=\"text-danger\">*</span>\n                                    </th>\n                                    <th scope=\"col\">{{\"Value\" | translate}} <span class=\"text-danger\">*</span>\n                                    </th>\n                                    <th scope=\"col\" style=\"width:70px\">{{\"Action\" | translate}}</th>\n                                </tr>\n                            </thead>\n                            <tbody id=\"appendTr\">\n\n                                <tr *ngFor=\"let apiArray of dynamicListArray; let i = index;\">\n                                    <td>{{i+1}}</td>\n                                    <td>\n                                        <input class=\"form-control\" name=\"{{apiArray.vchLabel}}\"\n                                            [(ngModel)]=\"apiArray.vchLabel\" id=\"label_{{i}}\" type=\"text\" />\n                                    </td>\n                                    <td>\n                                        <input class=\"form-control\" name=\"{{apiArray.vchKey}}\"\n                                            [(ngModel)]=\"apiArray.vchKey\" id=\"key_{{i}}\" type=\"text\" />\n                                    </td>\n\n                                    <td>\n                                        <input class=\"form-control\" name=\"{{apiArray.vchValue}}\"\n                                            [(ngModel)]=\"apiArray.vchValue\" id=\"value_{{i}}\" type=\"text\" />\n                                    </td>\n                                    <td>\n                                        <button class=\"btn btn-danger px-2\" (click)=\"deleteApiRow(i, apiArray.intId)\"><i\n                                                class=\"icon-trash-alt\"></i></button>\n\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td colspan=\"6\">\n                                        <button class=\"btn btn-info btn-sm\" (click)=\"addRow()\">{{\"Add Row\" | translate}}  </button>\n                                    </td>\n\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <!--end::Form-->\n            </div>\n        </div>\n        <div class=\"card-footer text-center\">\n            <button class=\"btn btn-primary\" (click)=\"manageGetWayConfig()\">{{\"Submit\" | translate}}</button>\n            <button id=\"clear-all-fields\" class=\"btn btn-danger ml-1\">{{\"Reset\" | translate}}</button>\n        </div>\n    </div>\n</div>\n\n" }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i2.HttpClient }, { type: i3.MsgengineLibService }, { type: i4.ValidatorchecklistService }, { type: i5.EncrypyDecrpyService }, { type: i6.VarlistService }]; } });
//# sourceMappingURL=data:application/json;base64,