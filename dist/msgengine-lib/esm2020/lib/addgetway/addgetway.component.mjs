import { Component } from '@angular/core';
import Swal from 'sweetalert2';
import * as CryptoJS from 'crypto-js';
import { Buffer } from 'buffer';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@angular/common/http";
import * as i3 from "../msgengine-lib.service";
import * as i4 from "../validationchecklist.service";
import * as i5 from "../encrypy-decrpy.service";
import * as i6 from "../varlist.service";
import * as i7 from "@angular/common";
import * as i8 from "@angular/forms";
import * as i9 from "../libtabs/libtabs.component";
import * as i10 from "../libutils/libutils.component";
import * as i11 from "../translate.pipe";
export class AddgetwayComponent {
    //\\ ======================== // Variables // ======================== //\\ 
    constructor(route, httpClient, commonserveice, vldChkLst, encDec, varlist) {
        this.route = route;
        this.httpClient = httpClient;
        this.commonserveice = commonserveice;
        this.vldChkLst = vldChkLst;
        this.encDec = encDec;
        this.varlist = varlist;
        this.jsonurl = [{
                "pagetitle": "Gateway Configuration",
                "tabList": [{
                        "tabName": "Add",
                        "tabUrl": "../addgateway",
                        "tabClass": "active"
                    },
                    {
                        "tabName": "View",
                        "tabUrl": "../viewgateway"
                    }
                ],
                "utils": [{
                        "utilName": "mandatory"
                    }
                ],
            }];
        this.messaageslist = {
            "successMsg": "Data saved successfully",
            "updatesuccessMsg": "Data Updated successfully",
            "errorMsg": "Error in database",
            "warningtype": "You want to delete this record",
            "msgApilabel": "Label can not be blank",
            "msgApikey": "Key can not be blank",
            "msgApivalue": "Value can not be blank",
            "getwayType": "Gateway type",
            "getwayName": "Gateway name",
            "getwayURl": "Enter Gateway Url",
            "methodtype": "method type",
            "contactaddress": "Enter contact address",
            "msggetwayName": "Enter Gateway name"
        };
        this.selType = 0;
        this.selgetwayName = 0;
        this.selgetwayId = 0;
        this.dynamicListArray = [];
        this.selPostmenthod = 0;
        this.langKey = 'en';
    }
    ngOnInit() {
        this.loadconfig();
        this.getGetwaytypes();
        // this.addChangeEventForLabel();
    }
    loadconfig() {
        this.tablist = this.jsonurl[0].tabList;
        this.utillist = this.jsonurl[0].utils;
        this.title = this.jsonurl[0].pagetitle;
    }
    multilingual(test) {
        return test;
    }
    //\\ ======================== // Get getway types // ======================== //\\ 
    getGetwaytypes() {
        let getwayparm = {};
        this.commonserveice.viewGatwayTypes(getwayparm).subscribe({
            next: (response) => {
                let respData = response.RESPONSE_DATA;
                let respToken = response.RESPONSE_TOKEN;
                let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();
                if (respToken == verifyToken) {
                    let res = Buffer.from(respData, 'base64');
                    res = JSON.parse(res.toString());
                    if (res.status == "200") {
                        this.getwaytypes = res.result;
                    }
                    else if (res.status == 501) {
                        this.commonserveice.directlogoutlib();
                    }
                    else {
                        this.commonserveice.swalfire('error', this.commonserveice.langReplace(res.message));
                    }
                }
                else {
                    this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                }
            },
            error: (msg) => {
                this.commonserveice.directlogoutlib();
            }
        });
    }
    //\\ ======================== // Get getway types // ======================== //\\ 
    //\\ ======================== // Get getway Names // ======================== //\\ 
    getgetwayNames() {
        let typeid = this.selType;
        this.getwayNamelist = [];
        this.selgetwayId = "0";
        let formParams = {
            "Type": typeid
        };
        this.commonserveice.getGetwayName(formParams).subscribe({
            next: (response) => {
                let respData = response.RESPONSE_DATA;
                let respToken = response.RESPONSE_TOKEN;
                let res = Buffer.from(respData, 'base64');
                let responseResult = JSON.parse(res.toString());
                let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();
                if (respToken == verifyToken) {
                    if (responseResult.status == "200") {
                        this.getwayNamelist = responseResult.result;
                    }
                    else if (responseResult.status == 400) {
                    }
                    else if (responseResult.status == 501) {
                        this.commonserveice.directlogoutlib();
                    }
                    else {
                        this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.somethingWrong));
                    }
                }
                else {
                    this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                }
            },
            error: (msg) => {
                this.commonserveice.directlogoutlib();
            }
        });
    }
    //\\ ======================== // Get getway Names // ======================== //\\ 
    //\\ ======================== // Addmore Rows // ======================== //\\ 
    addRow() {
        let lastChild = this.dynamicListArray[this.dynamicListArray.length - 1];
        if (this.dynamicListArray.length > 0) {
            //if(!this.vldChkLst.blankCheck(this.txtUrl, this.messaageslist.getwayURl,'txtUrl'))
            if (lastChild.vchLabel === '' || typeof (lastChild.vchLabel) == undefined || lastChild.vchLabel == null) {
                Swal.fire({
                    icon: 'error',
                    text: this.commonserveice.langReplace(this.messaageslist.msgApilabel),
                });
            }
            else if (lastChild.vchKey === '' || typeof (lastChild.vchKey) == undefined || lastChild.vchKey == null) {
                Swal.fire({
                    icon: 'error',
                    text: this.commonserveice.langReplace(this.messaageslist.msgApikey),
                });
            }
            else if (lastChild.vchValue === '' || typeof (lastChild.vchValue) == undefined || lastChild.vchValue == null) {
                Swal.fire({
                    icon: 'error',
                    text: this.commonserveice.langReplace(this.messaageslist.msgApivalue),
                });
            }
            else {
                this.dynamicListArray.push({
                    intId: '',
                    vchLabel: '',
                    vchKey: '',
                    vchValue: ''
                });
            }
        }
        else {
            this.dynamicListArray.push({
                intId: '',
                vchLabel: '',
                vchKey: '',
                vchValue: ''
            });
        }
    }
    //\\ ======================== // Addmore Rows // ======================== //\\ 
    deleteApiRow(i, id) {
        let formParams = {
            "intId": id
        };
        Swal.fire({
            title: this.commonserveice.langReplace('Are you sure') + ' ?',
            text: this.messaageslist.warningtype,
            icon: 'warning',
            showCancelButton: true,
            cancelButtonText: this.commonserveice.langReplace('Cancel'),
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: this.commonserveice.langReplace('Yes') + ',' + this.commonserveice.langReplace('delete it') + "!"
        }).then((result) => {
            if (result.isConfirmed) {
                if (this.selgetwayId == "other") {
                    //   alert("yes")
                    this.dynamicListArray.splice(i, 1);
                }
                else {
                    this.commonserveice.deleteGetwayConfig(formParams).subscribe({
                        next: (response) => {
                            let respData = response.RESPONSE_DATA;
                            let respToken = response.RESPONSE_TOKEN;
                            let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();
                            if (respToken == verifyToken) {
                                let res = Buffer.from(respData, 'base64');
                                res = JSON.parse(res.toString());
                                if (res.status == 200) {
                                    Swal.fire(this.commonserveice.langReplace('Deleted') + '!', this.commonserveice.langReplace(this.messaageslist.deleteMsg), 'success');
                                    this.dynamicListArray.splice(i, 1);
                                    this.viewOldGetways();
                                }
                                else if (res.status == 417) {
                                    this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                                }
                                else {
                                    this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.messaageslist.errorMsg));
                                }
                            }
                            else {
                                this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.invalidResponse));
                            }
                        },
                        error: (msg) => {
                            this.commonserveice.directlogoutlib();
                        }
                    });
                }
            }
        });
    }
    //\\ ======================== // Get old getway details // ======================== //\\
    viewOldGetways() {
        this.dynamicListArray = [];
        this.txtUrl = '';
        this.selPostmenthod = "0";
        this.txtContactAddress = "";
        this.selgetwayName = "";
        let typeid = this.selType;
        let intid = this.selgetwayId;
        if (intid != "other") {
            let formParams = {
                "typeId": typeid,
                "intId": intid
            };
            this.commonserveice.getPrevDetails(formParams).subscribe({
                next: (response) => {
                    let respData = response.RESPONSE_DATA;
                    let respToken = response.RESPONSE_TOKEN;
                    let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();
                    if (respToken == verifyToken) {
                        let res = Buffer.from(respData, 'base64');
                        let responseResult = JSON.parse(res);
                        if (responseResult.status == 200) {
                            this.getDetailslist = responseResult.result;
                            let getDtlsres = this.getDetailslist.result;
                            console.log(this.getDetailslist);
                            this.txtUrl = this.getDetailslist.data[0].url;
                            this.selPostmenthod = this.getDetailslist.data[0].dataPostMethod;
                            this.txtContactAddress = this.getDetailslist.data[0].contactaddress;
                            this.selgetwayName = this.getDetailslist.data[0].vchName;
                            for (let i = 0; i <= getDtlsres.length; i++) {
                                let obj = {};
                                obj["intId"] = getDtlsres[i].intId;
                                obj["vchLabel"] = getDtlsres[i].vchLabel;
                                obj["vchKey"] = getDtlsres[i].vchKey;
                                obj["vchValue"] = getDtlsres[i].vchValue;
                                this.dynamicListArray.push(obj);
                            }
                        }
                        else if (responseResult.status == 501) {
                            this.commonserveice.directlogoutlib();
                        }
                        else {
                            this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.somethingWrong));
                        }
                    }
                    else {
                        this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.somethingWrong));
                    }
                },
                error: (msg) => {
                    this.commonserveice.directlogoutlib();
                }
            });
        }
    }
    //\\ ======================== // Get old getway details // ======================== //\\ 
    //\\ ======================== // Create New configuration // ======================== //\\ 
    manageGetWayConfig() {
        let lastChild = this.dynamicListArray[this.dynamicListArray.length - 1];
        if (!this.vldChkLst.selectDropdown(this.selType, this.commonserveice.langReplace(this.messaageslist.getwayType), 'selType')) { }
        else if (!this.vldChkLst.selectDropdown(this.selgetwayId, this.commonserveice.langReplace(this.messaageslist.getwayName), 'selgetwayId')) { }
        else if ((this.selgetwayId == "other") && (!this.vldChkLst.blankCheck(this.txtgetwaymName, this.commonserveice.langReplace(this.messaageslist.msggetwayName), 'txtgetwaymName'))) { }
        else if (!this.vldChkLst.blankCheck(this.txtUrl, this.commonserveice.langReplace(this.messaageslist.getwayURl), 'txtUrl')) { }
        else if (!this.vldChkLst.is_url(this.txtUrl)) { }
        else if (!this.vldChkLst.selectDropdown(this.selPostmenthod, this.commonserveice.langReplace(this.messaageslist.methodtype), 'selPostMethod')) { }
        else if (!this.vldChkLst.blankCheck(this.txtContactAddress, this.commonserveice.langReplace(this.messaageslist.contactaddress), 'txtContactAddress')) { }
        else if (this.dynamicListArray.length == 0) {
            this.commonserveice.swalfire('error', this.commonserveice.langReplace("Add key values"));
        }
        else if ((this.dynamicListArray.length > 0) && (!this.vldChkLst.blankCheck(lastChild.vchLabel, this.commonserveice.langReplace(this.messaageslist.msgApilabel)))) { }
        else if ((this.dynamicListArray.length > 0) && (!this.vldChkLst.blankCheck(lastChild.vchKey, this.commonserveice.langReplace(this.messaageslist.msgApikey)))) { }
        else if ((this.dynamicListArray.length > 0) && (!this.vldChkLst.blankCheck(lastChild.vchValue, this.commonserveice.langReplace(this.messaageslist.msgApivalue)))) { }
        else {
            let selctgetwayid;
            let getwayName;
            if (this.selgetwayId == 'other') {
                selctgetwayid = '';
                getwayName = this.txtgetwaymName;
            }
            else {
                selctgetwayid = this.selgetwayId;
                getwayName = this.selgetwayName;
            }
            let docParams = {
                "itemId": selctgetwayid,
                "typeId": this.selType,
                "name": getwayName,
                "vchUrl": this.txtUrl,
                "vchDataPostMethod": this.selPostmenthod,
                "vchContactAddress": this.txtContactAddress,
                "itemStatus": "",
                "allDocsdata": this.dynamicListArray
            };
            this.commonserveice.newGetwayConfig(docParams).subscribe({
                next: (response) => {
                    let respData = response.RESPONSE_DATA;
                    let respToken = response.RESPONSE_TOKEN;
                    let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();
                    if (respToken == verifyToken) {
                        let res = Buffer.from(respData, 'base64');
                        let responseResult = JSON.parse(res);
                        if (responseResult.status == 200) {
                            Swal.fire({
                                text: this.commonserveice.langReplace(this.messaageslist.successMsg),
                                icon: 'success',
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: this.commonserveice.langReplace('Ok')
                            }).then((result) => {
                                this.resetform();
                                this.route.navigate(['admin/viewgateway']);
                            });
                        }
                        else if (responseResult.status == 202) {
                            // this.loading=false;
                            Swal.fire({
                                text: this.commonserveice.langReplace(this.messaageslist.updatesuccessMsg),
                                icon: 'success',
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: this.commonserveice.langReplace('Ok')
                            }).then((result) => {
                                this.resetform();
                                this.route.navigate(['admin/viewgateway']);
                            });
                        }
                        else if (responseResult.status == 501) {
                            this.commonserveice.directlogoutlib();
                        }
                        else if (responseResult.status == 400) {
                            this.commonserveice.swalfire('error', this.commonserveice.langReplace(responseResult.message.metaName[0]));
                            // this.loading=false;
                        }
                        else {
                            //this.loading=false;
                            this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.somethingWrong));
                        }
                    }
                    else {
                        this.commonserveice.swalfire('error', this.commonserveice.langReplace(this.varlist.somethingWrong));
                    }
                },
                error: (msg) => {
                    this.commonserveice.directlogoutlib();
                }
            });
        }
    }
    //\\ ======================== // Create New configuration // ======================== //\\ 
    //\\ ======================== // Reset Form // ======================== //\\ 
    resetform() {
        this.selType = 0;
        this.selgetwayId = 0;
        this.txtContactAddress = null;
        this.selPostmenthod = 0;
        this.txtUrl = null;
        this.txtContactAddress = null;
        this.selgetwayName = 0;
        this.dynamicListArray = [];
    }
}
AddgetwayComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: AddgetwayComponent, deps: [{ token: i1.Router }, { token: i2.HttpClient }, { token: i3.MsgengineLibService }, { token: i4.ValidatorchecklistService }, { token: i5.EncrypyDecrpyService }, { token: i6.VarlistService }], target: i0.ɵɵFactoryTarget.Component });
AddgetwayComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: AddgetwayComponent, selector: "lib-addgetway", ngImport: i0, template: "<!--  =============================================================================\r\n// File Name\t\t      : addgateway-config.component.html\r\n// Description \t              : This is used for config getway configuration\r\n// Created by                 : Bikash Kumar Panda\r\n// Created on                 : 17-May-2023\r\n// Designed by                : Bikash Kumar Panda\r\n// Designed on                : 17-May-2023\r\n// Developed by               : Bikash Kumar Panda\r\n// Developed on               : 18-May-2023\r\n// Style sheet                : addgateway-config.component.scss\r\n============================================================================= -->\r\n<!--===Page Title===-->\r\n<div class=\"page-title\">\r\n\r\n    <h4>{{title | translate}}</h4>\r\n</div>\r\n<!--===Page Title===-->\r\n<!--===controle section===-->\r\n<div class=\"page-controls-section\" id=\"page-content\">\r\n    <div class=\"card\">\r\n        <div class=\"controls-section-header\">\r\n          \r\n            <ul class=\"nav nav-tabs nav-fill\" role=\"tablist\">\r\n               <lib-libtabs *ngFor=\"let tablist of tablist\" [tabMessage]=\"tablist\"></lib-libtabs>\r\n              \r\n            </ul>\r\n            <div class=\"indicatorslist\">\r\n                <lib-libutils *ngFor=\"let utillist of utillist\" [childMessage]=\"utillist\"></lib-libutils>\r\n               \r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"controls-section\">\r\n                <!--begin::Form-->\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-lg-7\">\r\n                        <div class=\"row\">\r\n                            <label class=\"col-md-4 col-lg-4 mt-2\">*{{\"Type\" | translate}}</label>\r\n                            <div class=\"col-md-8 col-lg-7\">\r\n                                <div class=\"form-group\">\r\n                                    <select class=\"form-select\" [(ngModel)]=\"selType\" id=\"selType\" (change)='getgetwayNames()'>\r\n                                        <option value=\"0\"> {{\"Select\" | translate}}</option>\r\n                                        <option *ngFor=\"let gettype of getwaytypes;let i index\"\r\n                                            [value]=\"gettype.typeId\">{{gettype.typeName}}</option>\r\n                                    </select>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <label class=\"col-md-4 col-lg-4 mt-2\">* {{\"Name\" | translate}} </label>\r\n                            <div class=\"col-md-8 col-lg-7\">\r\n                                <div class=\"form-group\">\r\n                                    <select class=\"form-select\" (change)='viewOldGetways()' id=\"selgetwayId\" [(ngModel)]=\"selgetwayId\">\r\n                                        <option value=\"0\" > {{\"Select\" | translate}}</option>\r\n                                        <option *ngFor=\"let gNames of getwayNamelist\" [value]=\"gNames.intId\">{{ \r\n                                            gNames.vchName }}</option>\r\n                                        <option value=\"other\">Other</option>\r\n                                    </select>\r\n                                    <input type=\"hidden\" [(ngModel)]=\"selgetwayName\">\r\n                                    <div *ngIf=\"selgetwayId == 'other' \">\r\n                                        <input type=\"text\" placeholder=\"Enter Name\" id=\"txtgetwaymName\"  class=\"form-control mt-3\"\r\n                                            [(ngModel)]=\"txtgetwaymName\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <label class=\"col-md-4 col-lg-4 mt-2\">*{{\"URL\" | translate}} </label>\r\n                            <div class=\"col-md-8 col-lg-7\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" class=\"form-control amhfld arabic\" name=\"vchUrl\"\r\n                                        [(ngModel)]=\"txtUrl\" id=\"txtUrl\" autocomplete=\"off\" value=\"\" maxlength=\"250\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <label class=\"col-md-4 col-lg-4 mt-2\">*{{\"Data post method\" | translate}}</label>\r\n                            <div class=\"col-md-8 col-lg-7\">\r\n                                <div class=\"form-group\">\r\n                                    <select name=\"selPostMethod\" id=\"selPostMethod\" [(ngModel)]=\"selPostmenthod\"\r\n                                        class=\"form-select\">\r\n                                        <option value=\"0\">{{\"Select\" | translate}}</option>\r\n                                        <option value=\"na\">NA</option>\r\n                                        <option value=\"get\">GET</option>\r\n                                        <option value=\"post\">POST</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <label class=\"col-md-4 col-lg-4 mt-2\">* {{\"Contact Address\" | translate}}</label>\r\n                            <div class=\"col-md-8 col-lg-7\">\r\n                                <div class=\"form-group\">\r\n                                    <textarea class=\"form-control\" [(ngModel)]=\"txtContactAddress\" id=\"txtContactAddress\" rows=\"2\" cols=\"2\">\r\n\r\n                                                                </textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-5\">\r\n                        <div class=\"\">\r\n                            <h6 class=\"mb-1\"> {{\"Dynamic keys for value\" | translate}} </h6>\r\n                            <div class=\"overflow-auto pe-2\" style=\"height:270px;\">\r\n                                <table class=\"table table-bordered\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">{{\"Key\" | translate}}</th>\r\n                                            <th scope=\"col\">{{\"Description\" | translate}}</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>[APPLICANT_MOBILE]</td>\r\n                                            <td>{{\"This key will be used to fetch the applicant mobile number\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[APPLICANT_NAME]</td>\r\n                                            <td>{{\"This key will be used to bind the SMS content\"}}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[APP_NO]</td>\r\n                                            <td>{{\"This key will be used to bind the Application number\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[APP_DATE]</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[APP_SLNO]</td>\r\n                                            <td>{{\"This key will be used to bind the Letter number\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[FARMER_DIST]</td>\r\n                                            <td>{{\"This key will be used to bind district of the  farmer\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[FARMER_BLOCK]</td>\r\n                                            <td>{{\"This key will be used to bind block/ULB of the farmer\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[FARMER_GP]</td>\r\n                                            <td>{{\"This key will be used to bind GP/Ward of the farmer\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[FARMER_VILLAGE]</td>\r\n                                            <td>{{\"This key will be used to bind village of the farmer\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[SERVICE_VERIFICATION]</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[FARMER_CATEGORY]</td>\r\n                                            <td>{{\"This key will be used to bind caste category of the farmer\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[FARMER_FATHER]</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[FARM_DISTRICT]</td>\r\n                                            <td>{{\"This key will be used to bind district of the farm\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[FARM_BLOCK]</td>\r\n                                            <td>{{\"This key will be used to bind block of the farm\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[FARM_GP]</td>\r\n                                            <td>{{\"This key will be used to bind GP of the farm\"}}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[FARM_VILLAGE]</td>\r\n                                            <td>{{\"This key will be used to bind Village of the farm\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[VALID_UPTO_6_MONTH]</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[VALID_UPTO_12_MONTH]</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[INSPECTION_DATE]</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[INSPECTED_LAND_AREA]</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[INSPECTED_TOTAL_LAND_AREA]</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[INSPECTED_LAND_AREA_DEVELOPED]</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[VALID_UPTO_24_MONTH]</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div>\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\" style=\"width:50px\"> {{\"Sl No.\" | translate}}</th>\r\n                                    <th scope=\"col\"> {{\"Label\" | translate}} <span class=\"text-danger\">*</span>\r\n                                    </th>\r\n                                    <th scope=\"col\">{{\"Key\" | translate}} <span class=\"text-danger\">*</span>\r\n                                    </th>\r\n                                    <th scope=\"col\">{{\"Value\" | translate}} <span class=\"text-danger\">*</span>\r\n                                    </th>\r\n                                    <th scope=\"col\" style=\"width:70px\">{{\"Action\" | translate}}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody id=\"appendTr\">\r\n\r\n                                <tr *ngFor=\"let apiArray of dynamicListArray; let i = index;\">\r\n                                    <td>{{i+1}}</td>\r\n                                    <td>\r\n                                        <input class=\"form-control\" name=\"{{apiArray.vchLabel}}\"\r\n                                            [(ngModel)]=\"apiArray.vchLabel\" id=\"label_{{i}}\" type=\"text\" />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input class=\"form-control\" name=\"{{apiArray.vchKey}}\"\r\n                                            [(ngModel)]=\"apiArray.vchKey\" id=\"key_{{i}}\" type=\"text\" />\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <input class=\"form-control\" name=\"{{apiArray.vchValue}}\"\r\n                                            [(ngModel)]=\"apiArray.vchValue\" id=\"value_{{i}}\" type=\"text\" />\r\n                                    </td>\r\n                                    <td>\r\n                                        <button class=\"btn btn-danger px-2\" (click)=\"deleteApiRow(i, apiArray.intId)\"><i\r\n                                                class=\"icon-trash-alt\"></i></button>\r\n\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td colspan=\"6\">\r\n                                        <button class=\"btn btn-info btn-sm\" (click)=\"addRow()\">{{\"Add Row\" | translate}}  </button>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <!--end::Form-->\r\n            </div>\r\n        </div>\r\n        <div class=\"card-footer text-center\">\r\n            <button class=\"btn btn-primary\" (click)=\"manageGetWayConfig()\">{{\"Submit\" | translate}}</button>\r\n            <button id=\"clear-all-fields\" class=\"btn btn-danger ml-1\">{{\"Reset\" | translate}}</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n", styles: [""], dependencies: [{ kind: "directive", type: i7.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i8.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i8.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i8.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i8.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i8.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i8.MaxLengthValidator, selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }, { kind: "directive", type: i8.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i9.LibtabsComponent, selector: "lib-libtabs", inputs: ["tabMessage", "activeid"] }, { kind: "component", type: i10.LibutilsComponent, selector: "lib-libutils", inputs: ["childMessage", "sendIds", "funType", "pubUnpubStatus", "reloadUrl"], outputs: ["callfunction", "callfunction3"] }, { kind: "pipe", type: i11.TranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: AddgetwayComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-addgetway', template: "<!--  =============================================================================\r\n// File Name\t\t      : addgateway-config.component.html\r\n// Description \t              : This is used for config getway configuration\r\n// Created by                 : Bikash Kumar Panda\r\n// Created on                 : 17-May-2023\r\n// Designed by                : Bikash Kumar Panda\r\n// Designed on                : 17-May-2023\r\n// Developed by               : Bikash Kumar Panda\r\n// Developed on               : 18-May-2023\r\n// Style sheet                : addgateway-config.component.scss\r\n============================================================================= -->\r\n<!--===Page Title===-->\r\n<div class=\"page-title\">\r\n\r\n    <h4>{{title | translate}}</h4>\r\n</div>\r\n<!--===Page Title===-->\r\n<!--===controle section===-->\r\n<div class=\"page-controls-section\" id=\"page-content\">\r\n    <div class=\"card\">\r\n        <div class=\"controls-section-header\">\r\n          \r\n            <ul class=\"nav nav-tabs nav-fill\" role=\"tablist\">\r\n               <lib-libtabs *ngFor=\"let tablist of tablist\" [tabMessage]=\"tablist\"></lib-libtabs>\r\n              \r\n            </ul>\r\n            <div class=\"indicatorslist\">\r\n                <lib-libutils *ngFor=\"let utillist of utillist\" [childMessage]=\"utillist\"></lib-libutils>\r\n               \r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"controls-section\">\r\n                <!--begin::Form-->\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-lg-7\">\r\n                        <div class=\"row\">\r\n                            <label class=\"col-md-4 col-lg-4 mt-2\">*{{\"Type\" | translate}}</label>\r\n                            <div class=\"col-md-8 col-lg-7\">\r\n                                <div class=\"form-group\">\r\n                                    <select class=\"form-select\" [(ngModel)]=\"selType\" id=\"selType\" (change)='getgetwayNames()'>\r\n                                        <option value=\"0\"> {{\"Select\" | translate}}</option>\r\n                                        <option *ngFor=\"let gettype of getwaytypes;let i index\"\r\n                                            [value]=\"gettype.typeId\">{{gettype.typeName}}</option>\r\n                                    </select>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <label class=\"col-md-4 col-lg-4 mt-2\">* {{\"Name\" | translate}} </label>\r\n                            <div class=\"col-md-8 col-lg-7\">\r\n                                <div class=\"form-group\">\r\n                                    <select class=\"form-select\" (change)='viewOldGetways()' id=\"selgetwayId\" [(ngModel)]=\"selgetwayId\">\r\n                                        <option value=\"0\" > {{\"Select\" | translate}}</option>\r\n                                        <option *ngFor=\"let gNames of getwayNamelist\" [value]=\"gNames.intId\">{{ \r\n                                            gNames.vchName }}</option>\r\n                                        <option value=\"other\">Other</option>\r\n                                    </select>\r\n                                    <input type=\"hidden\" [(ngModel)]=\"selgetwayName\">\r\n                                    <div *ngIf=\"selgetwayId == 'other' \">\r\n                                        <input type=\"text\" placeholder=\"Enter Name\" id=\"txtgetwaymName\"  class=\"form-control mt-3\"\r\n                                            [(ngModel)]=\"txtgetwaymName\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <label class=\"col-md-4 col-lg-4 mt-2\">*{{\"URL\" | translate}} </label>\r\n                            <div class=\"col-md-8 col-lg-7\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" class=\"form-control amhfld arabic\" name=\"vchUrl\"\r\n                                        [(ngModel)]=\"txtUrl\" id=\"txtUrl\" autocomplete=\"off\" value=\"\" maxlength=\"250\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <label class=\"col-md-4 col-lg-4 mt-2\">*{{\"Data post method\" | translate}}</label>\r\n                            <div class=\"col-md-8 col-lg-7\">\r\n                                <div class=\"form-group\">\r\n                                    <select name=\"selPostMethod\" id=\"selPostMethod\" [(ngModel)]=\"selPostmenthod\"\r\n                                        class=\"form-select\">\r\n                                        <option value=\"0\">{{\"Select\" | translate}}</option>\r\n                                        <option value=\"na\">NA</option>\r\n                                        <option value=\"get\">GET</option>\r\n                                        <option value=\"post\">POST</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <label class=\"col-md-4 col-lg-4 mt-2\">* {{\"Contact Address\" | translate}}</label>\r\n                            <div class=\"col-md-8 col-lg-7\">\r\n                                <div class=\"form-group\">\r\n                                    <textarea class=\"form-control\" [(ngModel)]=\"txtContactAddress\" id=\"txtContactAddress\" rows=\"2\" cols=\"2\">\r\n\r\n                                                                </textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-5\">\r\n                        <div class=\"\">\r\n                            <h6 class=\"mb-1\"> {{\"Dynamic keys for value\" | translate}} </h6>\r\n                            <div class=\"overflow-auto pe-2\" style=\"height:270px;\">\r\n                                <table class=\"table table-bordered\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">{{\"Key\" | translate}}</th>\r\n                                            <th scope=\"col\">{{\"Description\" | translate}}</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>[APPLICANT_MOBILE]</td>\r\n                                            <td>{{\"This key will be used to fetch the applicant mobile number\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[APPLICANT_NAME]</td>\r\n                                            <td>{{\"This key will be used to bind the SMS content\"}}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[APP_NO]</td>\r\n                                            <td>{{\"This key will be used to bind the Application number\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[APP_DATE]</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[APP_SLNO]</td>\r\n                                            <td>{{\"This key will be used to bind the Letter number\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[FARMER_DIST]</td>\r\n                                            <td>{{\"This key will be used to bind district of the  farmer\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[FARMER_BLOCK]</td>\r\n                                            <td>{{\"This key will be used to bind block/ULB of the farmer\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[FARMER_GP]</td>\r\n                                            <td>{{\"This key will be used to bind GP/Ward of the farmer\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[FARMER_VILLAGE]</td>\r\n                                            <td>{{\"This key will be used to bind village of the farmer\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[SERVICE_VERIFICATION]</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[FARMER_CATEGORY]</td>\r\n                                            <td>{{\"This key will be used to bind caste category of the farmer\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[FARMER_FATHER]</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[FARM_DISTRICT]</td>\r\n                                            <td>{{\"This key will be used to bind district of the farm\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[FARM_BLOCK]</td>\r\n                                            <td>{{\"This key will be used to bind block of the farm\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[FARM_GP]</td>\r\n                                            <td>{{\"This key will be used to bind GP of the farm\"}}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[FARM_VILLAGE]</td>\r\n                                            <td>{{\"This key will be used to bind Village of the farm\"}}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[VALID_UPTO_6_MONTH]</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[VALID_UPTO_12_MONTH]</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[INSPECTION_DATE]</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[INSPECTED_LAND_AREA]</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[INSPECTED_TOTAL_LAND_AREA]</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[INSPECTED_LAND_AREA_DEVELOPED]</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>[VALID_UPTO_24_MONTH]</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div>\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\" style=\"width:50px\"> {{\"Sl No.\" | translate}}</th>\r\n                                    <th scope=\"col\"> {{\"Label\" | translate}} <span class=\"text-danger\">*</span>\r\n                                    </th>\r\n                                    <th scope=\"col\">{{\"Key\" | translate}} <span class=\"text-danger\">*</span>\r\n                                    </th>\r\n                                    <th scope=\"col\">{{\"Value\" | translate}} <span class=\"text-danger\">*</span>\r\n                                    </th>\r\n                                    <th scope=\"col\" style=\"width:70px\">{{\"Action\" | translate}}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody id=\"appendTr\">\r\n\r\n                                <tr *ngFor=\"let apiArray of dynamicListArray; let i = index;\">\r\n                                    <td>{{i+1}}</td>\r\n                                    <td>\r\n                                        <input class=\"form-control\" name=\"{{apiArray.vchLabel}}\"\r\n                                            [(ngModel)]=\"apiArray.vchLabel\" id=\"label_{{i}}\" type=\"text\" />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input class=\"form-control\" name=\"{{apiArray.vchKey}}\"\r\n                                            [(ngModel)]=\"apiArray.vchKey\" id=\"key_{{i}}\" type=\"text\" />\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <input class=\"form-control\" name=\"{{apiArray.vchValue}}\"\r\n                                            [(ngModel)]=\"apiArray.vchValue\" id=\"value_{{i}}\" type=\"text\" />\r\n                                    </td>\r\n                                    <td>\r\n                                        <button class=\"btn btn-danger px-2\" (click)=\"deleteApiRow(i, apiArray.intId)\"><i\r\n                                                class=\"icon-trash-alt\"></i></button>\r\n\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td colspan=\"6\">\r\n                                        <button class=\"btn btn-info btn-sm\" (click)=\"addRow()\">{{\"Add Row\" | translate}}  </button>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <!--end::Form-->\r\n            </div>\r\n        </div>\r\n        <div class=\"card-footer text-center\">\r\n            <button class=\"btn btn-primary\" (click)=\"manageGetWayConfig()\">{{\"Submit\" | translate}}</button>\r\n            <button id=\"clear-all-fields\" class=\"btn btn-danger ml-1\">{{\"Reset\" | translate}}</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n" }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i2.HttpClient }, { type: i3.MsgengineLibService }, { type: i4.ValidatorchecklistService }, { type: i5.EncrypyDecrpyService }, { type: i6.VarlistService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkZ2V0d2F5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL21zZ2VuZ2luZS1saWIvc3JjL2xpYi9hZGRnZXR3YXkvYWRkZ2V0d2F5LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL21zZ2VuZ2luZS1saWIvc3JjL2xpYi9hZGRnZXR3YXkvYWRkZ2V0d2F5LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFFbEQsT0FBTyxJQUFJLE1BQU0sYUFBYSxDQUFDO0FBSS9CLE9BQU8sS0FBSyxRQUFRLE1BQU0sV0FBVyxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxRQUFRLENBQUM7Ozs7Ozs7Ozs7Ozs7QUFRaEMsTUFBTSxPQUFPLGtCQUFrQjtJQTJEN0IsNEVBQTRFO0lBQzVFLFlBQ1ksS0FBYSxFQUFVLFVBQXNCLEVBQzlDLGNBQW1DLEVBQ25DLFNBQW9DLEVBQ25DLE1BQTRCLEVBQzVCLE9BQXVCO1FBSnZCLFVBQUssR0FBTCxLQUFLLENBQVE7UUFBVSxlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQzlDLG1CQUFjLEdBQWQsY0FBYyxDQUFxQjtRQUNuQyxjQUFTLEdBQVQsU0FBUyxDQUEyQjtRQUNuQyxXQUFNLEdBQU4sTUFBTSxDQUFzQjtRQUM1QixZQUFPLEdBQVAsT0FBTyxDQUFnQjtRQTNEbkMsWUFBTyxHQUFRLENBQUM7Z0JBQ1osV0FBVyxFQUFFLHVCQUF1QjtnQkFDcEMsU0FBUyxFQUFFLENBQUM7d0JBQ0osU0FBUyxFQUFFLEtBQUs7d0JBQ2hCLFFBQVEsRUFBRSxlQUFlO3dCQUN6QixVQUFVLEVBQUUsUUFBUTtxQkFDdkI7b0JBQ0Q7d0JBQ0ksU0FBUyxFQUFFLE1BQU07d0JBQ2pCLFFBQVEsRUFBRSxnQkFBZ0I7cUJBQzdCO2lCQUVKO2dCQUNE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O1FBQ3hCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ25CLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUM7UUFDOUIsSUFBSSxDQUFDLGFBQWEsR0FBRyxDQUFDLENBQUM7UUFDdkIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLEVBQUUsQ0FBQztJQUMvQixDQUFDOztnSEFqZlUsa0JBQWtCO29HQUFsQixrQkFBa0IscURDaEIvQiw2MWdCQW9SQTs0RkRwUWEsa0JBQWtCO2tCQUw5QixTQUFTOytCQUNFLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xyXG5pbXBvcnQgU3dhbCBmcm9tICdzd2VldGFsZXJ0Mic7XHJcbmltcG9ydCB7IE1zZ2VuZ2luZUxpYlNlcnZpY2UgfSBmcm9tICcuLi9tc2dlbmdpbmUtbGliLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBWYWxpZGF0b3JjaGVja2xpc3RTZXJ2aWNlIH0gZnJvbSAnLi4vdmFsaWRhdGlvbmNoZWNrbGlzdC5zZXJ2aWNlJztcclxuaW1wb3J0IHsgRW5jcnlweURlY3JweVNlcnZpY2UgfSBmcm9tICcuLi9lbmNyeXB5LWRlY3JweS5zZXJ2aWNlJztcclxuaW1wb3J0ICogYXMgQ3J5cHRvSlMgZnJvbSAnY3J5cHRvLWpzJztcclxuaW1wb3J0IHsgQnVmZmVyIH0gZnJvbSAnYnVmZmVyJztcclxuaW1wb3J0IHsgVmFybGlzdFNlcnZpY2UgfSBmcm9tICcuLi92YXJsaXN0LnNlcnZpY2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdsaWItYWRkZ2V0d2F5JyxcclxuICB0ZW1wbGF0ZVVybDogJy4vYWRkZ2V0d2F5LmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9hZGRnZXR3YXkuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBZGRnZXR3YXlDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIC8vXFxcXCA9PT09PT09PT09PT09PT09PT09PT09PT0gLy8gVmFyaWFibGVzIC8vID09PT09PT09PT09PT09PT09PT09PT09PSAvL1xcXFwgXHJcbiAgdGl0bGU6IGFueTtcclxuICB0YWJsaXN0OiBhbnk7XHJcbiAgdXRpbGxpc3Q6IGFueTtcclxuXHJcbiAganNvbnVybDogYW55ID0gW3tcclxuICAgICAgXCJwYWdldGl0bGVcIjogXCJHYXRld2F5IENvbmZpZ3VyYXRpb25cIixcclxuICAgICAgXCJ0YWJMaXN0XCI6IFt7XHJcbiAgICAgICAgICAgICAgXCJ0YWJOYW1lXCI6IFwiQWRkXCIsXHJcbiAgICAgICAgICAgICAgXCJ0YWJVcmxcIjogXCIuLi9hZGRnYXRld2F5XCIsXHJcbiAgICAgICAgICAgICAgXCJ0YWJDbGFzc1wiOiBcImFjdGl2ZVwiXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICAgIFwidGFiTmFtZVwiOiBcIlZpZXdcIixcclxuICAgICAgICAgICAgICBcInRhYlVybFwiOiBcIi4uL3ZpZXdnYXRld2F5XCJcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgIF0sXHJcbiAgICAgIFwidXRpbHNcIjogW3tcclxuICAgICAgICAgICAgICBcInV0aWxOYW1lXCI6IFwibWFuZGF0b3J5XCJcclxuICAgICAgICAgIH1cclxuXHJcblxyXG4gICAgICBdLFxyXG5cclxuXHJcbiAgfV07XHJcblxyXG4gIG1lc3NhYWdlc2xpc3Q6IGFueSA9IHtcclxuICAgICAgXCJzdWNjZXNzTXNnXCI6IFwiRGF0YSBzYXZlZCBzdWNjZXNzZnVsbHlcIixcclxuICAgICAgXCJ1cGRhdGVzdWNjZXNzTXNnXCI6IFwiRGF0YSBVcGRhdGVkIHN1Y2Nlc3NmdWxseVwiLFxyXG4gICAgICBcImVycm9yTXNnXCI6IFwiRXJyb3IgaW4gZGF0YWJhc2VcIixcclxuICAgICAgXCJ3YXJuaW5ndHlwZVwiOiBcIllvdSB3YW50IHRvIGRlbGV0ZSB0aGlzIHJlY29yZFwiLFxyXG4gICAgICBcIm1zZ0FwaWxhYmVsXCI6IFwiTGFiZWwgY2FuIG5vdCBiZSBibGFua1wiLFxyXG4gICAgICBcIm1zZ0FwaWtleVwiOiBcIktleSBjYW4gbm90IGJlIGJsYW5rXCIsXHJcbiAgICAgIFwibXNnQXBpdmFsdWVcIjogXCJWYWx1ZSBjYW4gbm90IGJlIGJsYW5rXCIsXHJcbiAgICAgIFwiZ2V0d2F5VHlwZVwiOiBcIkdhdGV3YXkgdHlwZVwiLFxyXG4gICAgICBcImdldHdheU5hbWVcIjogXCJHYXRld2F5IG5hbWVcIixcclxuICAgICAgXCJnZXR3YXlVUmxcIjogXCJFbnRlciBHYXRld2F5IFVybFwiLFxyXG4gICAgICBcIm1ldGhvZHR5cGVcIjogXCJtZXRob2QgdHlwZVwiLFxyXG4gICAgICBcImNvbnRhY3RhZGRyZXNzXCI6IFwiRW50ZXIgY29udGFjdCBhZGRyZXNzXCIsXHJcbiAgICAgIFwibXNnZ2V0d2F5TmFtZVwiOiBcIkVudGVyIEdhdGV3YXkgbmFtZVwiXHJcblxyXG4gIH1cclxuXHJcblxyXG4gIGdldHdheXR5cGVzOiBhbnk7XHJcbiAgc2VsVHlwZTogYW55ID0gMDtcclxuICBzZWxnZXR3YXlOYW1lOiBhbnkgPSAwO1xyXG4gIHNlbGdldHdheUlkOiBhbnkgPSAwO1xyXG4gIGR5bmFtaWNMaXN0QXJyYXk6IGFueSA9IFtdO1xyXG4gIGdldHdheU5hbWVsaXN0OiBhbnk7XHJcbiAgZ2V0RGV0YWlsc2xpc3Q6IGFueTtcclxuICB0eHRnZXR3YXltTmFtZTogYW55O1xyXG4gIHR4dFVybDogYW55O1xyXG4gIHNlbFBvc3RtZW50aG9kOiBhbnkgPSAwO1xyXG4gIHR4dENvbnRhY3RBZGRyZXNzOiBhbnk7XHJcbiAgbGFuZ0tleTogYW55ID0gJ2VuJztcclxuICAvL1xcXFwgPT09PT09PT09PT09PT09PT09PT09PT09IC8vIFZhcmlhYmxlcyAvLyA9PT09PT09PT09PT09PT09PT09PT09PT0gLy9cXFxcIFxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgICBwcml2YXRlIHJvdXRlOiBSb3V0ZXIsIHByaXZhdGUgaHR0cENsaWVudDogSHR0cENsaWVudCxcclxuICAgICAgcHVibGljIGNvbW1vbnNlcnZlaWNlOiBNc2dlbmdpbmVMaWJTZXJ2aWNlLFxyXG4gICAgICBwdWJsaWMgdmxkQ2hrTHN0OiBWYWxpZGF0b3JjaGVja2xpc3RTZXJ2aWNlLFxyXG4gICAgICBwcml2YXRlIGVuY0RlYzogRW5jcnlweURlY3JweVNlcnZpY2UsXHJcbiAgICAgIHByaXZhdGUgdmFybGlzdDogVmFybGlzdFNlcnZpY2VcclxuXHJcbiAgKSB7fVxyXG5cclxuXHJcbiAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICAgIHRoaXMubG9hZGNvbmZpZygpO1xyXG4gICAgICB0aGlzLmdldEdldHdheXR5cGVzKCk7XHJcbiAgICAgIC8vIHRoaXMuYWRkQ2hhbmdlRXZlbnRGb3JMYWJlbCgpO1xyXG4gIH1cclxuICBsb2FkY29uZmlnKCkge1xyXG5cclxuICAgICAgdGhpcy50YWJsaXN0ID0gdGhpcy5qc29udXJsWzBdLnRhYkxpc3Q7XHJcbiAgICAgIHRoaXMudXRpbGxpc3QgPSB0aGlzLmpzb251cmxbMF0udXRpbHNcclxuICAgICAgdGhpcy50aXRsZSA9IHRoaXMuanNvbnVybFswXS5wYWdldGl0bGU7XHJcblxyXG4gIH1cclxuICBtdWx0aWxpbmd1YWwodGVzdDogYW55KSB7XHJcbiAgICAgIHJldHVybiB0ZXN0O1xyXG4gIH1cclxuICAvL1xcXFwgPT09PT09PT09PT09PT09PT09PT09PT09IC8vIEdldCBnZXR3YXkgdHlwZXMgLy8gPT09PT09PT09PT09PT09PT09PT09PT09IC8vXFxcXCBcclxuICBnZXRHZXR3YXl0eXBlcygpIHtcclxuXHJcbiAgICAgIGxldCBnZXR3YXlwYXJtID0ge31cclxuICAgICAgdGhpcy5jb21tb25zZXJ2ZWljZS52aWV3R2F0d2F5VHlwZXMoZ2V0d2F5cGFybSkuc3Vic2NyaWJlKHtcclxuICAgICAgICBuZXh0OiAocmVzcG9uc2UpID0+IHtcclxuICAgICAgICAgICAgbGV0IHJlc3BEYXRhID0gcmVzcG9uc2UuUkVTUE9OU0VfREFUQTtcclxuICAgICAgICAgICAgbGV0IHJlc3BUb2tlbiA9IHJlc3BvbnNlLlJFU1BPTlNFX1RPS0VOO1xyXG4gICAgICAgICAgICBsZXQgdmVyaWZ5VG9rZW4gPSBDcnlwdG9KUy5IbWFjU0hBMjU2KHJlc3BEYXRhLCB0aGlzLnZhcmxpc3QuYXBpSGFzaGluZ0tleSkudG9TdHJpbmcoKTtcclxuICBcclxuICAgICAgICAgICAgaWYgKHJlc3BUb2tlbiA9PSB2ZXJpZnlUb2tlbikge1xyXG4gICAgICAgICAgICAgICAgbGV0IHJlczogYW55ID0gQnVmZmVyLmZyb20ocmVzcERhdGEsICdiYXNlNjQnKTtcclxuICAgICAgICAgICAgICAgIHJlcyA9IEpTT04ucGFyc2UocmVzLnRvU3RyaW5nKCkpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlcy5zdGF0dXMgPT0gXCIyMDBcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0d2F5dHlwZXMgPSByZXMucmVzdWx0O1xyXG4gIFxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChyZXMuc3RhdHVzID09IDUwMSkge1xyXG4gIFxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29tbW9uc2VydmVpY2UuZGlyZWN0bG9nb3V0bGliKClcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29tbW9uc2VydmVpY2Uuc3dhbGZpcmUoJ2Vycm9yJyx0aGlzLmNvbW1vbnNlcnZlaWNlLmxhbmdSZXBsYWNlKHJlcy5tZXNzYWdlKSlcclxuXHJcbiAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICBcclxuICAgICAgICAgICAgICAgIHRoaXMuY29tbW9uc2VydmVpY2Uuc3dhbGZpcmUoJ2Vycm9yJyx0aGlzLmNvbW1vbnNlcnZlaWNlLmxhbmdSZXBsYWNlKHRoaXMudmFybGlzdC5pbnZhbGlkUmVzcG9uc2UpKVxyXG5cclxuICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZXJyb3I6IChtc2cpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5jb21tb25zZXJ2ZWljZS5kaXJlY3Rsb2dvdXRsaWIoKVxyXG4gICAgICAgfVxyXG4gICB9KVxyXG4gICAgIFxyXG4gIH1cclxuXHJcbiAgLy9cXFxcID09PT09PT09PT09PT09PT09PT09PT09PSAvLyBHZXQgZ2V0d2F5IHR5cGVzIC8vID09PT09PT09PT09PT09PT09PT09PT09PSAvL1xcXFwgXHJcbiAgLy9cXFxcID09PT09PT09PT09PT09PT09PT09PT09PSAvLyBHZXQgZ2V0d2F5IE5hbWVzIC8vID09PT09PT09PT09PT09PT09PT09PT09PSAvL1xcXFwgXHJcbiAgZ2V0Z2V0d2F5TmFtZXMoKSB7XHJcblxyXG4gICAgICBsZXQgdHlwZWlkID0gdGhpcy5zZWxUeXBlO1xyXG4gICAgICB0aGlzLmdldHdheU5hbWVsaXN0ID0gW107XHJcblxyXG4gICAgICB0aGlzLnNlbGdldHdheUlkID0gXCIwXCI7XHJcbiAgICAgIGxldCBmb3JtUGFyYW1zID0ge1xyXG4gICAgICAgICAgXCJUeXBlXCI6IHR5cGVpZFxyXG4gICAgICB9O1xyXG4gICAgICB0aGlzLmNvbW1vbnNlcnZlaWNlLmdldEdldHdheU5hbWUoZm9ybVBhcmFtcykuc3Vic2NyaWJlKHtcclxuICAgICAgICBuZXh0OiAocmVzcG9uc2UpID0+IHtcclxuICAgICAgICAgICAgbGV0IHJlc3BEYXRhID0gcmVzcG9uc2UuUkVTUE9OU0VfREFUQTtcclxuICAgICAgICAgICAgbGV0IHJlc3BUb2tlbiA9IHJlc3BvbnNlLlJFU1BPTlNFX1RPS0VOO1xyXG4gICAgICAgICAgICBsZXQgcmVzOiBhbnkgPSBCdWZmZXIuZnJvbShyZXNwRGF0YSwgJ2Jhc2U2NCcpO1xyXG4gICAgICAgICAgICBsZXQgcmVzcG9uc2VSZXN1bHQgPSBKU09OLnBhcnNlKHJlcy50b1N0cmluZygpKTtcclxuICAgICAgICAgICAgbGV0IHZlcmlmeVRva2VuID0gQ3J5cHRvSlMuSG1hY1NIQTI1NihyZXNwRGF0YSwgdGhpcy52YXJsaXN0LmFwaUhhc2hpbmdLZXkpLnRvU3RyaW5nKCk7XHJcblxyXG4gICAgICAgICAgICBpZiAocmVzcFRva2VuID09IHZlcmlmeVRva2VuKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2VSZXN1bHQuc3RhdHVzID09IFwiMjAwXCIpIHtcclxuXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0d2F5TmFtZWxpc3QgPSByZXNwb25zZVJlc3VsdC5yZXN1bHQ7XHJcblxyXG5cclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocmVzcG9uc2VSZXN1bHQuc3RhdHVzID09IDQwMCkge1xyXG5cclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocmVzcG9uc2VSZXN1bHQuc3RhdHVzID09IDUwMSkge1xyXG5cclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbW1vbnNlcnZlaWNlLmRpcmVjdGxvZ291dGxpYigpXHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29tbW9uc2VydmVpY2Uuc3dhbGZpcmUoJ2Vycm9yJyx0aGlzLmNvbW1vbnNlcnZlaWNlLmxhbmdSZXBsYWNlKHRoaXMudmFybGlzdC5zb21ldGhpbmdXcm9uZykpXHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbW1vbnNlcnZlaWNlLnN3YWxmaXJlKCdlcnJvcicsdGhpcy5jb21tb25zZXJ2ZWljZS5sYW5nUmVwbGFjZSh0aGlzLnZhcmxpc3QuaW52YWxpZFJlc3BvbnNlKSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZXJyb3I6IChtc2cpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5jb21tb25zZXJ2ZWljZS5kaXJlY3Rsb2dvdXRsaWIoKVxyXG4gICAgICAgfVxyXG4gICB9KVxyXG4gICBcclxuXHJcbiAgfVxyXG4gIC8vXFxcXCA9PT09PT09PT09PT09PT09PT09PT09PT0gLy8gR2V0IGdldHdheSBOYW1lcyAvLyA9PT09PT09PT09PT09PT09PT09PT09PT0gLy9cXFxcIFxyXG4gIC8vXFxcXCA9PT09PT09PT09PT09PT09PT09PT09PT0gLy8gQWRkbW9yZSBSb3dzIC8vID09PT09PT09PT09PT09PT09PT09PT09PSAvL1xcXFwgXHJcbiAgYWRkUm93KCkge1xyXG5cclxuXHJcbiAgICAgIGxldCBsYXN0Q2hpbGQgPSB0aGlzLmR5bmFtaWNMaXN0QXJyYXlbdGhpcy5keW5hbWljTGlzdEFycmF5Lmxlbmd0aCAtIDFdO1xyXG4gICAgIFxyXG4gICAgICBpZiAodGhpcy5keW5hbWljTGlzdEFycmF5Lmxlbmd0aCA+IDApIHtcclxuICAgICAgICAvL2lmKCF0aGlzLnZsZENoa0xzdC5ibGFua0NoZWNrKHRoaXMudHh0VXJsLCB0aGlzLm1lc3NhYWdlc2xpc3QuZ2V0d2F5VVJsLCd0eHRVcmwnKSlcclxuICAgICAgICAgIGlmIChsYXN0Q2hpbGQudmNoTGFiZWwgPT09ICcnIHx8IHR5cGVvZihsYXN0Q2hpbGQudmNoTGFiZWwpID09IHVuZGVmaW5lZCB8fCBsYXN0Q2hpbGQudmNoTGFiZWwgPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgIFN3YWwuZmlyZSh7XHJcbiAgICAgICAgICAgICAgICAgIGljb246ICdlcnJvcicsXHJcbiAgICAgICAgICAgICAgICAgIHRleHQ6IHRoaXMuY29tbW9uc2VydmVpY2UubGFuZ1JlcGxhY2UodGhpcy5tZXNzYWFnZXNsaXN0Lm1zZ0FwaWxhYmVsKSxcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgfSBlbHNlIGlmIChsYXN0Q2hpbGQudmNoS2V5ID09PSAnJyB8fCB0eXBlb2YobGFzdENoaWxkLnZjaEtleSkgPT0gdW5kZWZpbmVkIHx8IGxhc3RDaGlsZC52Y2hLZXkgPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgIFN3YWwuZmlyZSh7XHJcbiAgICAgICAgICAgICAgICAgIGljb246ICdlcnJvcicsXHJcbiAgICAgICAgICAgICAgICAgIHRleHQ6IHRoaXMuY29tbW9uc2VydmVpY2UubGFuZ1JlcGxhY2UodGhpcy5tZXNzYWFnZXNsaXN0Lm1zZ0FwaWtleSksXHJcbiAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9IGVsc2UgaWYgKGxhc3RDaGlsZC52Y2hWYWx1ZSA9PT0gJycgfHwgdHlwZW9mKGxhc3RDaGlsZC52Y2hWYWx1ZSkgPT0gdW5kZWZpbmVkIHx8IGxhc3RDaGlsZC52Y2hWYWx1ZSA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgU3dhbC5maXJlKHtcclxuICAgICAgICAgICAgICAgICAgaWNvbjogJ2Vycm9yJyxcclxuICAgICAgICAgICAgICAgICAgdGV4dDogdGhpcy5jb21tb25zZXJ2ZWljZS5sYW5nUmVwbGFjZSh0aGlzLm1lc3NhYWdlc2xpc3QubXNnQXBpdmFsdWUpLFxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIHRoaXMuZHluYW1pY0xpc3RBcnJheS5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgaW50SWQ6ICcnLFxyXG4gICAgICAgICAgICAgICAgICB2Y2hMYWJlbDogJycsXHJcbiAgICAgICAgICAgICAgICAgIHZjaEtleTogJycsXHJcbiAgICAgICAgICAgICAgICAgIHZjaFZhbHVlOiAnJ1xyXG4gICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHRoaXMuZHluYW1pY0xpc3RBcnJheS5wdXNoKHtcclxuICAgICAgICAgICAgICBpbnRJZDogJycsXHJcbiAgICAgICAgICAgICAgdmNoTGFiZWw6ICcnLFxyXG4gICAgICAgICAgICAgIHZjaEtleTogJycsXHJcbiAgICAgICAgICAgICAgdmNoVmFsdWU6ICcnXHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgIH1cclxuXHJcblxyXG5cclxuICB9XHJcbiAgLy9cXFxcID09PT09PT09PT09PT09PT09PT09PT09PSAvLyBBZGRtb3JlIFJvd3MgLy8gPT09PT09PT09PT09PT09PT09PT09PT09IC8vXFxcXCBcclxuXHJcblxyXG4gIGRlbGV0ZUFwaVJvdyhpOiBhbnksIGlkOiBhbnkpIHtcclxuXHJcbiAgICAgIGxldCBmb3JtUGFyYW1zID0ge1xyXG4gICAgICAgICAgXCJpbnRJZFwiOiBpZFxyXG4gICAgICB9O1xyXG5cclxuXHJcbiAgICAgIFN3YWwuZmlyZSh7XHJcbiAgICAgICAgICB0aXRsZTogIHRoaXMuY29tbW9uc2VydmVpY2UubGFuZ1JlcGxhY2UoJ0FyZSB5b3Ugc3VyZScpKycgPycsXHJcbiAgICAgICAgICB0ZXh0OiB0aGlzLm1lc3NhYWdlc2xpc3Qud2FybmluZ3R5cGUsXHJcbiAgICAgICAgICBpY29uOiAnd2FybmluZycsXHJcbiAgICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiB0cnVlLFxyXG4gICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogdGhpcy5jb21tb25zZXJ2ZWljZS5sYW5nUmVwbGFjZSgnQ2FuY2VsJyksXHJcbiAgICAgICAgICBjb25maXJtQnV0dG9uQ29sb3I6ICcjMzA4NWQ2JyxcclxuICAgICAgICAgIGNhbmNlbEJ1dHRvbkNvbG9yOiAnI2QzMycsXHJcbiAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogdGhpcy5jb21tb25zZXJ2ZWljZS5sYW5nUmVwbGFjZSgnWWVzJykrJywnK3RoaXMuY29tbW9uc2VydmVpY2UubGFuZ1JlcGxhY2UoJ2RlbGV0ZSBpdCcpKyAgXCIhXCJcclxuICAgICAgfSkudGhlbigocmVzdWx0OiBhbnkpID0+IHtcclxuXHJcbiAgICAgICAgICBpZiAocmVzdWx0LmlzQ29uZmlybWVkKSB7XHJcblxyXG5cclxuaWYodGhpcy5zZWxnZXR3YXlJZCA9PSBcIm90aGVyXCIpe1xyXG4gLy8gICBhbGVydChcInllc1wiKVxyXG4gICAgdGhpcy5keW5hbWljTGlzdEFycmF5LnNwbGljZShpLCAxKTtcclxufVxyXG5lbHNle1xyXG4gICAgdGhpcy5jb21tb25zZXJ2ZWljZS5kZWxldGVHZXR3YXlDb25maWcoZm9ybVBhcmFtcykuc3Vic2NyaWJlKHtcclxuICAgICAgICBuZXh0OiAocmVzcG9uc2UpID0+IHsgbGV0IHJlc3BEYXRhID0gcmVzcG9uc2UuUkVTUE9OU0VfREFUQTtcclxuICAgICAgICAgICAgbGV0IHJlc3BUb2tlbiA9IHJlc3BvbnNlLlJFU1BPTlNFX1RPS0VOO1xyXG4gICAgICAgICAgICBsZXQgdmVyaWZ5VG9rZW4gPSBDcnlwdG9KUy5IbWFjU0hBMjU2KHJlc3BEYXRhLCB0aGlzLnZhcmxpc3QuYXBpSGFzaGluZ0tleSkudG9TdHJpbmcoKTtcclxuXHJcblxyXG4gICAgICAgICAgICBpZiAocmVzcFRva2VuID09IHZlcmlmeVRva2VuKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgcmVzOiBhbnkgPSBCdWZmZXIuZnJvbShyZXNwRGF0YSwgJ2Jhc2U2NCcpO1xyXG4gICAgICAgICAgICAgICAgcmVzID0gSlNPTi5wYXJzZShyZXMudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzLnN0YXR1cyA9PSAyMDApIHtcclxuICAgICAgICAgICAgICAgICAgICBTd2FsLmZpcmUoXHJcbiAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbW1vbnNlcnZlaWNlLmxhbmdSZXBsYWNlKCdEZWxldGVkJykrJyEnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbW1vbnNlcnZlaWNlLmxhbmdSZXBsYWNlKHRoaXMubWVzc2FhZ2VzbGlzdC5kZWxldGVNc2cpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAnc3VjY2VzcydcclxuICAgICAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5keW5hbWljTGlzdEFycmF5LnNwbGljZShpLCAxKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnZpZXdPbGRHZXR3YXlzKClcclxuXHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHJlcy5zdGF0dXMgPT0gNDE3KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb21tb25zZXJ2ZWljZS5zd2FsZmlyZSgnZXJyb3InLHRoaXMuY29tbW9uc2VydmVpY2UubGFuZ1JlcGxhY2UodGhpcy52YXJsaXN0LmludmFsaWRSZXNwb25zZSkpXHJcbiAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb21tb25zZXJ2ZWljZS5zd2FsZmlyZSgnZXJyb3InLHRoaXMuY29tbW9uc2VydmVpY2UubGFuZ1JlcGxhY2UodGhpcy5tZXNzYWFnZXNsaXN0LmVycm9yTXNnKSlcclxuICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbW1vbnNlcnZlaWNlLnN3YWxmaXJlKCdlcnJvcicsdGhpcy5jb21tb25zZXJ2ZWljZS5sYW5nUmVwbGFjZSh0aGlzLnZhcmxpc3QuaW52YWxpZFJlc3BvbnNlKSlcclxuICAgICAgICAgICAgfX0sXHJcbiAgICAgICAgZXJyb3I6IChtc2cpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5jb21tb25zZXJ2ZWljZS5kaXJlY3Rsb2dvdXRsaWIoKVxyXG4gICAgICAgfVxyXG4gICB9KVxyXG5cclxufVxyXG5cclxuXHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgICBcclxuICAgICAgICAgIH1cclxuICAgICAgfSlcclxuXHJcbiAgfVxyXG5cclxuXHJcbiAgLy9cXFxcID09PT09PT09PT09PT09PT09PT09PT09PSAvLyBHZXQgb2xkIGdldHdheSBkZXRhaWxzIC8vID09PT09PT09PT09PT09PT09PT09PT09PSAvL1xcXFxcclxuICB2aWV3T2xkR2V0d2F5cygpIHtcclxuXHJcbiAgICAgIHRoaXMuZHluYW1pY0xpc3RBcnJheSA9IFtdO1xyXG4gICAgICB0aGlzLnR4dFVybCA9ICcnO1xyXG4gICAgICB0aGlzLnNlbFBvc3RtZW50aG9kID0gXCIwXCI7XHJcbiAgICAgIHRoaXMudHh0Q29udGFjdEFkZHJlc3MgPSBcIlwiO1xyXG4gICAgICB0aGlzLnNlbGdldHdheU5hbWUgPSBcIlwiO1xyXG5cclxuICAgICAgbGV0IHR5cGVpZCA9IHRoaXMuc2VsVHlwZTtcclxuICAgICAgbGV0IGludGlkID0gdGhpcy5zZWxnZXR3YXlJZDtcclxuICAgICAgaWYgKGludGlkICE9IFwib3RoZXJcIikge1xyXG4gICAgICAgICAgbGV0IGZvcm1QYXJhbXMgPSB7XHJcbiAgICAgICAgICAgICAgXCJ0eXBlSWRcIjogdHlwZWlkLFxyXG4gICAgICAgICAgICAgIFwiaW50SWRcIjogaW50aWRcclxuICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgdGhpcy5jb21tb25zZXJ2ZWljZS5nZXRQcmV2RGV0YWlscyhmb3JtUGFyYW1zKS5zdWJzY3JpYmUoe1xyXG4gICAgICAgICAgICBuZXh0OiAocmVzcG9uc2UpID0+IHtcclxuICAgICAgICAgICAgICAgIGxldCByZXNwRGF0YSA9IHJlc3BvbnNlLlJFU1BPTlNFX0RBVEE7XHJcbiAgICAgICAgICAgICAgICBsZXQgcmVzcFRva2VuID0gcmVzcG9uc2UuUkVTUE9OU0VfVE9LRU47XHJcbiAgICAgICAgICAgICAgICBsZXQgdmVyaWZ5VG9rZW4gPSBDcnlwdG9KUy5IbWFjU0hBMjU2KHJlc3BEYXRhLCB0aGlzLnZhcmxpc3QuYXBpSGFzaGluZ0tleSkudG9TdHJpbmcoKTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAocmVzcFRva2VuID09IHZlcmlmeVRva2VuKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGxldCByZXM6IGFueSA9IEJ1ZmZlci5mcm9tKHJlc3BEYXRhLCAnYmFzZTY0Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHJlc3BvbnNlUmVzdWx0ID0gSlNPTi5wYXJzZShyZXMpXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZVJlc3VsdC5zdGF0dXMgPT0gMjAwKSB7XHJcblxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXREZXRhaWxzbGlzdCA9IHJlc3BvbnNlUmVzdWx0LnJlc3VsdDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGdldER0bHNyZXM6IGFueSA9IHRoaXMuZ2V0RGV0YWlsc2xpc3QucmVzdWx0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuZ2V0RGV0YWlsc2xpc3QpXHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnR4dFVybCA9IHRoaXMuZ2V0RGV0YWlsc2xpc3QuZGF0YVswXS51cmw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsUG9zdG1lbnRob2QgPSB0aGlzLmdldERldGFpbHNsaXN0LmRhdGFbMF0uZGF0YVBvc3RNZXRob2Q7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudHh0Q29udGFjdEFkZHJlc3MgPSB0aGlzLmdldERldGFpbHNsaXN0LmRhdGFbMF0uY29udGFjdGFkZHJlc3M7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZ2V0d2F5TmFtZSA9IHRoaXMuZ2V0RGV0YWlsc2xpc3QuZGF0YVswXS52Y2hOYW1lO1xyXG5cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDw9IGdldER0bHNyZXMubGVuZ3RoOyBpKyspIHtcclxuXHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG9iajogYW55ID0ge307XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYmpbXCJpbnRJZFwiXSA9IGdldER0bHNyZXNbaV0uaW50SWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYmpbXCJ2Y2hMYWJlbFwiXSA9IGdldER0bHNyZXNbaV0udmNoTGFiZWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYmpbXCJ2Y2hLZXlcIl0gPSBnZXREdGxzcmVzW2ldLnZjaEtleTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9ialtcInZjaFZhbHVlXCJdID0gZ2V0RHRsc3Jlc1tpXS52Y2hWYWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZHluYW1pY0xpc3RBcnJheS5wdXNoKG9iaik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcblxyXG5cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChyZXNwb25zZVJlc3VsdC5zdGF0dXMgPT0gNTAxKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbW1vbnNlcnZlaWNlLmRpcmVjdGxvZ291dGxpYigpXHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29tbW9uc2VydmVpY2Uuc3dhbGZpcmUoJ2Vycm9yJyx0aGlzLmNvbW1vbnNlcnZlaWNlLmxhbmdSZXBsYWNlKHRoaXMudmFybGlzdC5zb21ldGhpbmdXcm9uZykpXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb21tb25zZXJ2ZWljZS5zd2FsZmlyZSgnZXJyb3InLHRoaXMuY29tbW9uc2VydmVpY2UubGFuZ1JlcGxhY2UodGhpcy52YXJsaXN0LnNvbWV0aGluZ1dyb25nKSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZXJyb3I6IChtc2cpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29tbW9uc2VydmVpY2UuZGlyZWN0bG9nb3V0bGliKClcclxuICAgICAgICAgICB9XHJcbiAgICAgICB9KVxyXG4gICAgIFxyXG5cclxuXHJcbiAgICAgIH1cclxuXHJcblxyXG5cclxuICB9XHJcblxyXG4gIC8vXFxcXCA9PT09PT09PT09PT09PT09PT09PT09PT0gLy8gR2V0IG9sZCBnZXR3YXkgZGV0YWlscyAvLyA9PT09PT09PT09PT09PT09PT09PT09PT0gLy9cXFxcIFxyXG4gIC8vXFxcXCA9PT09PT09PT09PT09PT09PT09PT09PT0gLy8gQ3JlYXRlIE5ldyBjb25maWd1cmF0aW9uIC8vID09PT09PT09PT09PT09PT09PT09PT09PSAvL1xcXFwgXHJcbiAgbWFuYWdlR2V0V2F5Q29uZmlnKCkge1xyXG4gICAgICBsZXQgbGFzdENoaWxkID0gdGhpcy5keW5hbWljTGlzdEFycmF5W3RoaXMuZHluYW1pY0xpc3RBcnJheS5sZW5ndGggLSAxXTtcclxuXHJcblxyXG4gICAgICBpZiAoIXRoaXMudmxkQ2hrTHN0LnNlbGVjdERyb3Bkb3duKHRoaXMuc2VsVHlwZSwgdGhpcy5jb21tb25zZXJ2ZWljZS5sYW5nUmVwbGFjZSh0aGlzLm1lc3NhYWdlc2xpc3QuZ2V0d2F5VHlwZSksJ3NlbFR5cGUnKSkge30gXHJcbiAgICAgIGVsc2UgaWYgKCF0aGlzLnZsZENoa0xzdC5zZWxlY3REcm9wZG93bih0aGlzLnNlbGdldHdheUlkLCB0aGlzLmNvbW1vbnNlcnZlaWNlLmxhbmdSZXBsYWNlKHRoaXMubWVzc2FhZ2VzbGlzdC5nZXR3YXlOYW1lKSwnc2VsZ2V0d2F5SWQnKSkge30gXHJcbiAgICAgIGVsc2UgaWYgKCh0aGlzLnNlbGdldHdheUlkID09IFwib3RoZXJcIikgJiYgKCF0aGlzLnZsZENoa0xzdC5ibGFua0NoZWNrKHRoaXMudHh0Z2V0d2F5bU5hbWUsIHRoaXMuY29tbW9uc2VydmVpY2UubGFuZ1JlcGxhY2UodGhpcy5tZXNzYWFnZXNsaXN0Lm1zZ2dldHdheU5hbWUpLCd0eHRnZXR3YXltTmFtZScpKSkge30gXHJcbiAgICAgIGVsc2UgaWYgKCF0aGlzLnZsZENoa0xzdC5ibGFua0NoZWNrKHRoaXMudHh0VXJsLHRoaXMuY29tbW9uc2VydmVpY2UubGFuZ1JlcGxhY2UoIHRoaXMubWVzc2FhZ2VzbGlzdC5nZXR3YXlVUmwpLCd0eHRVcmwnKSkge30gXHJcbiAgICAgIGVsc2UgaWYgKCF0aGlzLnZsZENoa0xzdC5pc191cmwodGhpcy50eHRVcmwpKSB7fSBcclxuICAgICAgZWxzZSBpZiAoIXRoaXMudmxkQ2hrTHN0LnNlbGVjdERyb3Bkb3duKHRoaXMuc2VsUG9zdG1lbnRob2QsIHRoaXMuY29tbW9uc2VydmVpY2UubGFuZ1JlcGxhY2UodGhpcy5tZXNzYWFnZXNsaXN0Lm1ldGhvZHR5cGUpLCdzZWxQb3N0TWV0aG9kJykpIHt9IFxyXG4gICAgICBlbHNlIGlmICghdGhpcy52bGRDaGtMc3QuYmxhbmtDaGVjayh0aGlzLnR4dENvbnRhY3RBZGRyZXNzLCB0aGlzLmNvbW1vbnNlcnZlaWNlLmxhbmdSZXBsYWNlKHRoaXMubWVzc2FhZ2VzbGlzdC5jb250YWN0YWRkcmVzcyksJ3R4dENvbnRhY3RBZGRyZXNzJykpIHt9IFxyXG4gICAgICBlbHNlIGlmICh0aGlzLmR5bmFtaWNMaXN0QXJyYXkubGVuZ3RoID09IDApIHtcclxuICAgICAgICB0aGlzLmNvbW1vbnNlcnZlaWNlLnN3YWxmaXJlKCdlcnJvcicsdGhpcy5jb21tb25zZXJ2ZWljZS5sYW5nUmVwbGFjZShcIkFkZCBrZXkgdmFsdWVzXCIpKVxyXG4gICAgICBcclxuICAgICAgfSBlbHNlIGlmICgodGhpcy5keW5hbWljTGlzdEFycmF5Lmxlbmd0aCA+IDApICYmICghdGhpcy52bGRDaGtMc3QuYmxhbmtDaGVjayhsYXN0Q2hpbGQudmNoTGFiZWwsIHRoaXMuY29tbW9uc2VydmVpY2UubGFuZ1JlcGxhY2UodGhpcy5tZXNzYWFnZXNsaXN0Lm1zZ0FwaWxhYmVsKSkpKSB7fVxyXG4gICAgICAgIGVsc2UgaWYgKCh0aGlzLmR5bmFtaWNMaXN0QXJyYXkubGVuZ3RoID4gMCkgJiYgKCF0aGlzLnZsZENoa0xzdC5ibGFua0NoZWNrKGxhc3RDaGlsZC52Y2hLZXksIHRoaXMuY29tbW9uc2VydmVpY2UubGFuZ1JlcGxhY2UodGhpcy5tZXNzYWFnZXNsaXN0Lm1zZ0FwaWtleSkpKSkge31cclxuICAgICAgICBlbHNlIGlmICgodGhpcy5keW5hbWljTGlzdEFycmF5Lmxlbmd0aCA+IDApICYmICghdGhpcy52bGRDaGtMc3QuYmxhbmtDaGVjayhsYXN0Q2hpbGQudmNoVmFsdWUsIHRoaXMuY29tbW9uc2VydmVpY2UubGFuZ1JlcGxhY2UodGhpcy5tZXNzYWFnZXNsaXN0Lm1zZ0FwaXZhbHVlKSkpKSB7fSBcclxuICAgICAgICBlbHNlIHtcclxuXHJcbiAgICAgICAgICBsZXQgc2VsY3RnZXR3YXlpZDtcclxuICAgICAgICAgIGxldCBnZXR3YXlOYW1lO1xyXG5cclxuICAgICAgICAgIGlmICh0aGlzLnNlbGdldHdheUlkID09ICdvdGhlcicpIHtcclxuICAgICAgICAgICAgICBzZWxjdGdldHdheWlkID0gJyc7XHJcbiAgICAgICAgICAgICAgZ2V0d2F5TmFtZSA9IHRoaXMudHh0Z2V0d2F5bU5hbWU7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIHNlbGN0Z2V0d2F5aWQgPSB0aGlzLnNlbGdldHdheUlkO1xyXG4gICAgICAgICAgICAgIGdldHdheU5hbWUgPSB0aGlzLnNlbGdldHdheU5hbWU7XHJcbiAgICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICAgIGxldCBkb2NQYXJhbXMgPSB7XHJcbiAgICAgICAgICAgICAgXCJpdGVtSWRcIjogc2VsY3RnZXR3YXlpZCxcclxuICAgICAgICAgICAgICBcInR5cGVJZFwiOiB0aGlzLnNlbFR5cGUsXHJcbiAgICAgICAgICAgICAgXCJuYW1lXCI6IGdldHdheU5hbWUsXHJcbiAgICAgICAgICAgICAgXCJ2Y2hVcmxcIjogdGhpcy50eHRVcmwsXHJcbiAgICAgICAgICAgICAgXCJ2Y2hEYXRhUG9zdE1ldGhvZFwiOiB0aGlzLnNlbFBvc3RtZW50aG9kLFxyXG4gICAgICAgICAgICAgIFwidmNoQ29udGFjdEFkZHJlc3NcIjogdGhpcy50eHRDb250YWN0QWRkcmVzcyxcclxuICAgICAgICAgICAgICBcIml0ZW1TdGF0dXNcIjogXCJcIixcclxuICAgICAgICAgICAgICBcImFsbERvY3NkYXRhXCI6IHRoaXMuZHluYW1pY0xpc3RBcnJheVxyXG5cclxuICAgICAgICAgIH1cclxuICAgICAgICAgIHRoaXMuY29tbW9uc2VydmVpY2UubmV3R2V0d2F5Q29uZmlnKGRvY1BhcmFtcykuc3Vic2NyaWJlKHtcclxuICAgICAgICAgICAgbmV4dDogKHJlc3BvbnNlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBsZXQgcmVzcERhdGEgPSByZXNwb25zZS5SRVNQT05TRV9EQVRBO1xyXG4gICAgICAgICAgICAgICAgbGV0IHJlc3BUb2tlbiA9IHJlc3BvbnNlLlJFU1BPTlNFX1RPS0VOO1xyXG4gICAgICAgICAgICAgICAgbGV0IHZlcmlmeVRva2VuID0gQ3J5cHRvSlMuSG1hY1NIQTI1NihyZXNwRGF0YSwgdGhpcy52YXJsaXN0LmFwaUhhc2hpbmdLZXkpLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzcFRva2VuID09IHZlcmlmeVRva2VuKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHJlczogYW55ID0gQnVmZmVyLmZyb20ocmVzcERhdGEsICdiYXNlNjQnKTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgcmVzcG9uc2VSZXN1bHQgPSBKU09OLnBhcnNlKHJlcylcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlUmVzdWx0LnN0YXR1cyA9PSAyMDApIHtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFN3YWwuZmlyZSh7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogdGhpcy5jb21tb25zZXJ2ZWljZS5sYW5nUmVwbGFjZSh0aGlzLm1lc3NhYWdlc2xpc3Quc3VjY2Vzc01zZyksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uOiAnc3VjY2VzcycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uQ29sb3I6ICcjMzA4NWQ2JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiB0aGlzLmNvbW1vbnNlcnZlaWNlLmxhbmdSZXBsYWNlKCdPaycpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLnRoZW4oKHJlc3VsdCkgPT4ge1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVzZXRmb3JtKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJvdXRlLm5hdmlnYXRlKFsnYWRtaW4vdmlld2dhdGV3YXknXSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChyZXNwb25zZVJlc3VsdC5zdGF0dXMgPT0gMjAyKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB0aGlzLmxvYWRpbmc9ZmFsc2U7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBTd2FsLmZpcmUoe1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IHRoaXMuY29tbW9uc2VydmVpY2UubGFuZ1JlcGxhY2UodGhpcy5tZXNzYWFnZXNsaXN0LnVwZGF0ZXN1Y2Nlc3NNc2cpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbjogJ3N1Y2Nlc3MnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvbkNvbG9yOiAnIzMwODVkNicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogdGhpcy5jb21tb25zZXJ2ZWljZS5sYW5nUmVwbGFjZSgnT2snKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KS50aGVuKChyZXN1bHQpID0+IHtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlc2V0Zm9ybSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yb3V0ZS5uYXZpZ2F0ZShbJ2FkbWluL3ZpZXdnYXRld2F5J10pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocmVzcG9uc2VSZXN1bHQuc3RhdHVzID09IDUwMSkge1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb21tb25zZXJ2ZWljZS5kaXJlY3Rsb2dvdXRsaWIoKVxyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocmVzcG9uc2VSZXN1bHQuc3RhdHVzID09IDQwMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbW1vbnNlcnZlaWNlLnN3YWxmaXJlKCdlcnJvcicsdGhpcy5jb21tb25zZXJ2ZWljZS5sYW5nUmVwbGFjZShyZXNwb25zZVJlc3VsdC5tZXNzYWdlLm1ldGFOYW1lWzBdKSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhpcy5sb2FkaW5nPWZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICBcclxuXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vdGhpcy5sb2FkaW5nPWZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbW1vbnNlcnZlaWNlLnN3YWxmaXJlKCdlcnJvcicsdGhpcy5jb21tb25zZXJ2ZWljZS5sYW5nUmVwbGFjZSh0aGlzLnZhcmxpc3Quc29tZXRoaW5nV3JvbmcpKVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29tbW9uc2VydmVpY2Uuc3dhbGZpcmUoJ2Vycm9yJyx0aGlzLmNvbW1vbnNlcnZlaWNlLmxhbmdSZXBsYWNlKHRoaXMudmFybGlzdC5zb21ldGhpbmdXcm9uZykpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGVycm9yOiAobXNnKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbW1vbnNlcnZlaWNlLmRpcmVjdGxvZ291dGxpYigpXHJcbiAgICAgICAgICAgfVxyXG4gICAgICAgfSlcclxuICAgICAgICAgXHJcbiAgICAgIH1cclxuICB9XHJcblxyXG4gIC8vXFxcXCA9PT09PT09PT09PT09PT09PT09PT09PT0gLy8gQ3JlYXRlIE5ldyBjb25maWd1cmF0aW9uIC8vID09PT09PT09PT09PT09PT09PT09PT09PSAvL1xcXFwgXHJcblxyXG4gIC8vXFxcXCA9PT09PT09PT09PT09PT09PT09PT09PT0gLy8gUmVzZXQgRm9ybSAvLyA9PT09PT09PT09PT09PT09PT09PT09PT0gLy9cXFxcIFxyXG4gIHJlc2V0Zm9ybSgpIHtcclxuICAgICAgdGhpcy5zZWxUeXBlID0gMDtcclxuICAgICAgdGhpcy5zZWxnZXR3YXlJZCA9IDA7XHJcbiAgICAgIHRoaXMudHh0Q29udGFjdEFkZHJlc3MgPSBudWxsO1xyXG4gICAgICB0aGlzLnNlbFBvc3RtZW50aG9kID0gMDtcclxuICAgICAgdGhpcy50eHRVcmwgPSBudWxsO1xyXG4gICAgICB0aGlzLnR4dENvbnRhY3RBZGRyZXNzID0gbnVsbDtcclxuICAgICAgdGhpcy5zZWxnZXR3YXlOYW1lID0gMDtcclxuICAgICAgdGhpcy5keW5hbWljTGlzdEFycmF5ID0gW107XHJcbiAgfVxyXG4gIC8vXFxcXCA9PT09PT09PT09PT09PT09PT09PT09PT0gLy8gUmVzZXQgRm9ybSAvLyA9PT09PT09PT09PT09PT09PT09PT09PT0gLy9cXFxcXHJcblxyXG5cclxufSIsIjwhLS0gID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIEZpbGUgTmFtZVx0XHQgICAgICA6IGFkZGdhdGV3YXktY29uZmlnLmNvbXBvbmVudC5odG1sXHJcbi8vIERlc2NyaXB0aW9uIFx0ICAgICAgICAgICAgICA6IFRoaXMgaXMgdXNlZCBmb3IgY29uZmlnIGdldHdheSBjb25maWd1cmF0aW9uXHJcbi8vIENyZWF0ZWQgYnkgICAgICAgICAgICAgICAgIDogQmlrYXNoIEt1bWFyIFBhbmRhXHJcbi8vIENyZWF0ZWQgb24gICAgICAgICAgICAgICAgIDogMTctTWF5LTIwMjNcclxuLy8gRGVzaWduZWQgYnkgICAgICAgICAgICAgICAgOiBCaWthc2ggS3VtYXIgUGFuZGFcclxuLy8gRGVzaWduZWQgb24gICAgICAgICAgICAgICAgOiAxNy1NYXktMjAyM1xyXG4vLyBEZXZlbG9wZWQgYnkgICAgICAgICAgICAgICA6IEJpa2FzaCBLdW1hciBQYW5kYVxyXG4vLyBEZXZlbG9wZWQgb24gICAgICAgICAgICAgICA6IDE4LU1heS0yMDIzXHJcbi8vIFN0eWxlIHNoZWV0ICAgICAgICAgICAgICAgIDogYWRkZ2F0ZXdheS1jb25maWcuY29tcG9uZW50LnNjc3NcclxuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gLS0+XHJcbjwhLS09PT1QYWdlIFRpdGxlPT09LS0+XHJcbjxkaXYgY2xhc3M9XCJwYWdlLXRpdGxlXCI+XHJcblxyXG4gICAgPGg0Pnt7dGl0bGUgfCB0cmFuc2xhdGV9fTwvaDQ+XHJcbjwvZGl2PlxyXG48IS0tPT09UGFnZSBUaXRsZT09PS0tPlxyXG48IS0tPT09Y29udHJvbGUgc2VjdGlvbj09PS0tPlxyXG48ZGl2IGNsYXNzPVwicGFnZS1jb250cm9scy1zZWN0aW9uXCIgaWQ9XCJwYWdlLWNvbnRlbnRcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJjYXJkXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRyb2xzLXNlY3Rpb24taGVhZGVyXCI+XHJcbiAgICAgICAgICBcclxuICAgICAgICAgICAgPHVsIGNsYXNzPVwibmF2IG5hdi10YWJzIG5hdi1maWxsXCIgcm9sZT1cInRhYmxpc3RcIj5cclxuICAgICAgICAgICAgICAgPGxpYi1saWJ0YWJzICpuZ0Zvcj1cImxldCB0YWJsaXN0IG9mIHRhYmxpc3RcIiBbdGFiTWVzc2FnZV09XCJ0YWJsaXN0XCI+PC9saWItbGlidGFicz5cclxuICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgPC91bD5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImluZGljYXRvcnNsaXN0XCI+XHJcbiAgICAgICAgICAgICAgICA8bGliLWxpYnV0aWxzICpuZ0Zvcj1cImxldCB1dGlsbGlzdCBvZiB1dGlsbGlzdFwiIFtjaGlsZE1lc3NhZ2VdPVwidXRpbGxpc3RcIj48L2xpYi1saWJ1dGlscz5cclxuICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1ib2R5XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250cm9scy1zZWN0aW9uXCI+XHJcbiAgICAgICAgICAgICAgICA8IS0tYmVnaW46OkZvcm0tLT5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3cgbWItM1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtbGctN1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJjb2wtbWQtNCBjb2wtbGctNCBtdC0yXCI+Knt7XCJUeXBlXCIgfCB0cmFuc2xhdGV9fTwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLW1kLTggY29sLWxnLTdcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGNsYXNzPVwiZm9ybS1zZWxlY3RcIiBbKG5nTW9kZWwpXT1cInNlbFR5cGVcIiBpZD1cInNlbFR5cGVcIiAoY2hhbmdlKT0nZ2V0Z2V0d2F5TmFtZXMoKSc+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiMFwiPiB7e1wiU2VsZWN0XCIgfCB0cmFuc2xhdGV9fTwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiAqbmdGb3I9XCJsZXQgZ2V0dHlwZSBvZiBnZXR3YXl0eXBlcztsZXQgaSBpbmRleFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW3ZhbHVlXT1cImdldHR5cGUudHlwZUlkXCI+e3tnZXR0eXBlLnR5cGVOYW1lfX08L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJjb2wtbWQtNCBjb2wtbGctNCBtdC0yXCI+KiB7e1wiTmFtZVwiIHwgdHJhbnNsYXRlfX0gPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtbWQtOCBjb2wtbGctN1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9XCJmb3JtLXNlbGVjdFwiIChjaGFuZ2UpPSd2aWV3T2xkR2V0d2F5cygpJyBpZD1cInNlbGdldHdheUlkXCIgWyhuZ01vZGVsKV09XCJzZWxnZXR3YXlJZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjBcIiA+IHt7XCJTZWxlY3RcIiB8IHRyYW5zbGF0ZX19PC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uICpuZ0Zvcj1cImxldCBnTmFtZXMgb2YgZ2V0d2F5TmFtZWxpc3RcIiBbdmFsdWVdPVwiZ05hbWVzLmludElkXCI+e3sgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ05hbWVzLnZjaE5hbWUgfX08L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJvdGhlclwiPk90aGVyPC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImhpZGRlblwiIFsobmdNb2RlbCldPVwic2VsZ2V0d2F5TmFtZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICpuZ0lmPVwic2VsZ2V0d2F5SWQgPT0gJ290aGVyJyBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwiRW50ZXIgTmFtZVwiIGlkPVwidHh0Z2V0d2F5bU5hbWVcIiAgY2xhc3M9XCJmb3JtLWNvbnRyb2wgbXQtM1wiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWyhuZ01vZGVsKV09XCJ0eHRnZXR3YXltTmFtZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiY29sLW1kLTQgY29sLWxnLTQgbXQtMlwiPip7e1wiVVJMXCIgfCB0cmFuc2xhdGV9fSA8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1tZC04IGNvbC1sZy03XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJmb3JtLWNvbnRyb2wgYW1oZmxkIGFyYWJpY1wiIG5hbWU9XCJ2Y2hVcmxcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWyhuZ01vZGVsKV09XCJ0eHRVcmxcIiBpZD1cInR4dFVybFwiIGF1dG9jb21wbGV0ZT1cIm9mZlwiIHZhbHVlPVwiXCIgbWF4bGVuZ3RoPVwiMjUwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImNvbC1tZC00IGNvbC1sZy00IG10LTJcIj4qe3tcIkRhdGEgcG9zdCBtZXRob2RcIiB8IHRyYW5zbGF0ZX19PC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtbWQtOCBjb2wtbGctN1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgbmFtZT1cInNlbFBvc3RNZXRob2RcIiBpZD1cInNlbFBvc3RNZXRob2RcIiBbKG5nTW9kZWwpXT1cInNlbFBvc3RtZW50aG9kXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiZm9ybS1zZWxlY3RcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIwXCI+e3tcIlNlbGVjdFwiIHwgdHJhbnNsYXRlfX08L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJuYVwiPk5BPC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiZ2V0XCI+R0VUPC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwicG9zdFwiPlBPU1Q8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImNvbC1tZC00IGNvbC1sZy00IG10LTJcIj4qIHt7XCJDb250YWN0IEFkZHJlc3NcIiB8IHRyYW5zbGF0ZX19PC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtbWQtOCBjb2wtbGctN1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBjbGFzcz1cImZvcm0tY29udHJvbFwiIFsobmdNb2RlbCldPVwidHh0Q29udGFjdEFkZHJlc3NcIiBpZD1cInR4dENvbnRhY3RBZGRyZXNzXCIgcm93cz1cIjJcIiBjb2xzPVwiMlwiPlxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGV4dGFyZWE+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1sZy01XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNiBjbGFzcz1cIm1iLTFcIj4ge3tcIkR5bmFtaWMga2V5cyBmb3IgdmFsdWVcIiB8IHRyYW5zbGF0ZX19IDwvaDY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwib3ZlcmZsb3ctYXV0byBwZS0yXCIgc3R5bGU9XCJoZWlnaHQ6MjcwcHg7XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPVwidGFibGUgdGFibGUtYm9yZGVyZWRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoZWFkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBzY29wZT1cImNvbFwiPnt7XCJLZXlcIiB8IHRyYW5zbGF0ZX19PC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGggc2NvcGU9XCJjb2xcIj57e1wiRGVzY3JpcHRpb25cIiB8IHRyYW5zbGF0ZX19PC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+W0FQUExJQ0FOVF9NT0JJTEVdPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3tcIlRoaXMga2V5IHdpbGwgYmUgdXNlZCB0byBmZXRjaCB0aGUgYXBwbGljYW50IG1vYmlsZSBudW1iZXJcIn19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPltBUFBMSUNBTlRfTkFNRV08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57e1wiVGhpcyBrZXkgd2lsbCBiZSB1c2VkIHRvIGJpbmQgdGhlIFNNUyBjb250ZW50XCJ9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5bQVBQX05PXTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7XCJUaGlzIGtleSB3aWxsIGJlIHVzZWQgdG8gYmluZCB0aGUgQXBwbGljYXRpb24gbnVtYmVyXCJ9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5bQVBQX0RBVEVdPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPltBUFBfU0xOT108L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57e1wiVGhpcyBrZXkgd2lsbCBiZSB1c2VkIHRvIGJpbmQgdGhlIExldHRlciBudW1iZXJcIn19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPltGQVJNRVJfRElTVF08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57e1wiVGhpcyBrZXkgd2lsbCBiZSB1c2VkIHRvIGJpbmQgZGlzdHJpY3Qgb2YgdGhlICBmYXJtZXJcIn19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPltGQVJNRVJfQkxPQ0tdPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3tcIlRoaXMga2V5IHdpbGwgYmUgdXNlZCB0byBiaW5kIGJsb2NrL1VMQiBvZiB0aGUgZmFybWVyXCJ9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5bRkFSTUVSX0dQXTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7XCJUaGlzIGtleSB3aWxsIGJlIHVzZWQgdG8gYmluZCBHUC9XYXJkIG9mIHRoZSBmYXJtZXJcIn19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPltGQVJNRVJfVklMTEFHRV08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57e1wiVGhpcyBrZXkgd2lsbCBiZSB1c2VkIHRvIGJpbmQgdmlsbGFnZSBvZiB0aGUgZmFybWVyXCJ9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5bU0VSVklDRV9WRVJJRklDQVRJT05dPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPltGQVJNRVJfQ0FURUdPUlldPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3tcIlRoaXMga2V5IHdpbGwgYmUgdXNlZCB0byBiaW5kIGNhc3RlIGNhdGVnb3J5IG9mIHRoZSBmYXJtZXJcIn19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPltGQVJNRVJfRkFUSEVSXTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5bRkFSTV9ESVNUUklDVF08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57e1wiVGhpcyBrZXkgd2lsbCBiZSB1c2VkIHRvIGJpbmQgZGlzdHJpY3Qgb2YgdGhlIGZhcm1cIn19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPltGQVJNX0JMT0NLXTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7XCJUaGlzIGtleSB3aWxsIGJlIHVzZWQgdG8gYmluZCBibG9jayBvZiB0aGUgZmFybVwifX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+W0ZBUk1fR1BdPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3tcIlRoaXMga2V5IHdpbGwgYmUgdXNlZCB0byBiaW5kIEdQIG9mIHRoZSBmYXJtXCJ9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5bRkFSTV9WSUxMQUdFXTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7XCJUaGlzIGtleSB3aWxsIGJlIHVzZWQgdG8gYmluZCBWaWxsYWdlIG9mIHRoZSBmYXJtXCJ9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5bVkFMSURfVVBUT182X01PTlRIXTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5bVkFMSURfVVBUT18xMl9NT05USF08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+W0lOU1BFQ1RJT05fREFURV08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+W0lOU1BFQ1RFRF9MQU5EX0FSRUFdPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPltJTlNQRUNURURfVE9UQUxfTEFORF9BUkVBXTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5bSU5TUEVDVEVEX0xBTkRfQVJFQV9ERVZFTE9QRURdPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPltWQUxJRF9VUFRPXzI0X01PTlRIXTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuXHJcblxyXG5cclxuICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRhYmxlLXJlc3BvbnNpdmVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPVwidGFibGUgdGFibGUtYm9yZGVyZWRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aGVhZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBzY29wZT1cImNvbFwiIHN0eWxlPVwid2lkdGg6NTBweFwiPiB7e1wiU2wgTm8uXCIgfCB0cmFuc2xhdGV9fTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBzY29wZT1cImNvbFwiPiB7e1wiTGFiZWxcIiB8IHRyYW5zbGF0ZX19IDxzcGFuIGNsYXNzPVwidGV4dC1kYW5nZXJcIj4qPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGggc2NvcGU9XCJjb2xcIj57e1wiS2V5XCIgfCB0cmFuc2xhdGV9fSA8c3BhbiBjbGFzcz1cInRleHQtZGFuZ2VyXCI+Kjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoIHNjb3BlPVwiY29sXCI+e3tcIlZhbHVlXCIgfCB0cmFuc2xhdGV9fSA8c3BhbiBjbGFzcz1cInRleHQtZGFuZ2VyXCI+Kjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoIHNjb3BlPVwiY29sXCIgc3R5bGU9XCJ3aWR0aDo3MHB4XCI+e3tcIkFjdGlvblwiIHwgdHJhbnNsYXRlfX08L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5IGlkPVwiYXBwZW5kVHJcIj5cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyICpuZ0Zvcj1cImxldCBhcGlBcnJheSBvZiBkeW5hbWljTGlzdEFycmF5OyBsZXQgaSA9IGluZGV4O1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3tpKzF9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImZvcm0tY29udHJvbFwiIG5hbWU9XCJ7e2FwaUFycmF5LnZjaExhYmVsfX1cIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsobmdNb2RlbCldPVwiYXBpQXJyYXkudmNoTGFiZWxcIiBpZD1cImxhYmVsX3t7aX19XCIgdHlwZT1cInRleHRcIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIiBuYW1lPVwie3thcGlBcnJheS52Y2hLZXl9fVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWyhuZ01vZGVsKV09XCJhcGlBcnJheS52Y2hLZXlcIiBpZD1cImtleV97e2l9fVwiIHR5cGU9XCJ0ZXh0XCIgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImZvcm0tY29udHJvbFwiIG5hbWU9XCJ7e2FwaUFycmF5LnZjaFZhbHVlfX1cIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsobmdNb2RlbCldPVwiYXBpQXJyYXkudmNoVmFsdWVcIiBpZD1cInZhbHVlX3t7aX19XCIgdHlwZT1cInRleHRcIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJ0bi1kYW5nZXIgcHgtMlwiIChjbGljayk9XCJkZWxldGVBcGlSb3coaSwgYXBpQXJyYXkuaW50SWQpXCI+PGlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJpY29uLXRyYXNoLWFsdFwiPjwvaT48L2J1dHRvbj5cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cIjZcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYnRuLWluZm8gYnRuLXNtXCIgKGNsaWNrKT1cImFkZFJvdygpXCI+e3tcIkFkZCBSb3dcIiB8IHRyYW5zbGF0ZX19ICA8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwhLS1lbmQ6OkZvcm0tLT5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtZm9vdGVyIHRleHQtY2VudGVyXCI+XHJcbiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYnRuLXByaW1hcnlcIiAoY2xpY2spPVwibWFuYWdlR2V0V2F5Q29uZmlnKClcIj57e1wiU3VibWl0XCIgfCB0cmFuc2xhdGV9fTwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8YnV0dG9uIGlkPVwiY2xlYXItYWxsLWZpZWxkc1wiIGNsYXNzPVwiYnRuIGJ0bi1kYW5nZXIgbWwtMVwiPnt7XCJSZXNldFwiIHwgdHJhbnNsYXRlfX08L2J1dHRvbj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG48L2Rpdj5cclxuXHJcbiJdfQ==