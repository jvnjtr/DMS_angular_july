{"version":3,"file":"msgengine-lib.mjs","sources":["../../../projects/msgengine-lib/src/lib/varlist.service.ts","../../../projects/msgengine-lib/src/lib/msgengine-lib.service.ts","../../../projects/msgengine-lib/src/lib/msgengine-lib.component.ts","../../../projects/msgengine-lib/src/lib/validationchecklist.service.ts","../../../projects/msgengine-lib/src/lib/encrypy-decrpy.service.ts","../../../projects/msgengine-lib/src/lib/translate.pipe.ts","../../../projects/msgengine-lib/src/lib/libtabs/libtabs.component.ts","../../../projects/msgengine-lib/src/lib/libtabs/libtabs.component.html","../../../projects/msgengine-lib/src/lib/libutils/libutils.component.ts","../../../projects/msgengine-lib/src/lib/libutils/libutils.component.html","../../../projects/msgengine-lib/src/lib/addgetway/addgetway.component.ts","../../../projects/msgengine-lib/src/lib/addgetway/addgetway.component.html","../../../projects/msgengine-lib/src/lib/libpagination/libpagination.component.ts","../../../projects/msgengine-lib/src/lib/libpagination/libpagination.component.html","../../../projects/msgengine-lib/src/lib/viewgetway/viewgetway.component.ts","../../../projects/msgengine-lib/src/lib/viewgetway/viewgetway.component.html","../../../projects/msgengine-lib/src/lib/addmsgengine/addmsgengine.component.ts","../../../projects/msgengine-lib/src/lib/addmsgengine/addmsgengine.component.html","../../../projects/msgengine-lib/src/lib/viewmsgengine/viewmsgengine.component.ts","../../../projects/msgengine-lib/src/lib/viewmsgengine/viewmsgengine.component.html","../../../projects/msgengine-lib/src/lib/viewmsgreminder/viewmsgreminder.component.ts","../../../projects/msgengine-lib/src/lib/viewmsgreminder/viewmsgreminder.component.html","../../../projects/msgengine-lib/src/lib/msgengine-lib.module.ts","../../../projects/msgengine-lib/src/public-api.ts","../../../projects/msgengine-lib/src/msgengine-lib.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VarlistService {\n apiHashingKey:any= '22CSMTOOL2022';\n  encryptIV:any= '26102021@qwI';\n  serviceURL:any= 'http://172.27.30.93:7001/dms_php_admin/admin/message_module';\n  serviceName:any='/publishUnpublish';\n  serviceModuleconfig:any='/manageMessageConfig';\n  formEnable:any=false;\n  dynamicForm:any=false;\n  sessionEncrypted:any=true;\n  formId:any=\"0\";\n  somethingWrong:any= 'something went wrong';\n  invalidResponse:any= 'Invalid Response';\n  errorApiResponse:any= 'Error in API response';\n  ckconfig:any={\n      \n    language: \"en\",\n    allowedContent: true,\n    height:200,\n    forcePasteAsPlainText: true,\n    font_names: 'Arial;Times New Roman;Verdana',\n    extraPlugins: 'divarea',\n    removePlugins: 'exportpdf',\n    toolbarGroups: [\n      { name: 'document', groups: ['mode', 'document', 'doctools'] },\n      { name: 'clipboard', groups: ['clipboard', 'undo'] },\n      { name: 'editing', groups: ['find', 'selection', 'spellchecker', 'editing'] },\n      { name: 'forms', groups: ['forms'] },\n      { name: 'basicstyles', groups: ['basicstyles', 'cleanup'] },\n      { name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align', 'bidi', 'paragraph'] },\n      { name: 'links', groups: ['links'] },\n      { name: 'insert', groups: ['insert'] },\n     \n      { name: 'styles', groups: ['styles'] },\n      { name: 'colors', groups: ['colors'] },\n      { name: 'tools', groups: ['tools'] },\n      { name: 'others', groups: ['others'] },\n      { name: 'about', groups: ['about'] }\n    ],\n    removeButtons: 'Source,Save,NewPage,Preview,Print,Templates,Cut,Copy,Paste,PasteText,PasteFromWord,Undo,Redo,Find,Replace,SelectAll,Scayt,Form,Checkbox,Radio,TextField,Textarea,Select,Button,ImageButton,HiddenField,Strike,Subscript,Superscript,CopyFormatting,RemoveFormat,Outdent,Indent,CreateDiv,Blockquote,BidiLtr,BidiRtl,Language,Unlink,Anchor,Image,Flash,Table,HorizontalRule,Smiley,SpecialChar,PageBreak,Iframe,Maximize,ShowBlocks,About'\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as CryptoJS from 'crypto-js';\n\nimport {Buffer} from 'buffer';\nimport { VarlistService } from './varlist.service';\nimport Swal from 'sweetalert2';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MsgengineLibService {\n\n\n\n\n  constructor(\n    private router: Router, \n    private http: HttpClient,\n     private varlist:VarlistService\n     ) { }\n\n\n     public directlogoutlib(){\n      sessionStorage.removeItem('ADMIN_SESSION');\n      sessionStorage.removeItem('TOKEN');\n      this.router.navigateByUrl('/login');\n  }\n\n  public getGetwayName(formParams:any):Observable<any> {\n\n    let requestParam =Buffer.from(JSON.stringify(formParams), 'utf8').toString('base64');\n    let requestToken = CryptoJS.HmacSHA256(requestParam, this.varlist.apiHashingKey).toString();\n    let reqData = { 'REQUEST_DATA': requestParam, 'REQUEST_TOKEN': requestToken };\n    let serviceURL = this.varlist.serviceURL + '/getwayConfiguration';\n    let desnResponse = this.http.post(serviceURL, reqData);\n    return desnResponse;\n \n  }\n\n\n\n  public viewGatwayTypes(formParams:any):Observable<any> {\n\n    let requestParam =Buffer.from(JSON.stringify(formParams), 'utf8').toString('base64');\n    let requestToken = CryptoJS.HmacSHA256(requestParam, this.varlist.apiHashingKey).toString();\n    let reqData = { 'REQUEST_DATA': requestParam, 'REQUEST_TOKEN': requestToken };\n    let serviceURL = this.varlist.serviceURL + '/getwayType';\n    let desnResponse = this.http.post(serviceURL, reqData);\n    return desnResponse;\n \n  }\n\n\n  newGetwayConfig(docParams:any):Observable<any>{\n    let requestParam = btoa(JSON.stringify(docParams));\n    let requestToken = CryptoJS.HmacSHA256(requestParam, this.varlist.apiHashingKey).toString();\n    let reqData = { 'REQUEST_DATA': requestParam, 'REQUEST_TOKEN': requestToken };\n    let serviceUrl = this.varlist.serviceURL+'/insertGatewayConfiguration';\n    let serviceRes = this.http.post(serviceUrl,reqData);\n    return serviceRes;\n  }\n\n\n   viewGetwayConfig(docParams:any):Observable<any>{\n    let requestParam = btoa(JSON.stringify(docParams));\n    let requestToken = CryptoJS.HmacSHA256(requestParam, this.varlist.apiHashingKey).toString();\n    let reqData = { 'REQUEST_DATA': requestParam, 'REQUEST_TOKEN': requestToken };\n    let serviceUrl = this.varlist.serviceURL+'/viewConfiguration';\n    let serviceRes = this.http.post(serviceUrl,reqData);\n    return serviceRes;\n  }\n  getPrevDetails(docParams:any):Observable<any>{\n    let requestParam = btoa(JSON.stringify(docParams));\n    let requestToken = CryptoJS.HmacSHA256(requestParam, this.varlist.apiHashingKey).toString();\n    let reqData = { 'REQUEST_DATA': requestParam, 'REQUEST_TOKEN': requestToken };\n    let serviceUrl = this.varlist.serviceURL+'/fillAll';\n    let serviceRes = this.http.post(serviceUrl,reqData);\n    return serviceRes;\n\n  }\n\n  deleteGetwayConfig(docParams:any):Observable<any>{\n    let requestParam = btoa(JSON.stringify(docParams));\n    let requestToken = CryptoJS.HmacSHA256(requestParam, this.varlist.apiHashingKey).toString();\n    let reqData = { 'REQUEST_DATA': requestParam, 'REQUEST_TOKEN': requestToken };\n    let serviceUrl = this.varlist.serviceURL+'/deletegetwayDocument';\n    let serviceRes = this.http.post(serviceUrl,reqData);\n    return serviceRes;\n  }\n\n  deleteAll(formParams : any, fname : any): Observable<any> {\n    let requestParam = btoa(JSON.stringify(formParams));\n    let requestToken = CryptoJS.HmacSHA256(requestParam, this.varlist.apiHashingKey).toString();\n    let reqData = {\n      REQUEST_DATA: requestParam,\n      REQUEST_TOKEN: requestToken\n    };\n    let serviceUrl = this.varlist.serviceURL + fname;\n    let serviceRes = this.http.post(serviceUrl, reqData);\n    return serviceRes;\n  }\n  publishAll(formParams : any, fname : any): Observable<any> {\n    let requestParam = btoa(JSON.stringify(formParams));\n    let requestToken = CryptoJS.HmacSHA256(requestParam, this.varlist.apiHashingKey).toString();\n    let reqData = {\n      REQUEST_DATA: requestParam,\n      REQUEST_TOKEN: requestToken\n    };\n    let serviceUrl = this.varlist.serviceURL + fname;\n    let serviceRes = this.http.post(serviceUrl, reqData);\n    return serviceRes;\n  }\n  unpublishAll(formParams : any, fname : any): Observable<any> {\n    let requestParam = btoa(JSON.stringify(formParams));\n    let requestToken = CryptoJS.HmacSHA256(requestParam, this.varlist.apiHashingKey).toString();\n    let reqData = {\n      REQUEST_DATA: requestParam,\n      REQUEST_TOKEN: requestToken\n    };\n    let serviceUrl = this.varlist.serviceURL + fname;\n    let serviceRes = this.http.post(serviceUrl, reqData);\n    return serviceRes;\n  }\n\n   newMessage(messageParams:any):Observable<any>{\n      let requestParam = btoa(JSON.stringify(messageParams));\n      let requestToken = CryptoJS.HmacSHA256(requestParam, this.varlist.apiHashingKey).toString();\n      let reqData = { 'REQUEST_DATA': requestParam, 'REQUEST_TOKEN': requestToken };\n      let serviceUrl = this.varlist.serviceURL+'/addMessageConfig';\n      let serviceRes = this.http.post(serviceUrl,reqData);\n      return serviceRes;\n    }\n  // newMessage(messageParams: any): Observable<any> {\n  //   let serviceUrl = this.varlist.serviceURL + 'addMessageConfig';\n  //   let serviceRes = this.http.post(serviceUrl, messageParams);\n  //   return serviceRes;\n  // }\n\n  viewMessage(messageParams: any): Observable<any> {\n    let requestParam = btoa(JSON.stringify(messageParams));\n    let requestToken = CryptoJS.HmacSHA256(requestParam, this.varlist.apiHashingKey).toString();\n    messageParams = { 'REQUEST_DATA': requestParam, 'REQUEST_TOKEN': requestToken }\n    let serviceUrl = this.varlist.serviceURL + '/viewMessageConfig';\n    let serviceRes = this.http.post(serviceUrl, messageParams);\n    return serviceRes;\n  }\n  reminderSchedular(messageParams: any): Observable<any> {\n    let requestParam = btoa(JSON.stringify(messageParams));\n    let requestToken = CryptoJS.HmacSHA256(requestParam, this.varlist.apiHashingKey).toString();\n    messageParams = { 'REQUEST_DATA': requestParam, 'REQUEST_TOKEN': requestToken }\n    let serviceUrl = this.varlist.serviceURL + '/getRemindercron';\n    let serviceRes = this.http.post(serviceUrl, messageParams);\n    return serviceRes;\n  }\n  msgexecuteSchedular(messageParams: any): Observable<any> {\n    let requestParam = btoa(JSON.stringify(messageParams));\n    let requestToken = CryptoJS.HmacSHA256(requestParam, this.varlist.apiHashingKey).toString();\n    messageParams = { 'REQUEST_DATA': requestParam, 'REQUEST_TOKEN': requestToken }\n    let serviceUrl = this.varlist.serviceURL + '/startExecution';\n    let serviceRes = this.http.post(serviceUrl, messageParams);\n    return serviceRes;\n  }\n  msgstopSchedular(messageParams: any): Observable<any> {\n    let requestParam = btoa(JSON.stringify(messageParams));\n    let requestToken = CryptoJS.HmacSHA256(requestParam, this.varlist.apiHashingKey).toString();\n    messageParams = { 'REQUEST_DATA': requestParam, 'REQUEST_TOKEN': requestToken }\n    let serviceUrl = this.varlist.serviceURL + '/stopExecution';\n    let serviceRes = this.http.post(serviceUrl, messageParams);\n    return serviceRes;\n  }\n\n  getStaticConfigurationKeys(messageParams: any): Observable<any> {\n    let requestParam = btoa(JSON.stringify(messageParams));\n    let requestToken = CryptoJS.HmacSHA256(requestParam, this.varlist.apiHashingKey).toString();\n    messageParams = { 'REQUEST_DATA': requestParam, 'REQUEST_TOKEN': requestToken }\n    let serviceUrl = this.varlist.serviceURL + '/GetStaticKeys';\n    let serviceRes = this.http.post(serviceUrl, messageParams);\n    return serviceRes;\n  }\n  \n\n  getFetchPublishRecord(messageParams: any): Observable<any> {\n    let requestParam = btoa(JSON.stringify(messageParams));\n    let requestToken = CryptoJS.HmacSHA256(requestParam, this.varlist.apiHashingKey).toString();\n    messageParams = { 'REQUEST_DATA': requestParam, 'REQUEST_TOKEN': requestToken }\n    let serviceUrl = this.varlist.serviceURL + '/FetchPublishRecord';\n    let serviceRes = this.http.post(serviceUrl, messageParams);\n    return serviceRes;\n  }\n\n\n  getLanguage(messageParams: any): Observable<any> {\n    let requestParam = btoa(JSON.stringify(messageParams));\n    let requestToken = CryptoJS.HmacSHA256(requestParam, this.varlist.apiHashingKey).toString();\n    messageParams = { 'REQUEST_DATA': requestParam, 'REQUEST_TOKEN': requestToken }\n    let serviceUrl = this.varlist.serviceURL + '/viewLanguage';\n    let serviceRes = this.http.post(serviceUrl, messageParams);\n    return serviceRes;\n  }\n\n  getForms(messageParams: any): Observable<any> {\n    let requestParam = btoa(JSON.stringify(messageParams));\n    let requestToken = CryptoJS.HmacSHA256(requestParam, this.varlist.apiHashingKey).toString();\n    messageParams = { 'REQUEST_DATA': requestParam, 'REQUEST_TOKEN': requestToken }\n    let serviceUrl = this.varlist.serviceURL + '/getFormName';\n    let serviceRes = this.http.post(serviceUrl, messageParams);\n    return serviceRes;\n  }\n\n  getConfigurationKeys(messageParams: any): Observable<any> {\n    let requestParam = btoa(JSON.stringify(messageParams));\n    let requestToken = CryptoJS.HmacSHA256(requestParam, this.varlist.apiHashingKey).toString();\n    messageParams = { 'REQUEST_DATA': requestParam, 'REQUEST_TOKEN': requestToken }\n    let serviceUrl = this.varlist.serviceURL + '/getConfigKeys';\n    let serviceRes = this.http.post(serviceUrl, messageParams);\n    return serviceRes;\n  }\n\n\n\n  public msguploadFile(formParams:any):Observable<any> {\n    let serviceURL = this.varlist.serviceURL + '/fileUpload';\n    let moduleResponse = this.http.post(serviceURL, formParams);\n    return moduleResponse;\n  }\n\n\n\n  langReplace(languageText : any, languageName : any = \"\") {\n    if (languageText != \"\" && languageText !=undefined) {\n      let lngToLower: any = languageText.toLowerCase();\n\n     let allLangListResult: any = sessionStorage.getItem(\"ALL_LANG_LIST\");\n\n    let SeetionParsedLangRes = JSON.parse(CryptoJS.AES.decrypt(allLangListResult, this.varlist.apiHashingKey).toString(CryptoJS.enc.Utf8));\n\n     let sessionUserLangtoken: any = sessionStorage.getItem(\"USER_LANGPREF\");\n\n     let sessionUserLang = JSON.parse(CryptoJS.AES.decrypt(sessionUserLangtoken, this.varlist.apiHashingKey).toString(CryptoJS.enc.Utf8));\n\n      if (SeetionParsedLangRes[lngToLower] != undefined) {\n       let allParsedLang = JSON.parse(SeetionParsedLangRes[lngToLower]);\n       return allParsedLang[sessionUserLang] != \"\" && allParsedLang[sessionUserLang] != undefined\n         ? allParsedLang[sessionUserLang]\n         : languageText;\n      } else {\n        return languageText;\n     }\n    } else {\n      return languageText;\n    }\n }\n\n\n swalfire(type: any, message: any) {\n  return  Swal.fire({\n           icon: type,\n           text: message\n           });\n \n }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-msgengine-lib',\n  template: `\n    <p>\n      msgengine-lib works change\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class MsgengineLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport Swal from 'sweetalert2';\nimport { MsgengineLibService } from './msgengine-lib.service';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidatorchecklistService {\n\n  constructor( public commonserveice:MsgengineLibService,) { }\n\n  \n  blankCheck(elmVal: any, msg: any, elmId: any = \"\") {\n    if (elmVal == '' || typeof (elmVal) == undefined || elmVal == null) {\n      Swal.fire({\n        icon: 'error',\n        text: msg\n      }).then(function () {\n        if (elmId != \"\") {\n          setTimeout(() => {\n            const element = <HTMLInputElement>document.getElementById(elmId);\n            element.focus();\n            element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n          }, 500);\n        }\n      });\n      return false;\n    }\n    return true;\n  }\n\n  blankImgCheck(elmVal:any, msg:any)\n  {\n      if(elmVal == '' || typeof (elmVal) == undefined || elmVal == null)\n      {\n        Swal.fire({\n          icon: 'error',\n          text: this.commonserveice.langReplace('Please') +msg\n        });\n        return false;\n      }\n      return true;\n  }\n\n  blankCheckRdo(elmNm:any, msg:any,elmId:any=\"\")\n  {\n    \n      let ele = document.getElementsByName(elmNm);\n      let checkedCtr:number = 0;\n      for(let i = 0; i < ele.length; i++) {\n\n         if((ele[i] as HTMLInputElement).checked)\n         {\n          \n          checkedCtr++;\n         }\n\n      }\n      if(checkedCtr==0)\n      {\n        Swal.fire({\n          icon: 'error',\n          text: this.commonserveice.langReplace('Select')+\" \"+msg\n        }).then(function(){\n\n          if(elmId!=\"\")\n\n          {\n\n            setTimeout(() => {\n\n              (<HTMLInputElement>document.getElementById(elmId)).focus();\n\n               (<HTMLInputElement>document.getElementById(elmId)).scrollTo(\n                {top: (<HTMLInputElement>document.getElementById(elmId)).getBoundingClientRect().top -\n                  document.body.getBoundingClientRect().top -50}\n                );\n\n            }, 500);\n\n          }\n\n        });\n\n        return false;\n      }\n      return true;\n  }\n\n\n  blankCheckRdoDynamic(clsName:any, msg:any,elmId:any=\"\")\n  \n {\n\n\n  let className =  'cls_'+clsName;\n\n  let ele = document.getElementsByClassName(className);\n\n  let checkedCtr:number = 0;\n\n  for(let i = 0; i < ele.length; i++) {\n\n\n\n     if((ele[i] as HTMLInputElement).checked)\n\n     {\n\n     \n\n      checkedCtr++;\n\n     }\n\n\n\n  }\n\n  if(checkedCtr==0)\n\n  {\n\n    Swal.fire({\n\n      icon: 'error',\n\n      text: this.commonserveice.langReplace('Select')+\" \"+msg\n\n    }).then(function(){\n\n     // console.log()\n\n      if(ele[0]!=undefined )\n\n      {\n\n        setTimeout(() => {\n\n\n\n          (<HTMLInputElement>document.getElementById(ele[0].id)?.closest('div')).focus();\n\n\n\n          (<HTMLInputElement>document.getElementById(ele[0].id)).scrollIntoView();\n\n\n\n        }, 500);\n\n      }\n\n\n\n    });\n\n\n\n    return false;\n\n  }\n\n  return true;\n\n}\n\n\n  blankCheckChkboxDynamic(clsName:any, msg:any,elmId:any=\"\")\n  {\n    // alert(\"Arpita\");\n      let className =  'cls_'+clsName;\n      let ele = document.getElementsByClassName(className);\n      let checkedCtr:number = 0;\n      for(let i = 0; i < ele.length; i++) {\n\n         if((ele[i] as HTMLInputElement).checked)\n         {\n        \n          checkedCtr++;\n         }\n\n      }\n      if(checkedCtr==0)\n      {\n        Swal.fire({\n          icon: 'error',\n          text: 'Select '+msg\n        }).then(function(){\n\n          if(elmId!=\"\")\n\n          {\n\n            setTimeout(() => {\n\n              (<HTMLInputElement>document.getElementById(elmId)).focus();\n\n               (<HTMLInputElement>document.getElementById(elmId)).scrollTo(\n                {top: (<HTMLInputElement>document.getElementById(elmId)).getBoundingClientRect().top -\n                  document.body.getBoundingClientRect().top -50}\n                );\n\n            }, 500);\n\n          }\n\n        });\n\n        return false;\n      }\n      return true;\n  }\n\n  selectDropdown(elmVal:any, msg:any,elmId:any=\"\")\n  {\n      if(elmVal == 0 || elmVal == '' || typeof (elmVal) == undefined || elmVal == null)\n      {\n        Swal.fire({\n          icon: 'error',\n          text: this.commonserveice.langReplace('Select')+\" \"+msg\n        }).then(function(){\n\n          if(elmId!=\"\")\n\n          {\n\n            setTimeout(() => {\n              const element = <HTMLInputElement>document.getElementById(elmId);\n              element.focus();\n              element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n            }, 500);\n\n          }\n\n        });\n        return false;\n      }\n      return true;\n  }\n  maxLength(elmVal:any,fldLngth:any, msg:any,elmId:any=\"\")\n  {\n      if(elmVal.length>0 && elmVal.length>fldLngth)\n      {\n        Swal.fire({\n          icon: 'error',\n          text: msg+' should not more than ' + fldLngth + ' character'\n        }).then(function(){\n\n          if(elmId!=\"\")\n\n          {\n\n            setTimeout(() => {\n              const element = <HTMLInputElement>document.getElementById(elmId);\n              element.focus();\n              element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n            }, 500);\n\n          }\n\n        });\n        return false;\n      }\n      return true;\n  }\n\n  minLength(elmVal:any,fldLngth:any, msg:any,elmId:any=\"\")\n  {\n   \n      if(elmVal.length>0 && elmVal.length<fldLngth)\n      {\n        //alert(\"hii\");\n        Swal.fire({\n          icon: 'error',\n          text: msg+' should not be less than' + fldLngth + ' character'\n        }).then(function(){\n\n          if(elmId!=\"\")\n\n          {\n\n            setTimeout(() => {\n              const element = <HTMLInputElement>document.getElementById(elmId);\n              element.focus();\n              element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n            }, 500);\n\n          }\n\n        });\n        return false;\n      }\n      return true;\n  }\n\n\n  validEmail(elmVal:any,elmId:any=\"\")\n  {\n   \n      let pattern = new RegExp(/^([a-zA-Z0-9_.+-])+\\@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/);\n      if (elmVal != '')\n      {\n    \n          if (pattern.test(elmVal) == true)\n            return true;\n          else\n          {\n            Swal.fire({\n              icon: 'error',\n              text: 'Please enter a valid email id'\n            }).then(function(){\n\n              if(elmId!=\"\")\n    \n              {\n    \n                setTimeout(() => {\n                  const element = <HTMLInputElement>document.getElementById(elmId);\n                  element.focus();\n                  element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n                }, 500);\n    \n              }\n    \n            });\n    \n    \n            return false;\n          }\n      }\n      return true;\n  }\n  validMob(elmVal:any,elmId:any=\"\")\n  {\n      let pattern = new RegExp(/^[6-9][0-9]{9}$/);\n      if (elmVal != '')\n      {\n          if (pattern.test(elmVal) == true)\n            return true;\n          else\n          {\n            Swal.fire({\n              icon: 'error',\n              text: 'Please enter a valid mobile no'\n            }).then(function(){\n\n              if(elmId!=\"\")\n    \n              {\n    \n                setTimeout(() => {\n                  const element = <HTMLInputElement>document.getElementById(elmId);\n                  element.focus();\n                  element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n                }, 500);\n    \n              }\n    \n            });\n            return false;\n          }\n      }\n      return true;\n  }\n\n  blockspecialchar_first(evt:any,blockStatus:boolean)\n    {\n      let validStatus = true;\n      if(blockStatus == true)\n        {\n          return validStatus;\n        }\n\n      let txtValue:string = evt.target.value;\n      // console.log(txtValue);\n      // if(txtValue.length == 0)\n      //   {\n      //     Swal.fire({\n      //       icon: 'error',\n      //       text: this.comConfigServ.langReplace('White Space not allowed in 1st Place')+\"!!!\"\n      //     });\n      //     (<HTMLInputElement>document.getElementById(evt.target.id)).value='';\n      //     return false;\n      //   }\n      switch (txtValue.charCodeAt(0)) {\n        case 44:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: ', Not allowed in 1st Place !!!'\n          });\n           // viewAlert(\", Not allowed in 1st Place!!!\");\n\n            validStatus =  false;\n            break;\n        }\n\n        case 47:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '/ Not allowed in 1st Place !!!'\n          });\n            validStatus =  false;\n            break;\n        }\n\n        case 58:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: ': Not allowed in 1st Place !!!'\n          });\n            validStatus =  false;\n            break;\n        }\n\n        case 46:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '. Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 39:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: 'Single Quote not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 32:\n        {\n            Swal.fire({\n              icon: 'error',\n              text: 'White Space not allowed in 1st Place !!!'\n            });\n            validStatus =  false;\n            break;\n           // return false;\n        }\n\n        case 40:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: 'Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n         break;\n        }\n\n        case 41:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: ') Not allowed in 1st Place !!!'\n          });\n\n          validStatus =  false;\n          break;\n        }\n\n        case 45:\n        {\n            Swal.fire({\n              icon: 'error',\n              text: '- Not allowed in 1st Place !!!'\n            });\n            validStatus =  false;\n              break;\n        }\n\n        case 95:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '\"_ Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 59:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '\"; Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 124:\n        {\n\n          Swal.fire({\n            icon: 'error',\n            text: '\"| Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 63:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '\"? Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n\n        case 34:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '\" Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 35:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '# Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n\n        }\n\n        case 36:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '$ Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 38:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '& Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 126:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '~ Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 96:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '` Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 33:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '! Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 37:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '% Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 94:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '^ Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 42:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '* Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 92:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '\\\\ Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 43:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '+ Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 61:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '= Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 123:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '{ Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 125:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '} Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 91:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '[ Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 93:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '] Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 60:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '< Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 62:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '> Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 64:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '@ Not allowed in 1st Place !!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        default :\n        validStatus =  true;\n        break;\n    }\n    if(validStatus == false)\n      {\n        // (<HTMLInputElement>document.getElementById(evt.target.id)).value='';\n        evt.target.value='';\n      }\n      return validStatus;\n    }\n\n\n\n\n    checkForSpecialCharacterAllPostion(evt:any,type:any=0)\n    {\n      if(type == true ||evt.target.type==\"email\"){\n        return true;\n      }\n    \n      let txtValue:string = evt.target.value;\n      let length = txtValue.length;\n      let validStatus = true;\n      \n      if(txtValue.charCodeAt(0) == 32)  {\n        Swal.fire({\n          icon: 'error',\n          text: 'White space '+'not allowed in first place'+'!!!'\n        });\n        evt.target.value='';\n      }\n\n      switch (txtValue.charCodeAt(length-1)) {\n        case 44:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: ', '+'Not allowed'+'!!!'\n          });\n           // viewAlert(\", Not allowed!!!\");\n\n            validStatus =  false;\n            break;\n        }\n\n        case 47:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '/ '+'Not allowed'+'!!!'\n          });\n            validStatus =  false;\n            break;\n        }\n\n        case 58:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: ': '+'Not allowed'+'!!!'\n          });\n            validStatus =  false;\n            break;\n        }\n\n        case 46:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '. '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 39:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: 'Single Quote not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        // case 32:\n        // {\n        //     Swal.fire({\n        //       icon: 'error',\n        //       text: 'White Space not allowed'+'!!!'\n        //     });\n        //     validStatus =  false;\n        //     break;\n        //    // return false;\n        // }\n\n        case 40:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: 'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n         break;\n        }\n\n        case 41:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: ') '+'Not allowed'+'!!!'\n          });\n\n          validStatus =  false;\n          break;\n        }\n\n        case 45:\n        {\n            Swal.fire({\n              icon: 'error',\n              text: '- '+'Not allowed'+'!!!'\n            });\n            validStatus =  false;\n              break;\n        }\n\n        case 95:\n        {if(type !=1)\n          {\n            Swal.fire({\n              icon: 'error',\n              text: '\"_ '+'Not allowed'+'!!!'\n            });\n            validStatus =  false;\n          }\n\n          break;\n        }\n\n        case 59:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '\"; '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 124:\n        {\n\n          Swal.fire({\n            icon: 'error',\n            text: '\"| '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 63:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '\"? '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n\n        case 34:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '\" '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 35:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '# '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n\n        }\n\n        case 36:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '$ '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 38:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '& '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 126:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '~ '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 96:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '` '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 33:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '! '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 37:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '% '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 94:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '^ '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 42:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '* '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 92:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '\\\\ '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 43:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '+ '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 61:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '= '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 123:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '{ '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 125:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '} '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 91:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '[ '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 93:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '] '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 60:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '< '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 62:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '> '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 64:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '@ '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        default :\n        validStatus =  true;\n        break;\n       }\n    if(validStatus == false)\n      {\n        // (<HTMLInputElement>document.getElementById(evt.target.id)).value='';\n        evt.target.value='';\n      }\n      return validStatus;\n\n\n      if(evt.target.value.indexOf(' ') > 0)\n        {\n          Swal.fire({\n            icon: 'error',\n            text: 'Space not allowed'\n          });\n          // (<HTMLInputElement>document.getElementById(evt.target.id)).value='';\n          evt.target.value='';\n          return false;\n        }\n        return true;\n\n    }\n    textareaSpecialCharacterAllPostion(evt:any,type:any=0)\n    {\n      let txtValue:string = evt.target.value;\n     // console.log(evt.target.value);\n      let length = txtValue.length;\n      let validStatus = true;\n\n      switch (txtValue.charCodeAt(length-1)) {\n        case 47:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '/ '+'Not allowed'+'!!!'\n          });\n            validStatus =  false;\n            break;\n        }\n        case 58:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: ': '+'Not allowed'+'!!!'\n          });\n            validStatus =  false;\n            break;\n        }\n        case 39:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: 'Single Quote not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 95:\n        {if(type !=1)\n          {\n            Swal.fire({\n              icon: 'error',\n              text: '\"_ '+'Not allowed'+'!!!'\n            });\n            validStatus =  false;\n          }\n\n          break;\n        }\n        case 59:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '\"; '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 124:\n        {\n\n          Swal.fire({\n            icon: 'error',\n            text: '\"| '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 34:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '\" '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 35:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '# '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n\n        }\n        case 36:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '$ '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 38:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '& '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 126:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '~ '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 96:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '` '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 33:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '! '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 37:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '% '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 94:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '^ '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 42:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '* '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 92:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '\\\\ '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 43:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '+ '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 61:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '= '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 123:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '{ '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 125:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '} '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 91:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '[ '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 93:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '] '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 60:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '< '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n\n        case 62:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '> '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        case 64:\n        {\n          Swal.fire({\n            icon: 'error',\n            text: '@ '+'Not allowed'+'!!!'\n          });\n          validStatus =  false;\n          break;\n        }\n        default :\n        validStatus =  true;\n        break;\n       }\n    if(validStatus == false)\n      {\n        // (<HTMLInputElement>document.getElementById(evt.target.id)).value='';\n        evt.target.value='';\n      }\n      return validStatus;\n\n\n      if(evt.target.value.indexOf(' ') > 0)\n        {\n          Swal.fire({\n            icon: 'error',\n            text: 'Space not allowed'\n          });\n          // (<HTMLInputElement>document.getElementById(evt.target.id)).value='';\n          evt.target.value='';\n          return false;\n        }\n        return true;\n\n    }\n\n  validPassword(elmVal:any,elmId:any=\"\")\n  {\n      let pattern = new RegExp(/^.*(?=.{8,15})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&!%()*?]).*$/);\n      if (elmVal != '')\n      {\n        //alert(\"hii\");\n          if (pattern.test(elmVal) == true)\n            return true;\n          else\n          {\n            Swal.fire({\n              icon: 'error',\n              text: 'Please enter a valid password'\n            }).then(function(){\n\n              if(elmId!=\"\")\n    \n              {\n    \n                setTimeout(() => {\n    \n                  (<HTMLInputElement>document.getElementById(elmId)).focus();\n    \n                   (<HTMLInputElement>document.getElementById(elmId)).scrollTo(\n                {top: (<HTMLInputElement>document.getElementById(elmId)).getBoundingClientRect().top -\n                  document.body.getBoundingClientRect().top -50}\n                );\n    \n                }, 500);\n    \n              }\n    \n            });\n            return false;\n          }\n      }\n      return true;\n  }\n\n// validates Aadhar number received as string\n  validAadhar(elmVal:any) {\n    if (elmVal != '')\n      {\n          // multiplication table\n          const d = [\n            [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n            [1, 2, 3, 4, 0, 6, 7, 8, 9, 5],\n            [2, 3, 4, 0, 1, 7, 8, 9, 5, 6],\n            [3, 4, 0, 1, 2, 8, 9, 5, 6, 7],\n            [4, 0, 1, 2, 3, 9, 5, 6, 7, 8],\n            [5, 9, 8, 7, 6, 0, 4, 3, 2, 1],\n            [6, 5, 9, 8, 7, 1, 0, 4, 3, 2],\n            [7, 6, 5, 9, 8, 2, 1, 0, 4, 3],\n            [8, 7, 6, 5, 9, 3, 2, 1, 0, 4],\n            [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n          ]\n\n          // permutation table\n          const p = [\n            [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n            [1, 5, 7, 6, 2, 8, 3, 0, 9, 4],\n            [5, 8, 0, 3, 7, 9, 6, 1, 4, 2],\n            [8, 9, 1, 6, 0, 4, 3, 5, 2, 7],\n            [9, 4, 5, 3, 1, 2, 6, 8, 7, 0],\n            [4, 2, 8, 6, 5, 7, 3, 9, 0, 1],\n            [2, 7, 9, 3, 8, 0, 6, 4, 1, 5],\n            [7, 0, 4, 6, 9, 1, 3, 2, 5, 8]\n          ]\n          let c = 0\n          let invertedArray = elmVal.split('').map(Number).reverse()\n\n          invertedArray.forEach((val:any, i:any) => {\n            c = d[c][p[(i % 8)][val]]\n          })\n          if (c === 0)\n            return true;\n          else\n          {\n            Swal.fire({\n              icon: 'error',\n              text: 'Please enter a valid aadhaar no'\n            });\n            return false;\n          }\n      }\n      return true;\n  }\n\n  isCharKey(event:any){\n    var charCode2 = (event.which) ? event.which : event.keyCode\n    if (charCode2 > 32 && (charCode2 < 65 || charCode2 > 90) &&\n            (charCode2 < 97 || charCode2 > 122) ) {\n        return false;\n    }\n    return true;\n  }\n  isCharKeyMob(val: any) {\n    return val.replace(/[^a-zA-z ]/g, '');\n  }\n\n\n  isNumberKey(event:any)\n  {\n      let charCode = (event.which) ? event.which : event.keyCode\n      if (charCode > 31 && (charCode < 48 || charCode > 57))\n          return false;\n      return true;\n  }\n  isNumberKeyMob(val: any) {\n    return val.replace(/[^0-9]/g, '');\n  }\n\n  isAlphaNumeric(event:any){\n    console.log(event);\n    const charCode2 = (event.which) ? event.which : event.keyCode\n    if (charCode2 > 32 && (charCode2 < 65 || charCode2 > 90) && (charCode2 < 97 || charCode2 > 122) && (charCode2 > 31 && (charCode2 < 48 || charCode2 > 57) )) {\n        return false;\n    }\n\n    return true;\n\n  }\n\n\n  isAlphaNumericDynamic(event:any,blockSpecialChars:any){\n      let isshift:any=event.shiftKey;\n      const charCode2 = (event.which) ? event.which : event.keyCode\n        if(blockSpecialChars == false){\n            if (charCode2 > 32 && (charCode2 < 65 || charCode2 > 90) && (charCode2 < 97 || charCode2 > 122) && (charCode2 > 31 && (charCode2 < 48 || charCode2 > 57) )) {\n                return false;\n            }\n            return true;\n        }\n        else if( blockSpecialChars == true){\n              if(((isshift==false) && charCode2 >= 48 && charCode2 <=57) || ((isshift==false) && charCode2 >= 65 && charCode2 <=90) || (charCode2==8) || ((isshift==false) && charCode2==190) || ((isshift==false) && charCode2 == 188) ||((isshift==false) && charCode2 == 189)|| ((isshift == true) && (charCode2 == 191) || (charCode2==48) || (charCode2==57) ))\n              return true;\n\n            }\n        return false;\n    \n  }\n\n  allowspecialChar(event:any){\n\n    const charCode2 = (event.which) ? event.which : event.keyCode\n    if (charCode2 > 32 && (charCode2 < 65 || charCode2 > 90) && (charCode2 < 97 || charCode2 > 122) && (charCode2 > 31 && (charCode2 <= 48 || charCode2 >= 57) && (charCode2 >= 188 || charCode2 <= 191))) {\n        return false;\n    }\n\n    return true;\n\n  }\n\n\n  isAlphaNumericMob(val:any){\n    var numPattern = new RegExp(/^[a-zA-Z0-9-.@ /]*$/);\n    if (numPattern.test(val))\n      return true;\n    return false;\n  }\n\n  isDecimal(event:any){\n    let charCode = (event.which) ? event.which : event.keyCode;\n    var txtVal = event.target.value;\n    if ((charCode > 47 && charCode < 58) || charCode == 46 || charCode == 8 || charCode == 190)\n    {\n        if (txtVal.indexOf(\".\") > 0 && charCode == 190)\n        {\n          return false;\n        }\n        else\n            return true;\n    }\n    return false;\n  }\n\n  isDecimalMob(val: any) {\n    return val.replace(/[^\\d+(\\.\\d{1,2}]/g, '');\n  }\n\n\n  dynCtrlVal(ctrlValParam:any,elemObj:any)\n  {\n    let dynData       = ctrlValParam['dynDataObj'];\n    let elmVal        = ctrlValParam['ctrlVal'];\n    let drftSts       = ctrlValParam['drftSts'];\n    let dispNnSts     = ctrlValParam['dispNnSts'];\n    let sectnCtrlType = ctrlValParam['ctrlType'];\n    let ctrlNm      = '';\n    let lblName     = '';\n    let ctrlType    = 0;\n    let mndSts      = 0;\n    let fldLngth    = 0;\n    if(sectnCtrlType==8)\n    {\n      ctrlNm      = '';\n      lblName     = dynData['columnName'];\n      ctrlType    = dynData['columnType'];\n      mndSts      = (dispNnSts===false)?dynData['columnMnd']:0;\n      fldLngth    = dynData['fieldLen'];\n    }\n    else{\n      ctrlNm      = dynData['jsnControlArray'][0]['ctrlName'];\n      lblName     = dynData['vchLabelName'];\n      ctrlType    = dynData['tinControlType'];\n      mndSts      = (dispNnSts===false)?dynData['tinMandatorySts']:0;\n      fldLngth    = dynData['intFieldLength'];\n    }\n\n    let valSts = true;\n\n    // for select tag\n    if (mndSts==1 && ctrlType==2) {\n      if(drftSts==false)\n      {\n        if(!this.selectDropdown(elmVal,lblName))\n        {\n          valSts = false;\n        }\n      }\n    }\n    // for radio button\n    else if (mndSts==1 && (ctrlType==5 || ctrlType==1)) {\n      if(drftSts==false)\n      {\n        if(!this.blankCheckRdoDynamic(ctrlNm,lblName))\n        {\n          valSts = false;\n        }\n      }\n    }\n    // for text box\n    else if (mndSts==1 && ctrlType==6) {;\n      if(drftSts==false)\n      {\n        if(!this.blankCheck(elmVal,lblName))\n        {\n          valSts = false;\n          //dynData.focus();\n        }\n      }\n      if(!this.maxLength(elmVal,fldLngth,lblName))\n      {\n        valSts = false;\n        //dynData.focus();\n      }\n    }\n    // for text area\n    else if (mndSts==1 && ctrlType==7) {\n      if(drftSts==false)\n      {\n        if(!this.blankCheck(elmVal,lblName))\n        {\n          valSts = false;\n          //dynData.focus();\n        }\n      }\n      if(!this.maxLength(elmVal,fldLngth,lblName))\n      {\n        valSts = false;\n        //dynData.focus();\n      }\n    }\n\n    // for date box\n    else if (mndSts==1 && ctrlType==9) {\n      if(drftSts==false)\n      {\n        if(!this.blankCheck(elmVal,lblName))\n        {\n          valSts = false;\n        }\n      }\n    }\n\n    // for time box\n    else if (mndSts==1 && ctrlType==10) {\n      if(drftSts==false)\n      {\n        if(!this.blankCheck(elmVal,lblName))\n        {\n          valSts = false;\n        }\n      }\n    }\n\n    // for date time box\n    else if (mndSts==1 && ctrlType==11) {\n      if(drftSts==false)\n      {\n        if(!this.blankCheck(elmVal,lblName))\n        {\n          valSts = false;\n        }\n      }\n    }\n\n    else{\n      valSts = true;\n    }\n    return valSts;\n  }\n\n  isDashSlashNumeric(event:any){\n    let charCode = (event.which) ? event.which : event.keyCode\n    // console.log(charCode);\n    if (charCode > 31 && (charCode < 45 || charCode > 57 || charCode==46))\n        return false;\n    return true;\n  }\n  isDashSlashNumericMob(val: any) {\n    return val.replace(/[^0-9/-]/g, '');\n  }\n  is_url(str:any)\n  {\n    if(str=='' || str == null)\n  {\n    return true;\n  }\n  else\n  { \n      // let regexp =  /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n      let regexp=/^https?\\:\\/\\/[^\\/\\s]+(\\/.*)?$/;      //Accept both private and domain api url\n      if (regexp.test(str))\n          {\n            return true;\n          }\n          else\n          {\n            Swal.fire({\n              icon: 'error',\n              text: this.commonserveice.langReplace('Enter valid URL')\n            });\n            return false;\n          }\n      \n      }\n  }\n  chkPassword(str:any)\n  {\n    let regexp =  /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/;\n          if (regexp.test(str))\n          {\n         \n            return true;\n          }\n          else\n          {\n            Swal.fire({\n              icon: 'error',\n              text: 'Enter valid Password'\n            });\n            return false;\n          }\n  }\n  chkblankspace(str:any)\n  {\n    var regexp = /^\\S*$/\n          if (regexp.test(str))\n          {\n            return true;\n          }\n          else\n          {\n            Swal.fire({\n              icon: 'error',\n              text: 'Space not allowed'\n            });\n            return false;\n          }\n  }\n  validateFile(fileUploadType: string ,actualFileType:any) {\n    var ext = fileUploadType.substring(fileUploadType.lastIndexOf('/') + 1);\n    const fileTypes :any=\n    {\"pdf\"  :['pdf'],\n    \"image\" :['jpeg', 'jpe', 'png', 'gif','jpg'],\n    \"excel\" :['csv', 'dbf', 'htm','html','mht', 'mhtml', 'ods','pdf', 'prn',  'txt', 'xla', 'xlam', 'xls', 'xlsb', 'xlsx','xlt', 'xltm', 'xls', 'xlsb', 'xlsm', 'xlsx','xlw', 'xps'],\n    \"doc\"   :['doc', 'docm', 'docx', 'dot','dotm', 'dotx','htm', 'html', 'mht', 'mhtml', 'odt', 'pdf', 'rtf', 'txt', 'wps', 'xml','xps','msword'],\n    \"video\" :['mp4','ogx','oga','ogv','ogg','webm'],\n    \"audio\":['mp3','mpeg']\n  };\n     if (fileTypes[actualFileType].includes(ext)) {\n        return true;\n     }\n     else {\n         return false;\n     }\n}\n    validateFileSize(uploadedFileSize:any,actualFileSize:any,actualFileSizeType:any)\n    {\n\n      if (actualFileSizeType.toLowerCase() == 'kb')\n      {\n        actualFileSize = 1024*actualFileSize;\n      }\n      else\n      {\n        actualFileSize = 1024*1024*actualFileSize;\n      }\n\n      let fileValidStatus = true;\n        if(uploadedFileSize > actualFileSize)\n          {\n            fileValidStatus = false;\n          }\n      return fileValidStatus;\n    }\n\n    tablenameval(obj:any) {\n      obj.target.value=obj.target.value.toUpperCase().replaceAll(\"-\", \"_\");\n    }\n\n    checkForSpaceInAllPostion(evt:any)\n      {\n        if(evt.target.value.indexOf(' ') > 0)\n          {\n            Swal.fire({\n              icon: 'error',\n              text: 'Space not allowed'\n            });\n            (<HTMLInputElement>document.getElementById(evt.target.id)).value='';\n            return false;\n          }\n          return true;\n\n      }\n\n      // splregaxValidation(obj:any)\n      // {\n      //   let regexp=/[!@#$%^&*()+\\=\\[\\]{};':\"\\\\|,.<>\\/?]/;\n      //   if (regexp.test(obj))\n      //         {\n      //           return true;\n      //         }\n      //         else\n      //         {\n      //           Swal.fire({\n      //             icon: 'error',\n      //             text: this.comConfigServ.langReplace('Special character not allowed except _')\n      //           });\n      //           return false;\n      //         }\n      // }\n\n    \n      \n      containsSpecialChars(str:any) {\n        const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  \n        if (specialChars.test(str))\n        {\n          \n          return false;\n        }\n        else\n        {\n  \n          return true;\n        }\n  \n      //  return specialChars.test(str);\n      }\n}\n","import { Injectable } from '@angular/core';\n\nimport * as CryptoJS from 'crypto-js';\nimport { VarlistService } from './varlist.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EncrypyDecrpyService {\n\n\n\n\n  constructor(private varlist:VarlistService) { }\n\n \n  encText(plainText:any) {\n    let encKey = this.varlist.apiHashingKey;\n    let text = plainText;\n    let iv = CryptoJS.enc.Hex.parse(this.varlist.encryptIV);\n    return btoa(CryptoJS.AES.encrypt(text, encKey, { iv: iv }).toString());\n  }\n\n  decText(encryptedText:any) {\n    encryptedText = atob(encryptedText);\n    let encKey = this.varlist.apiHashingKey;\n    let iv = CryptoJS.enc.Hex.parse(this.varlist.encryptIV);\n    var decryptText = CryptoJS.AES.decrypt(encryptedText, encKey, { iv: iv });\n    return decryptText.toString(CryptoJS.enc.Utf8);\n  }\n\n\n\n   escapeHtml(text:string) {\n     if(text=='')\n     {\n        return text;\n     }\n    return text\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&quot;\");\n  }\n\n   decodeHtml(str:any)\n{\n  if(str)\n  {\n    var map:any =\n    {\n        '&amp;': '&',\n        '&lt;': '<',\n        '&gt;': '>',\n        '&quot;': '\"',\n        '&#039;': \"'\"\n    };\n    return str.replace(/&amp;|&lt;|&gt;|&quot;|&#039;/g, function(m:any) {return map[m];});\n}\nelse\n{\n  return  str;\n}\n}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { VarlistService } from './varlist.service';\nimport * as CryptoJS from \"crypto-js\";\n@Pipe({\n  name: 'translate'\n})\nexport class TranslatePipe implements PipeTransform {\n\n  constructor(public varlist: VarlistService) {}\n  transform(languageText:any): unknown {\n\n    if(languageText==''|| languageText==undefined || languageText=='undefined' || sessionStorage.getItem(\"ALL_LANG_LIST\")==undefined ||  sessionStorage.getItem(\"ALL_LANG_LIST\")=='undefined')\n        {\n        \n          return languageText;\n        }\n       \n        let lngToLower : any = languageText.toLowerCase();\n        let allLangListResult:any = sessionStorage.getItem(\"ALL_LANG_LIST\");\n        let SeetionParsedLangRes =JSON.parse(CryptoJS.AES.decrypt(allLangListResult, this.varlist.apiHashingKey).toString(CryptoJS.enc.Utf8)); \n\n        let userallLangListResult:any = sessionStorage.getItem(\"USER_LANGPREF\");\n        let userSeetionParsedLangRes =JSON.parse(CryptoJS.AES.decrypt(userallLangListResult, this.varlist.apiHashingKey).toString(CryptoJS.enc.Utf8)); \n\n\n\n        if(SeetionParsedLangRes[lngToLower] != undefined)\n        {\n          let allParsedLang = JSON.parse(SeetionParsedLangRes[lngToLower]);\n          \n\n          return allParsedLang[userSeetionParsedLangRes];\n\n\n        }\n        else\n         {\n            return languageText;\n         }\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MsgengineLibService } from '../msgengine-lib.service';\n\n@Component({\n  selector: 'lib-libtabs',\n  templateUrl: './libtabs.component.html',\n  styleUrls: ['./libtabs.component.css']\n})\nexport class LibtabsComponent implements OnInit {\n  message: any;\n  @Input() tabMessage: any;\n  @Input() activeid: any;\n  tabURL: any;\n  constructor(public commonserveice:MsgengineLibService) { }\n\n  ngOnInit(): void {\n    this.tabURL = this.tabMessage.tabUrl;\n    if (typeof this.tabMessage.id != 'undefined' && this.tabMessage.id != '') {\n      this.tabURL = this.tabMessage.tabUrl + '/' + this.tabMessage.id;\n    }\n  }\n\n}\n","<li>\n    <a\n      class=\"nav-item nav-link tab-link\"\n      [ngClass]=\"\n        activeid == undefined || activeid == '' || activeid == '0'\n          ? {\n              active:\n                tabMessage.tabClass === 'active add d-none' ||\n                tabMessage.tabClass === 'active',\n              'd-none': tabMessage.tabClass === 'active edit d-none'\n            }\n          : {\n              active: tabMessage.tabClass === 'active edit d-none',\n              'd-none': tabMessage.tabClass === 'active add d-none'\n            }\n      \"\n      [routerLink]=\"activeid ? (tabMessage.tabUrl == '' ? '../'+tabMessage.tabUrl+'/'+activeid : '../'+ tabMessage.tabUrl ) : tabURL\"\n      [attr.tabspecialclass]=\"tabMessage.pageType\"\n    >\n      {{ tabMessage.tabName | translate  }}\n    </a>\n  </li>\n","import { HttpClient } from '@angular/common/http';\nimport { Output } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { EncrypyDecrpyService } from '../encrypy-decrpy.service';\nimport { MsgengineLibService } from '../msgengine-lib.service';\nimport Swal from 'sweetalert2';\nimport * as CryptoJS from 'crypto-js';\nimport {Location} from '@angular/common';\nimport * as $ from 'jquery';\nimport { Buffer } from 'buffer';\nimport { VarlistService } from '../varlist.service';\n\n\n\n@Component({\n  selector: 'lib-libutils',\n  templateUrl: './libutils.component.html',\n  styleUrls: ['./libutils.component.css']\n})\nexport class LibutilsComponent implements OnInit {\n  message:any;\n  @Input() childMessage:any;\n  @Input() sendIds:any;\n  @Input() funType:any;\n  @Input() pubUnpubStatus: any;\n  @Output(\"callfunction\") callfunction:EventEmitter<any> = new EventEmitter();\n  @Output(\"callfunction3\") callfunction3:EventEmitter<any> = new EventEmitter();\n@Input() reloadUrl:any;\n\n\n\n\n\n\n  constructor(\n    private httpClient: HttpClient,\n    private _location: Location,\n    public commonserveice:MsgengineLibService,\n    private encDec: EncrypyDecrpyService,\n    private varlist:VarlistService\n  ) {\n  \n   }\n\n  ngOnInit(): void {\n  }\n  opensearch(){\n    let searchcontent:any = document.getElementById(\"search-container\");\n  \n    if(searchcontent.classList.contains(\"active\")) {\n        searchcontent.classList.remove(\"active\");\n    }\n    else {\n        searchcontent.classList.add(\"active\");\n    }\n    // let element = <HTMLInputElement><unknown>document.getElementsByClassName(\"search-container\");\n    // alert(element)\n    // element.classList.toggle(\"active\");\n  \n\n   // $(\".search-container\").toggleClass(\"active\");\n  }\n\n  printTable(){\n    let printContents:any;\n    let popupWin:any;\n    printContents =  document.getElementById(\"print-section\")?.innerHTML;\n    popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');\n    popupWin.document.open();\n    popupWin.document.write(`\n  <html>\n    <head>\n    <link href=\"../../assets/css/print.css\" rel=\"stylesheet\">\n     \n    </head>\n<body onload=\"window.print();window.close()\">\n<div class=\"header\">\n<img src=\"../../assets/img/logoblack.png\">\n</div>\n\n${printContents}</body>\n  </html>`\n    );\n    popupWin.document.close();\n  }\n\n  deleteAll(ids:any,ftype:any) {\n    if (ids.length == 0) {\n      this.commonserveice.swalfire('error',this.commonserveice.langReplace('Please select the record you want to delete'))\n \n    }\n    else {\n      var itemids = ids.toString();\n\n      let letterParams = {\n        \"itemId\": itemids,\n        \"itemStatus\": \"1\"\n      };\n\n      Swal.fire({\n        title: this.commonserveice.langReplace('Are you sure') + '?',\n        text: this.commonserveice.langReplace(\"You want to delete this record\"),\n        icon: 'warning',\n        showCancelButton: true,\n        cancelButtonText: this.commonserveice.langReplace('Cancel'),\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: this.commonserveice.langReplace('Yes') + ', ' + this.commonserveice.langReplace('delete it') + '!'\n      }).then((result: any) => {\n        if (result.isConfirmed) {\n          \n          this.commonserveice.deleteAll(letterParams, ftype).subscribe({\n  next: (response) => {\n    let respData = response.RESPONSE_DATA;\n    let respToken = response.RESPONSE_TOKEN;\n    let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n    // console.log(respToken);\n    // console.log(verifyToken);\n\n    if (respToken == verifyToken) {\n      let res: any = Buffer.from(respData, 'base64');\n      res = JSON.parse(res.toString());\n      // console.log(res.status);\n\n      if (res.status == 200) {\n        Swal.fire(\n          this.commonserveice.langReplace('Deleted')+' !',\n          this.commonserveice.langReplace('Record has been deleted'),\n          'success'\n        )\n       // $('.checkAll').prop('checked', false);\n        this.callfunction.emit();\n        this.callfunction3.emit();\n      } else if (res.status == 417) {\n        this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n     \n      }\n      else {\n        this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.somethingWrong))\n     \n      }\n    } else {\n      this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.errorApiResponse))\n  \n    }\n  },\n  error: (msg) => {\n         this.commonserveice.directlogoutlib()\n }\n})\n        \n\n\n\n        }\n      })\n\n\n\n    }\n  }\n  backClicked() {\n    this._location.back();\n  }\n  publishAll(ids:any,ftype:any,pubUnpubStatus: any) {\n    let puberroStatus: any = 0;\n    for (let klp of pubUnpubStatus) {\n\n      if (klp.publishUnpublisStatus == 1) {\n        puberroStatus = 1;\n        break;\n      }\n    }\n    if (puberroStatus == 1) {\n      this.commonserveice.swalfire('error',this.commonserveice.langReplace(\"Please select the unpublished record to publish\"))\n     \n      return\n    }\n\n    if (ids.length == 0) {\n      this.commonserveice.swalfire('error',this.commonserveice.langReplace(\"Please select the record you want to publish\"))\n  \n    }\n    else {\n\n      let itemids = ids.toString();\n\n      let letterParams = {\n        \"itemId\": itemids,\n        \"itemStatus\": \"2\"\n      };\n\n      Swal.fire({\n        text: this.commonserveice.langReplace(\"You want to publish this record\"),\n        icon: 'warning',\n        showCancelButton: true,\n        cancelButtonText: this.commonserveice.langReplace('Cancel'),\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: this.commonserveice.langReplace('Yes') + ', ' + this.commonserveice.langReplace('publish it') + '!'\n      }).then((result: any) => {\n\n        if (result.isConfirmed) {\n          this.commonserveice.publishAll(letterParams, ftype).subscribe({\n            next: (response) => {\n              let respData = response.RESPONSE_DATA;\n              let respToken = response.RESPONSE_TOKEN;\n              let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n              if (respToken == verifyToken) {\n                let res: any = Buffer.from(respData, 'base64');\n                let responseResult = JSON.parse(res)\n                \n                if (responseResult.status == 200) {\n                \n                  Swal.fire(\n                    this.commonserveice.langReplace('Published')+' !',\n                    this.commonserveice.langReplace('Publish Records Successfully'),\n                    'success'\n                  )\n                 // $('.checkAll').prop('checked', false);\n                  this.callfunction.emit();\n                  this.callfunction3.emit();\n                } else if (responseResult.status == 417) {\n                  this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n             \n                }\n                else {\n                  this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.somethingWrong))\n                \n                }\n              } else {\n                this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.errorApiResponse))\n               \n              }\n            },\n            error: (msg) => {\n                   this.commonserveice.directlogoutlib()\n           }\n         })\n        \n        }\n      })\n\n\n\n    }\n  }\n  unpublishAll(ids:any,ftype:any,pubUnpubStatus: any) {\n    let puberroStatus: any = 0;\n    for (let klp of pubUnpubStatus) {\n      if (klp.publishUnpublisStatus == 0) {\n        puberroStatus = 1;\n        break;\n      }\n    }\n    if (puberroStatus == 1) {\n      this.commonserveice.swalfire('error',this.commonserveice.langReplace('Please select the published record to unpublish'))\n    \n      return\n    }\n\n    if (ids.length == 0) {\n      this.commonserveice.swalfire('error',this.commonserveice.langReplace('Please select the record you want to unpublish'))\n     \n    }\n    else {\n      let itemids = ids.toString();\n\n      let letterParams = {\n        \"itemId\": itemids,\n        \"itemStatus\": \"3\"\n      };\n      Swal.fire({\n        text: this.commonserveice.langReplace(\"You want to unpublish this record\"),\n        icon: 'warning',\n        showCancelButton: true,\n        cancelButtonText: this.commonserveice.langReplace('Cancel'),\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: this.commonserveice.langReplace('Yes') + ', ' + this.commonserveice.langReplace('unpublish it')\n      }).then((result: any) => {\n        if (result.isConfirmed) {\n          this.commonserveice.unpublishAll(letterParams, ftype).subscribe({\n            next: (response) => {\n              let respData = response.RESPONSE_DATA;\n              let respToken = response.RESPONSE_TOKEN;\n              let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n              if (respToken == verifyToken) {\n                let res: any = Buffer.from(respData, 'base64');\n                let responseResult = JSON.parse(res)\n                \n                if (responseResult.status == 200) {\n                  Swal.fire(\n                    this.commonserveice.langReplace('Unpublished'),\n                    this.commonserveice.langReplace('Unpublish Records Successfully') + '.',\n                    'success'\n                  )\n                 // alert(0)\n                  itemids = '';\n               //   $('.checkAll').prop('checked', false);\n                  this.callfunction.emit();\n                  this.callfunction3.emit();\n                } else if (res.status == 417) {\n                  this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n                \n                }\n                else {\n                  this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.somethingWrong))\n               \n                }\n              } else {\n                this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.errorApiResponse))\n             \n              }\n            },\n            error: (msg) => {\n                   this.commonserveice.directlogoutlib()\n           }\n         })\n        \n        }\n      })\n    }\n  }\n}\n"," <div [ngSwitch]=\"childMessage.utilName\">\n    <div *ngSwitchCase=\"'mandatory'\">\n          <p class=\"ml-2\">( * )  {{'Indicates Mandatory Fields'| translate}} .</p>\n      </div>\n      <div *ngSwitchCase=\"'search'\">\n              <a  id=\"searchicon\" href=\"javascript:void(0)\" ngbTooltip=\"{{'Search'| translate}}\" title=\"\" (click)=\"opensearch()\" data-original-title=\"Search\"><i class=\"icon-search1\"></i></a>\n          </div>\n      <div *ngSwitchCase=\"'print'\">\n              <a  id=\"printicon\" href=\"javascript:void(0)\" ngbTooltip=\"{{'Print'| translate}}\" title=\"\" (click)=\"printTable()\"  data-original-title=\"Print\"><i class=\"icon-print-solid\"></i></a>   \n      </div>\n     \n      <div *ngSwitchCase=\"'delete'\">\n              <a  id=\"deleteicon\" href=\"javascript:void(0)\" ngbTooltip=\"{{'Delete'| translate}}\" title=\"\" (click)=\"deleteAll(sendIds,funType)\"  data-original-title=\"Delete\"><i class=\"icon-trash-solid\"></i></a>\n      </div>\n      <div *ngSwitchCase=\"'publish'\">\n          <a  id=\"publishicon\" href=\"javascript:void(0)\" ngbTooltip=\"{{'Publish'| translate}}\" title=\"\" (click)=\"publishAll(sendIds,funType,pubUnpubStatus)\"  data-original-title=\"Publish\"><i class=\"icon-volume-up-solid\"></i></a>\n      </div>\n      <div *ngSwitchCase=\"'unpublish'\">\n          <a  id=\"unpublishicon\" href=\"javascript:void(0)\" ngbTooltip=\"{{'Unpublish'| translate}}\" title=\"\" (click)=\"unpublishAll(sendIds,funType,pubUnpubStatus)\" data-original-title=\"Unpublish\"><i class=\"icon-volume-off-solid\"></i></a>\n      </div>\n      <div *ngSwitchCase=\"'download'\">\n              <a  title=\"\" href=\"javascript:void(0)\" id=\"downloadicon\" ngbTooltip=\"{{'Download'| translate}}\" data-original-title=\"Download\"><i class=\"icon-download-solid\"></i></a>\n          </div>\n          <div *ngSwitchCase=\"'back'\">\n              <a  title=\"\" href=\"javascript:void(0)\" id=\"backicon\" ngbTooltip=\"{{'Back'| translate}}\" (click)=\"backClicked()\" data-original-title=\"Back\"><i class=\"icon-arrow-left-solid\"></i></a>\n          </div>\n      <div *ngSwitchDefault></div>\n    </div> \n\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { MsgengineLibService } from '../msgengine-lib.service';\nimport { ValidatorchecklistService } from '../validationchecklist.service';\nimport { EncrypyDecrpyService } from '../encrypy-decrpy.service';\nimport * as CryptoJS from 'crypto-js';\nimport { Buffer } from 'buffer';\nimport { VarlistService } from '../varlist.service';\n\n@Component({\n  selector: 'lib-addgetway',\n  templateUrl: './addgetway.component.html',\n  styleUrls: ['./addgetway.component.css']\n})\nexport class AddgetwayComponent implements OnInit {\n  //\\\\ ======================== // Variables // ======================== //\\\\ \n  title: any;\n  tablist: any;\n  utillist: any;\n\n  jsonurl: any = [{\n      \"pagetitle\": \"Gateway Configuration\",\n      \"tabList\": [{\n              \"tabName\": \"Add\",\n              \"tabUrl\": \"../addgateway\",\n              \"tabClass\": \"active\"\n          },\n          {\n              \"tabName\": \"View\",\n              \"tabUrl\": \"../viewgateway\"\n          }\n\n      ],\n      \"utils\": [{\n              \"utilName\": \"mandatory\"\n          }\n\n\n      ],\n\n\n  }];\n\n  messaageslist: any = {\n      \"successMsg\": \"Data saved successfully\",\n      \"updatesuccessMsg\": \"Data Updated successfully\",\n      \"errorMsg\": \"Error in database\",\n      \"warningtype\": \"You want to delete this record\",\n      \"msgApilabel\": \"Label can not be blank\",\n      \"msgApikey\": \"Key can not be blank\",\n      \"msgApivalue\": \"Value can not be blank\",\n      \"getwayType\": \"Gateway type\",\n      \"getwayName\": \"Gateway name\",\n      \"getwayURl\": \"Enter Gateway Url\",\n      \"methodtype\": \"method type\",\n      \"contactaddress\": \"Enter contact address\",\n      \"msggetwayName\": \"Enter Gateway name\"\n\n  }\n\n\n  getwaytypes: any;\n  selType: any = 0;\n  selgetwayName: any = 0;\n  selgetwayId: any = 0;\n  dynamicListArray: any = [];\n  getwayNamelist: any;\n  getDetailslist: any;\n  txtgetwaymName: any;\n  txtUrl: any;\n  selPostmenthod: any = 0;\n  txtContactAddress: any;\n  langKey: any = 'en';\n  //\\\\ ======================== // Variables // ======================== //\\\\ \n  constructor(\n      private route: Router, private httpClient: HttpClient,\n      public commonserveice: MsgengineLibService,\n      public vldChkLst: ValidatorchecklistService,\n      private encDec: EncrypyDecrpyService,\n      private varlist: VarlistService\n\n  ) {}\n\n\n  ngOnInit(): void {\n      this.loadconfig();\n      this.getGetwaytypes();\n      // this.addChangeEventForLabel();\n  }\n  loadconfig() {\n\n      this.tablist = this.jsonurl[0].tabList;\n      this.utillist = this.jsonurl[0].utils\n      this.title = this.jsonurl[0].pagetitle;\n\n  }\n  multilingual(test: any) {\n      return test;\n  }\n  //\\\\ ======================== // Get getway types // ======================== //\\\\ \n  getGetwaytypes() {\n\n      let getwayparm = {}\n      this.commonserveice.viewGatwayTypes(getwayparm).subscribe({\n        next: (response) => {\n            let respData = response.RESPONSE_DATA;\n            let respToken = response.RESPONSE_TOKEN;\n            let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n  \n            if (respToken == verifyToken) {\n                let res: any = Buffer.from(respData, 'base64');\n                res = JSON.parse(res.toString());\n                if (res.status == \"200\") {\n                    this.getwaytypes = res.result;\n  \n                } else if (res.status == 501) {\n  \n                    this.commonserveice.directlogoutlib()\n                } else {\n\n                    this.commonserveice.swalfire('error',this.commonserveice.langReplace(res.message))\n\n                   \n                }\n            } else {\n  \n                this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n\n              \n            }\n        },\n        error: (msg) => {\n            this.commonserveice.directlogoutlib()\n       }\n   })\n     \n  }\n\n  //\\\\ ======================== // Get getway types // ======================== //\\\\ \n  //\\\\ ======================== // Get getway Names // ======================== //\\\\ \n  getgetwayNames() {\n\n      let typeid = this.selType;\n      this.getwayNamelist = [];\n\n      this.selgetwayId = \"0\";\n      let formParams = {\n          \"Type\": typeid\n      };\n      this.commonserveice.getGetwayName(formParams).subscribe({\n        next: (response) => {\n            let respData = response.RESPONSE_DATA;\n            let respToken = response.RESPONSE_TOKEN;\n            let res: any = Buffer.from(respData, 'base64');\n            let responseResult = JSON.parse(res.toString());\n            let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n\n            if (respToken == verifyToken) {\n                if (responseResult.status == \"200\") {\n\n\n                    this.getwayNamelist = responseResult.result;\n\n\n                } else if (responseResult.status == 400) {\n\n                } else if (responseResult.status == 501) {\n\n                    this.commonserveice.directlogoutlib()\n                } else {\n                    this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.somethingWrong))\n                \n                }\n            } else {\n\n                this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n            }\n        },\n        error: (msg) => {\n            this.commonserveice.directlogoutlib()\n       }\n   })\n   \n\n  }\n  //\\\\ ======================== // Get getway Names // ======================== //\\\\ \n  //\\\\ ======================== // Addmore Rows // ======================== //\\\\ \n  addRow() {\n\n\n      let lastChild = this.dynamicListArray[this.dynamicListArray.length - 1];\n     \n      if (this.dynamicListArray.length > 0) {\n        //if(!this.vldChkLst.blankCheck(this.txtUrl, this.messaageslist.getwayURl,'txtUrl'))\n          if (lastChild.vchLabel === '' || typeof(lastChild.vchLabel) == undefined || lastChild.vchLabel == null) {\n              Swal.fire({\n                  icon: 'error',\n                  text: this.commonserveice.langReplace(this.messaageslist.msgApilabel),\n                \n                 \n              });\n          } else if (lastChild.vchKey === '' || typeof(lastChild.vchKey) == undefined || lastChild.vchKey == null) {\n              Swal.fire({\n                  icon: 'error',\n                  text: this.commonserveice.langReplace(this.messaageslist.msgApikey),\n                 \n              \n              });\n          } else if (lastChild.vchValue === '' || typeof(lastChild.vchValue) == undefined || lastChild.vchValue == null) {\n              Swal.fire({\n                  icon: 'error',\n                  text: this.commonserveice.langReplace(this.messaageslist.msgApivalue),\n                \n              });\n          } else {\n              this.dynamicListArray.push({\n                  intId: '',\n                  vchLabel: '',\n                  vchKey: '',\n                  vchValue: ''\n              });\n\n          }\n      } else {\n          this.dynamicListArray.push({\n              intId: '',\n              vchLabel: '',\n              vchKey: '',\n              vchValue: ''\n          });\n\n      }\n\n\n\n  }\n  //\\\\ ======================== // Addmore Rows // ======================== //\\\\ \n\n\n  deleteApiRow(i: any, id: any) {\n\n      let formParams = {\n          \"intId\": id\n      };\n\n\n      Swal.fire({\n          title:  this.commonserveice.langReplace('Are you sure')+' ?',\n          text: this.messaageslist.warningtype,\n          icon: 'warning',\n          showCancelButton: true,\n          cancelButtonText: this.commonserveice.langReplace('Cancel'),\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33',\n          confirmButtonText: this.commonserveice.langReplace('Yes')+','+this.commonserveice.langReplace('delete it')+  \"!\"\n      }).then((result: any) => {\n\n          if (result.isConfirmed) {\n\n\nif(this.selgetwayId == \"other\"){\n //   alert(\"yes\")\n    this.dynamicListArray.splice(i, 1);\n}\nelse{\n    this.commonserveice.deleteGetwayConfig(formParams).subscribe({\n        next: (response) => { let respData = response.RESPONSE_DATA;\n            let respToken = response.RESPONSE_TOKEN;\n            let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n\n\n            if (respToken == verifyToken) {\n                let res: any = Buffer.from(respData, 'base64');\n                res = JSON.parse(res.toString());\n                if (res.status == 200) {\n                    Swal.fire(\n                      this.commonserveice.langReplace('Deleted')+'!',\n                        this.commonserveice.langReplace(this.messaageslist.deleteMsg),\n                        'success'\n                    )\n                    this.dynamicListArray.splice(i, 1);\n                    this.viewOldGetways()\n\n                } else if (res.status == 417) {\n                    this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n                   \n                } else {\n                    this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.messaageslist.errorMsg))\n                 \n                }\n            } else {\n\n                this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n            }},\n        error: (msg) => {\n            this.commonserveice.directlogoutlib()\n       }\n   })\n\n}\n\n\n        \n             \n          }\n      })\n\n  }\n\n\n  //\\\\ ======================== // Get old getway details // ======================== //\\\\\n  viewOldGetways() {\n\n      this.dynamicListArray = [];\n      this.txtUrl = '';\n      this.selPostmenthod = \"0\";\n      this.txtContactAddress = \"\";\n      this.selgetwayName = \"\";\n\n      let typeid = this.selType;\n      let intid = this.selgetwayId;\n      if (intid != \"other\") {\n          let formParams = {\n              \"typeId\": typeid,\n              \"intId\": intid\n          };\n\n          this.commonserveice.getPrevDetails(formParams).subscribe({\n            next: (response) => {\n                let respData = response.RESPONSE_DATA;\n                let respToken = response.RESPONSE_TOKEN;\n                let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n\n                if (respToken == verifyToken) {\n\n                    let res: any = Buffer.from(respData, 'base64');\n                    let responseResult = JSON.parse(res)\n\n                    if (responseResult.status == 200) {\n\n\n                        this.getDetailslist = responseResult.result;\n                        let getDtlsres: any = this.getDetailslist.result;\n                       console.log(this.getDetailslist)\n\n                        this.txtUrl = this.getDetailslist.data[0].url;\n                        this.selPostmenthod = this.getDetailslist.data[0].dataPostMethod;\n                        this.txtContactAddress = this.getDetailslist.data[0].contactaddress;\n                        this.selgetwayName = this.getDetailslist.data[0].vchName;\n\n\n                        for (let i = 0; i <= getDtlsres.length; i++) {\n\n\n                            let obj: any = {};\n                            obj[\"intId\"] = getDtlsres[i].intId;\n                            obj[\"vchLabel\"] = getDtlsres[i].vchLabel;\n                            obj[\"vchKey\"] = getDtlsres[i].vchKey;\n                            obj[\"vchValue\"] = getDtlsres[i].vchValue;\n                            this.dynamicListArray.push(obj);\n                        }\n\n\n\n\n                    } else if (responseResult.status == 501) {\n\n                        this.commonserveice.directlogoutlib()\n                    } else {\n\n                        this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.somethingWrong))\n                    }\n                } else {\n\n                    this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.somethingWrong))\n                }\n            },\n            error: (msg) => {\n                this.commonserveice.directlogoutlib()\n           }\n       })\n     \n\n\n      }\n\n\n\n  }\n\n  //\\\\ ======================== // Get old getway details // ======================== //\\\\ \n  //\\\\ ======================== // Create New configuration // ======================== //\\\\ \n  manageGetWayConfig() {\n      let lastChild = this.dynamicListArray[this.dynamicListArray.length - 1];\n\n\n      if (!this.vldChkLst.selectDropdown(this.selType, this.commonserveice.langReplace(this.messaageslist.getwayType),'selType')) {} \n      else if (!this.vldChkLst.selectDropdown(this.selgetwayId, this.commonserveice.langReplace(this.messaageslist.getwayName),'selgetwayId')) {} \n      else if ((this.selgetwayId == \"other\") && (!this.vldChkLst.blankCheck(this.txtgetwaymName, this.commonserveice.langReplace(this.messaageslist.msggetwayName),'txtgetwaymName'))) {} \n      else if (!this.vldChkLst.blankCheck(this.txtUrl,this.commonserveice.langReplace( this.messaageslist.getwayURl),'txtUrl')) {} \n      else if (!this.vldChkLst.is_url(this.txtUrl)) {} \n      else if (!this.vldChkLst.selectDropdown(this.selPostmenthod, this.commonserveice.langReplace(this.messaageslist.methodtype),'selPostMethod')) {} \n      else if (!this.vldChkLst.blankCheck(this.txtContactAddress, this.commonserveice.langReplace(this.messaageslist.contactaddress),'txtContactAddress')) {} \n      else if (this.dynamicListArray.length == 0) {\n        this.commonserveice.swalfire('error',this.commonserveice.langReplace(\"Add key values\"))\n      \n      } else if ((this.dynamicListArray.length > 0) && (!this.vldChkLst.blankCheck(lastChild.vchLabel, this.commonserveice.langReplace(this.messaageslist.msgApilabel)))) {}\n        else if ((this.dynamicListArray.length > 0) && (!this.vldChkLst.blankCheck(lastChild.vchKey, this.commonserveice.langReplace(this.messaageslist.msgApikey)))) {}\n        else if ((this.dynamicListArray.length > 0) && (!this.vldChkLst.blankCheck(lastChild.vchValue, this.commonserveice.langReplace(this.messaageslist.msgApivalue)))) {} \n        else {\n\n          let selctgetwayid;\n          let getwayName;\n\n          if (this.selgetwayId == 'other') {\n              selctgetwayid = '';\n              getwayName = this.txtgetwaymName;\n          } else {\n              selctgetwayid = this.selgetwayId;\n              getwayName = this.selgetwayName;\n          }\n\n\n          let docParams = {\n              \"itemId\": selctgetwayid,\n              \"typeId\": this.selType,\n              \"name\": getwayName,\n              \"vchUrl\": this.txtUrl,\n              \"vchDataPostMethod\": this.selPostmenthod,\n              \"vchContactAddress\": this.txtContactAddress,\n              \"itemStatus\": \"\",\n              \"allDocsdata\": this.dynamicListArray\n\n          }\n          this.commonserveice.newGetwayConfig(docParams).subscribe({\n            next: (response) => {\n                let respData = response.RESPONSE_DATA;\n                let respToken = response.RESPONSE_TOKEN;\n                let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n                if (respToken == verifyToken) {\n                    let res: any = Buffer.from(respData, 'base64');\n                    let responseResult = JSON.parse(res)\n\n                    if (responseResult.status == 200) {\n\n                        Swal.fire({\n\n                            text: this.commonserveice.langReplace(this.messaageslist.successMsg),\n                            icon: 'success',\n                            confirmButtonColor: '#3085d6',\n                            confirmButtonText: this.commonserveice.langReplace('Ok')\n                        }).then((result) => {\n\n                            this.resetform();\n                            this.route.navigate(['admin/viewgateway'])\n                        })\n\n                    } else if (responseResult.status == 202) {\n\n                        // this.loading=false;\n\n                        Swal.fire({\n\n                            text: this.commonserveice.langReplace(this.messaageslist.updatesuccessMsg),\n                            icon: 'success',\n                            confirmButtonColor: '#3085d6',\n                            confirmButtonText: this.commonserveice.langReplace('Ok')\n                        }).then((result) => {\n\n                            this.resetform();\n                            this.route.navigate(['admin/viewgateway'])\n                        })\n\n                    } else if (responseResult.status == 501) {\n\n                        this.commonserveice.directlogoutlib()\n                    } else if (responseResult.status == 400) {\n                        this.commonserveice.swalfire('error',this.commonserveice.langReplace(responseResult.message.metaName[0]))\n                        // this.loading=false;\n                     \n\n\n                    } else {\n                        //this.loading=false;\n                        this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.somethingWrong))\n                    }\n                } else {\n\n                    this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.somethingWrong))\n                }\n            },\n            error: (msg) => {\n                this.commonserveice.directlogoutlib()\n           }\n       })\n         \n      }\n  }\n\n  //\\\\ ======================== // Create New configuration // ======================== //\\\\ \n\n  //\\\\ ======================== // Reset Form // ======================== //\\\\ \n  resetform() {\n      this.selType = 0;\n      this.selgetwayId = 0;\n      this.txtContactAddress = null;\n      this.selPostmenthod = 0;\n      this.txtUrl = null;\n      this.txtContactAddress = null;\n      this.selgetwayName = 0;\n      this.dynamicListArray = [];\n  }\n  //\\\\ ======================== // Reset Form // ======================== //\\\\\n\n\n}","<!--  =============================================================================\n// File Name\t\t      : addgateway-config.component.html\n// Description \t              : This is used for config getway configuration\n// Created by                 : Bikash Kumar Panda\n// Created on                 : 17-May-2023\n// Designed by                : Bikash Kumar Panda\n// Designed on                : 17-May-2023\n// Developed by               : Bikash Kumar Panda\n// Developed on               : 18-May-2023\n// Style sheet                : addgateway-config.component.scss\n============================================================================= -->\n<!--===Page Title===-->\n<div class=\"page-title\">\n\n    <h4>{{title | translate}}</h4>\n</div>\n<!--===Page Title===-->\n<!--===controle section===-->\n<div class=\"page-controls-section\" id=\"page-content\">\n    <div class=\"card\">\n        <div class=\"controls-section-header\">\n          \n            <ul class=\"nav nav-tabs nav-fill\" role=\"tablist\">\n               <lib-libtabs *ngFor=\"let tablist of tablist\" [tabMessage]=\"tablist\"></lib-libtabs>\n              \n            </ul>\n            <div class=\"indicatorslist\">\n                <lib-libutils *ngFor=\"let utillist of utillist\" [childMessage]=\"utillist\"></lib-libutils>\n               \n            </div>\n\n        </div>\n        <div class=\"card-body\">\n            <div class=\"controls-section\">\n                <!--begin::Form-->\n                <div class=\"row mb-3\">\n                    <div class=\"col-lg-7\">\n                        <div class=\"row\">\n                            <label class=\"col-md-4 col-lg-4 mt-2\">*{{\"Type\" | translate}}</label>\n                            <div class=\"col-md-8 col-lg-7\">\n                                <div class=\"form-group\">\n                                    <select class=\"form-select\" [(ngModel)]=\"selType\" id=\"selType\" (change)='getgetwayNames()'>\n                                        <option value=\"0\"> {{\"Select\" | translate}}</option>\n                                        <option *ngFor=\"let gettype of getwaytypes;let i index\"\n                                            [value]=\"gettype.typeId\">{{gettype.typeName}}</option>\n                                    </select>\n\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <label class=\"col-md-4 col-lg-4 mt-2\">* {{\"Name\" | translate}} </label>\n                            <div class=\"col-md-8 col-lg-7\">\n                                <div class=\"form-group\">\n                                    <select class=\"form-select\" (change)='viewOldGetways()' id=\"selgetwayId\" [(ngModel)]=\"selgetwayId\">\n                                        <option value=\"0\" > {{\"Select\" | translate}}</option>\n                                        <option *ngFor=\"let gNames of getwayNamelist\" [value]=\"gNames.intId\">{{ \n                                            gNames.vchName }}</option>\n                                        <option value=\"other\">Other</option>\n                                    </select>\n                                    <input type=\"hidden\" [(ngModel)]=\"selgetwayName\">\n                                    <div *ngIf=\"selgetwayId == 'other' \">\n                                        <input type=\"text\" placeholder=\"Enter Name\" id=\"txtgetwaymName\"  class=\"form-control mt-3\"\n                                            [(ngModel)]=\"txtgetwaymName\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <label class=\"col-md-4 col-lg-4 mt-2\">*{{\"URL\" | translate}} </label>\n                            <div class=\"col-md-8 col-lg-7\">\n                                <div class=\"form-group\">\n                                    <input type=\"text\" class=\"form-control amhfld arabic\" name=\"vchUrl\"\n                                        [(ngModel)]=\"txtUrl\" id=\"txtUrl\" autocomplete=\"off\" value=\"\" maxlength=\"250\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <label class=\"col-md-4 col-lg-4 mt-2\">*{{\"Data post method\" | translate}}</label>\n                            <div class=\"col-md-8 col-lg-7\">\n                                <div class=\"form-group\">\n                                    <select name=\"selPostMethod\" id=\"selPostMethod\" [(ngModel)]=\"selPostmenthod\"\n                                        class=\"form-select\">\n                                        <option value=\"0\">{{\"Select\" | translate}}</option>\n                                        <option value=\"na\">NA</option>\n                                        <option value=\"get\">GET</option>\n                                        <option value=\"post\">POST</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <label class=\"col-md-4 col-lg-4 mt-2\">* {{\"Contact Address\" | translate}}</label>\n                            <div class=\"col-md-8 col-lg-7\">\n                                <div class=\"form-group\">\n                                    <textarea class=\"form-control\" [(ngModel)]=\"txtContactAddress\" id=\"txtContactAddress\" rows=\"2\" cols=\"2\">\n\n                                                                </textarea>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-5\">\n                        <div class=\"\">\n                            <h6 class=\"mb-1\"> {{\"Dynamic keys for value\" | translate}} </h6>\n                            <div class=\"overflow-auto pe-2\" style=\"height:270px;\">\n                                <table class=\"table table-bordered\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">{{\"Key\" | translate}}</th>\n                                            <th scope=\"col\">{{\"Description\" | translate}}</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td>[APPLICANT_MOBILE]</td>\n                                            <td>{{\"This key will be used to fetch the applicant mobile number\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[APPLICANT_NAME]</td>\n                                            <td>{{\"This key will be used to bind the SMS content\"}}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>[APP_NO]</td>\n                                            <td>{{\"This key will be used to bind the Application number\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[APP_DATE]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[APP_SLNO]</td>\n                                            <td>{{\"This key will be used to bind the Letter number\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARMER_DIST]</td>\n                                            <td>{{\"This key will be used to bind district of the  farmer\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARMER_BLOCK]</td>\n                                            <td>{{\"This key will be used to bind block/ULB of the farmer\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARMER_GP]</td>\n                                            <td>{{\"This key will be used to bind GP/Ward of the farmer\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARMER_VILLAGE]</td>\n                                            <td>{{\"This key will be used to bind village of the farmer\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[SERVICE_VERIFICATION]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARMER_CATEGORY]</td>\n                                            <td>{{\"This key will be used to bind caste category of the farmer\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARMER_FATHER]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARM_DISTRICT]</td>\n                                            <td>{{\"This key will be used to bind district of the farm\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARM_BLOCK]</td>\n                                            <td>{{\"This key will be used to bind block of the farm\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARM_GP]</td>\n                                            <td>{{\"This key will be used to bind GP of the farm\"}}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>[FARM_VILLAGE]</td>\n                                            <td>{{\"This key will be used to bind Village of the farm\"}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>[VALID_UPTO_6_MONTH]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[VALID_UPTO_12_MONTH]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[INSPECTION_DATE]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[INSPECTED_LAND_AREA]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[INSPECTED_TOTAL_LAND_AREA]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[INSPECTED_LAND_AREA_DEVELOPED]</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>[VALID_UPTO_24_MONTH]</td>\n                                            <td></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n\n                <div>\n                    <div class=\"table-responsive\">\n                        <table class=\"table table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\" style=\"width:50px\"> {{\"Sl No\" | translate}}</th>\n                                    <th scope=\"col\"> {{\"Label\" | translate}} <span class=\"text-danger\">*</span>\n                                    </th>\n                                    <th scope=\"col\">{{\"Key\" | translate}} <span class=\"text-danger\">*</span>\n                                    </th>\n                                    <th scope=\"col\">{{\"Value\" | translate}} <span class=\"text-danger\">*</span>\n                                    </th>\n                                    <th scope=\"col\" style=\"width:70px\">{{\"Action\" | translate}}</th>\n                                </tr>\n                            </thead>\n                            <tbody id=\"appendTr\">\n\n                                <tr *ngFor=\"let apiArray of dynamicListArray; let i = index;\">\n                                    <td>{{i+1}}</td>\n                                    <td>\n                                        <input class=\"form-control\" name=\"{{apiArray.vchLabel}}\"\n                                            [(ngModel)]=\"apiArray.vchLabel\" id=\"label_{{i}}\" type=\"text\" />\n                                    </td>\n                                    <td>\n                                        <input class=\"form-control\" name=\"{{apiArray.vchKey}}\"\n                                            [(ngModel)]=\"apiArray.vchKey\" id=\"key_{{i}}\" type=\"text\" />\n                                    </td>\n\n                                    <td>\n                                        <input class=\"form-control\" name=\"{{apiArray.vchValue}}\"\n                                            [(ngModel)]=\"apiArray.vchValue\" id=\"value_{{i}}\" type=\"text\" />\n                                    </td>\n                                    <td>\n                                        <button class=\"btn btn-danger px-2\" (click)=\"deleteApiRow(i, apiArray.intId)\"><i\n                                                class=\"icon-trash-alt\"></i></button>\n\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td colspan=\"6\">\n                                        <button class=\"btn btn-info btn-sm\" (click)=\"addRow()\">{{\"Add Row\" | translate}}  </button>\n                                    </td>\n\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <!--end::Form-->\n            </div>\n        </div>\n        <div class=\"card-footer text-center\">\n            <button class=\"btn btn-primary\" (click)=\"manageGetWayConfig()\">{{\"Submit\" | translate}}</button>\n            <button id=\"clear-all-fields\" class=\"btn btn-danger ml-1\">{{\"Reset\" | translate}}</button>\n        </div>\n    </div>\n</div>\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'lib-libpagination',\n  templateUrl: './libpagination.component.html',\n  styleUrls: ['./libpagination.component.css']\n})\nexport class LibpaginationComponent implements OnInit {\n  @Input() page:any;\n  @Input() count:any;\n  @Input() tableSize:any;\n\n  @Output(\"callfunction\") callfunction:EventEmitter<any> = new EventEmitter();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onTableDataChange(event: any) {\n    this.callfunction.emit(event);\n  }\n}\n","<div class=\"d-flex justify-content-end\">\n    <pagination-controls\n    \n    previousLabel=\"{{'Prev' | translate}}\"\n    nextLabel=\"{{'Next' | translate}}\"\n    (pageChange)=\"onTableDataChange($event)\"\n  >\n  </pagination-controls>\n </div>\n\n","import { HttpClient } from '@angular/common/http';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { MsgengineLibService } from '../msgengine-lib.service';\nimport * as CryptoJS from 'crypto-js';\nimport { EncrypyDecrpyService } from '../encrypy-decrpy.service';\nimport { VarlistService } from '../varlist.service';\nimport { Buffer } from 'buffer';\nimport * as $ from 'jquery'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'lib-viewgetway',\n  templateUrl: './viewgetway.component.html',\n  styleUrls: ['./viewgetway.component.css']\n})\nexport class ViewgetwayComponent implements OnInit {\n  @ViewChild('previewModal') previewModal: ElementRef;\n  title: any;\n  tablist: any;\n  utillist: any;\n  messaageslist: any;\n  jsonurl:any = [\n    {\n      \"pagetitle\":\"View Gateway Config\",\n      \"tabList\":[\n     \n        {\"tabName\":\"Add\",\"tabUrl\":\"../addgateway\"},\n        {\"tabName\":\"View\",\"tabUrl\":\"../viewgateway\" ,\"tabClass\":\"active\"}\n      ],\n        \"utils\":[\n        {\"utilName\":\"search\"},\n        {\"utilName\":\"print\"},\n        {\"utilName\":\"delete\"},\n        {\"utilName\":\"publish\"},\n        {\"utilName\":\"unpublish\"}\n       \n        ],\n      \"messages\":\n        {\n          \"successMsg\":\"Date saved successfully\",\n        \"errorMsg\":\"Error in database\",\n        \"warningtype\":\"You want to delete this record\",\n        \"deleteMsg\":\"Record has been deleted\"\n        }\n      \n    }\n  ];\n\n  getwaytypes: any;\n  selType: any = 0;\n  txtName: any = '';\n  getwayList: any;\n  POSTS: any;\n  page: number = 1;\n  count: number = 0;\n  tableSize: number = 10;\n  pageSizes = [10, 20, 50, 100, 500, 1000];\n\n  getwayIdArray: any = [];\n  pubUnpStatus: any[] = [];\n  getDetailslist: any;\n  getwayDetails:any;\n  chkAll: any = 0;\n  sevName: any = \" \";\n  loading: boolean;\n  langKey: any = 'en';\n  indexNumber: any = 0;\n  typeName:any;\n\n  constructor(private route: Router, private httpClient: HttpClient,\n    \n    public commonserveice:MsgengineLibService,\n    private varlist:VarlistService, \n    private modalService: NgbModal, \n    private encDec: EncrypyDecrpyService) {\n\nthis.sevName=varlist.serviceName;\n     }\n\n  ngOnInit(): void {\n\n    this.loadvarlist();\n    this.getGetwaytypes();\n    this.viewAllrecrds(this.selType,this.txtName);\n    \n    // console.log(this.viewAllrecrds());\n    //this.addChangeEventForLabel();\n\n  }\n  loadvarlist() {\n    // this.httpClient.get<any>(this.jsonurl).subscribe((data: any) => {\n      this.tablist = this.jsonurl[0].tabList;\n      this.utillist = this.jsonurl[0].utils\n      this.messaageslist = this.jsonurl[0].messages;\n      this.title = this.jsonurl[0].pagetitle;\n    // })\n  }\n  multilingual(test: any) {\n    return test;\n  }\n\n\n//\\\\ ======================== // Get getway types // ======================== //\\\\ \ngetGetwaytypes() {\n   let getwayparm={}\n   this.commonserveice.viewGatwayTypes(getwayparm).subscribe({\n    next: (response) => {\n      let respData = response.RESPONSE_DATA;\n      let respToken = response.RESPONSE_TOKEN;\n      let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n     \n      if (respToken == verifyToken) {\n        let res: any = Buffer.from(respData, 'base64');\n        res = JSON.parse(res.toString());\n        if (res.status == \"200\") {\n          this.getwaytypes = res.result;\n        \n        }\n        else if(res.status==501){\n        \n          this.commonserveice.directlogoutlib()\n        }\n       \n        else {\n          console.log(res.messages)\n        }\n       }\n       else{\n        //this.loading=false;\n        this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.somethingWrong))\n     \n       }\n    },\n    error: (msg) => {\n           this.commonserveice.directlogoutlib()\n   }\n })\n\n }\n\n//\\\\ ======================== // Get getway types // ======================== //\\\\ \n\n  onTableDataChange(event: any) {\n    this.page = event;\n    this.indexNumber = (this.page - 1) * this.tableSize;\n\n  }\n  onTableSizeChange(event: any): void {\n    this.tableSize = event.target.value;\n    this.page = 1;\n    this.indexNumber = 0;\n  }\n\n\n//\\\\ ======================== // View All records // ======================== //\\\\ \n  viewAllrecrds(typeid:any,name:any) {\n   // getGetwayType\n    this.selType = 0;\n    this.txtName = '';\n    let formParams = {\n      \"typeId\": typeid,\n      \"formName\": name\n      };\n    this.loading = true;\n    this.pubUnpStatus = [];\n    this.commonserveice.viewGetwayConfig(formParams).subscribe({\n      next: (response) => {\n        let respData = response.RESPONSE_DATA;\n        let respToken = response.RESPONSE_TOKEN;\n      \n        let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n          \n           if (respToken == verifyToken) {\n       \n        let res:any = Buffer.from(respData,'base64'); \n        let responseResult = JSON.parse(res)\n         \n      \n      \n          if (responseResult.status == 200) {\n            this.loading=false;\n            this.getwayList = responseResult.result;\n          // console.log(this.getwayList)\n          }\n          else if(responseResult.status==501){\n              \n            this.commonserveice.directlogoutlib()\n          }\n          else{\n            this.loading=false;\n            this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.somethingWrong))\n           \n          }\n        }\n        else{\n         //this.loading=false;\n         this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.somethingWrong))\n        }\n      },\n      error: (msg) => {\n             this.commonserveice.directlogoutlib()\n     }\n   })\n\n  }\n// //\\\\ ======================== // View All records // ======================== //\\\\ \n \n\n\n   onChange(checkid: any, e: any, publishStatus: any) {\n\n    let totalCheckbox:any = document.querySelectorAll('.rowCheck').length;\n    let totalChecked:any = document.querySelectorAll('.rowCheck:checked').length;\n    let parentcheck:any = document.querySelectorAll('.checkall');\n \n    if(totalCheckbox == totalChecked) {\n      parentcheck[0].checked = true;\n    } else {\n      parentcheck[0].checked = false;\n    }\n    \n\n    if (e.target.checked) {\n      if (!this.getwayIdArray.includes(checkid)) {\n        this.getwayIdArray.push(checkid);\n        this.pubUnpStatus.push({ 'letterId': checkid, 'publishUnpublisStatus': publishStatus });\n      }\n \n    } else {\n      let index = this.getwayIdArray.indexOf(checkid);\n      let indxAdd: number = 0;\n      for (let mk of this.pubUnpStatus) {\n        if (mk.letterId == checkid) {\n          this.pubUnpStatus.splice(indxAdd, 1);\n          break;\n        }\n        indxAdd++;\n      }\n      this.getwayIdArray.splice(index, 1);\n    }\n  }\n\n\n  selectAll(e: any) {\n    let allid=e.target.id;\n   // alert(allid)\n    \n    let checkBoxes:any = document.querySelectorAll('.rowCheck');\n \n    if (e.target.checked) {\n     \n      for (let i = 0; i < checkBoxes.length; i++) {\n        let ids = checkBoxes[i].id;\n        this.getwayIdArray.push(parseInt(ids));\n        this.pubUnpStatus.push({ 'letterId': ids, 'publishUnpublisStatus': checkBoxes[i].getAttribute(\"pubstatus\") })\n\n        checkBoxes[i].checked = true;\n\n      }\n\n   \n      \n    }\n    else {\n     \n      this.getwayIdArray = [];\n      for (let i = 0; i < checkBoxes.length; i++) {\n        checkBoxes[i].checked = false;\n      }\n      this.pubUnpStatus = []\n    }\n  }\n\n// //\\\\ ======================== // Get old getway details // ======================== //\\\\\n   filedata(intId: any, typeId: any,typeName:any) {\n    this.open(this.previewModal);\n    let formParams =\n    {\n      \"typeId\": typeId,\n      \"intId\": intId\n    };\n    this.typeName=typeName;\n    \n    this.commonserveice.getPrevDetails(formParams).subscribe({\n      next: (response) => {\n        let respData = response.RESPONSE_DATA;\n        let respToken = response.RESPONSE_TOKEN;\n       \n        let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n           \n        if (respToken == verifyToken) {\n       let res:any = Buffer.from(respData,'base64'); \n       let responseResult= JSON.parse(res)\n         \n          if (responseResult.status == 200) {\n           this.getwayDetails = responseResult.result.data;\n          // console.log(responseResult.result)\n            this.getDetailslist = responseResult.result.result;\n           \n         \n            \n           }\n       \n          else if(responseResult.status==501){\n            \n          //this.commonserveice.directlogoutlib()\n          }\n          else{\n           \n            this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.somethingWrong))\n          }\n         }\n         else{\n          //this.loading=false;\n          this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.somethingWrong))\n         }\n      },\n      error: (msg) => {\n             this.commonserveice.directlogoutlib()\n     }\n   })\n\n\n  }\n\n//\\\\ ======================== // Get old getway details // ======================== //\\\\\n\n  // addChangeEventForLabel() {\n  //   let sessionUserLangtoken: any = sessionStorage.getItem('USER_LANGPREF');\n  //   let sessionUserLang = JSON.parse(CryptoJS.AES.decrypt(sessionUserLangtoken, this.varlist.apiHashingKey).toString(CryptoJS.enc.Utf8));\n  //   setTimeout(() => {\n  //     this.langKey = sessionUserLang;\n  //     let labelChangeEle: any = document.getElementById('languageListH');\n  //     labelChangeEle.addEventListener('change', () => {\n  //       this.langKey = labelChangeEle.value;\n\n  //     });\n  //   }, 1000);\n\n  // }\n  //\\\\ ======================== // Modal Open // ======================== //\\\\ \n  open(content: any) {\n    this.modalService.open(content, { size: 'lg', backdrop: 'static', keyboard: false, ariaLabelledBy: 'modal-basic-title' }).result.then((result: any) => {\n    }, (reason: any) => { });\n  }\n  //\\\\ ======================== // Modal Open // ======================== //\\\\ \n  closeModal() {\n    this.modalService.dismissAll();\n  }\n  //\\\\ ======================== // Modal Close // ======================== //\\\\\n}\n","<!--===Page Title===-->\n<div class=\"page-title\">\n\n    <h4>{{title | translate}}</h4>\n  </div>\n  <!--===Page Title===-->\n  <!--===controle section===-->\n  <div class=\"page-controls-section\" id=\"page-content\">\n    <div class=\"card\">\n      <div class=\"controls-section-header\">\n        <ul class=\"nav nav-tabs nav-fill\" role=\"tablist\">\n            <lib-libtabs *ngFor=\"let tablist of tablist\" [tabMessage]=\"tablist\"></lib-libtabs>\n    \n        </ul>\n        <div class=\"indicatorslist\">\n\n            <lib-libutils *ngFor=\"let utillist of utillist\" [childMessage]=\"utillist\" [sendIds]=\"getwayIdArray\"\n            [funType]=\"sevName\" [pubUnpubStatus]=\"pubUnpStatus\"  (callfunction)=\"viewAllrecrds(selType,txtName)\"\n            (callfunction2)='selectAll($event)'></lib-libutils>\n         \n         \n        </div>\n  \n      </div>\n      <div class=\"card-body\">\n  \n\n        <div class=\"controls-section\">\n  \n          <!-- Search Panel -->\n          <div class=\"search-container active\" id=\"search-container\">\n  \n            <div class=\"search-sec\">\n  \n              <div class=\"row\">\n  \n                <div class=\"col-12 col-md-3 col-lg-3\">\n                  <div class=\"form-group\">\n                    <select class=\"form-select\" [(ngModel)]=\"selType\">\n                      <option value=\"0\" >{{\"Select Gateway Type\" | translate}}</option>\n                      <option *ngFor=\"let gettype of getwaytypes; let i index\" [value]=\"gettype.typeId\">\n                        {{gettype.typeName}}</option>\n  \n                    </select>\n                  </div>\n                </div>\n  \n                <div class=\"col-12 col-md-3 col-lg-3\">\n                  <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" name=\"Form Name\" [(ngModel)]=\"txtName\"\n                      placeholder=\"{{'Enter Name' | translate}}\">\n                  </div>\n                </div>\n  \n  \n                <div class=\"col-12 col-md-3 col-lg-3\">\n                  <div class=\"form-group\">\n                    <button class=\"btn btn-primary\" (click)=\"viewAllrecrds(selType,txtName)\">{{\"Search\" | translate}} </button>\n                    <button class=\"btn btn-danger ml-1\" (click)=\"viewAllrecrds(0,'')\"> {{\"Reset\" | translate}}</button>\n                  </div>\n                </div>\n              </div>\n  \n  \n            </div>\n  \n  \n          </div>\n          <!-- Search Panel -->\n  \n          <div *ngIf=\"getwayList?.length > 0; else norecord\">\n  \n            <div class=\"d-flex justify-content-between mb-3\">\n              <div>\n                <ul class=\"legends\">\n                  <li>\n                    <span class=\"bg-success\"></span>{{\"Publish\" | translate}}\n                  </li>\n                  <li>\n                    <span class=\"bg-danger\"></span> {{\"Unpublish\" | translate}}\n                  </li>\n                </ul>\n              </div>\n              <div>\n  \n                <!-- {{\"Per Page\"}}:\n                <select (change)=\"onTableSizeChange($event)\">\n                  <option *ngFor=\"let size of pageSizes\" [ngValue]=\"size\">\n                    {{ size }}\n                  </option>\n                </select> -->\n  \n              </div>\n  \n            </div>\n  \n            <div class=\"table-responsive \" id=\"print-section\">\n                \n              <table data-toggle=\"table\" class=\"table table-bordered \">\n                <thead>\n                  <tr>\n                    <th scope=\"col\" class=\"noPrint\" style=\"width:25px\" valign=\"top\">\n                      <div class=\"form-check\">\n                        <input class=\"form-check-input checkall\" type=\"checkbox\" (change)=\"selectAll($event)\" id=\"checkall\"\n                          name=\"checkall\" value=\"checkall\">\n  \n                      </div>\n                    </th>\n                    <th scope=\"col\" style=\"width:50px\">{{\"Sl No\" | translate}}</th>\n                    <th scope=\"col\">{{\"Type\" | translate}}</th>\n                    <th scope=\"col\">{{\"Name\" | translate}}</th>\n  \n                    <th scope=\"col\">{{\"URL\" | translate}}</th>\n                    <th scope=\"col\" class=\"noPrint\" style=\"width:140px\">{{\"Action\" | translate}}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor=\"let getways of getwayList| paginate\n                                                                      : {\n                                                                          itemsPerPage: tableSize,\n                                                                          currentPage: page,\n                                                                          totalItems: count\n                                                                        };\n                                                                  let i = index\">\n                    <td class=\"noPrint border-left-2\"\n                      [ngClass]=\"{'border-left-danger': getways.tinStatus == 0 , 'border-left-success': getways.tinStatus == 1 }\">\n                      <div class=\"form-check\">\n                        <input class=\"form-check-input rowCheck\" type=\"checkbox\"\n                          (change)=\"onChange(getways.intId, $event,getways.tinStatus)\"\n                          [attr.pubstatus]=\"getways.tinStatus\" name=\"{{getways.intId }}\" [id]=\"getways.intId\"\n                          [value]=\"getways.intId\">\n  \n                      </div>\n                    </td>\n                    <td>{{i+1+indexNumber}}</td>\n                    <td>{{getways.typeName}} </td>\n                    <td>{{getways.vchName}}</td>\n  \n                    <td>{{getways.vchUrl}}</td>\n                    <td class=\"noPrint\">\n                      <a class=\"text-info\"  (click)=\"filedata(getways.intId,getways.tinType,getways.typeName)\" >{{\"View\" | translate}}</a>\n                     \n              \n  \n                    </td>\n                  </tr>\n  \n  \n  \n  \n                </tbody>\n              </table>\n            </div>\n  \n\n            <!-- <lib-pagination [page]=\"page\" [count]=\"count\" [tableSize]=\"tableSize\" (callfunction)=\"onTableDataChange($event)\"></lib-pagination> -->\n            <lib-libpagination [page]=\"page\" [count]=\"count\" [tableSize]=\"tableSize\" (callfunction)=\"onTableDataChange($event)\"></lib-libpagination>\n            \n          </div>\n          <ng-template #norecord>\n            <h6 class=\"no-content\"> {{\"No Record Found\" | translate}}</h6>\n  \n          </ng-template>\n  \n  \n        </div>\n  \n      </div>\n  \n    </div>\n  \n  \n  \n  </div>\n  <ng-template #previewModal id=\"previewModal\" let-modal>\n    <div class=\"modal-header\">\n      <h5 class=\"modal-title mb-0\" id=\"movetoFolderModalLabel\">\n        {{\"Gateway Details\" | translate}}\n      </h5>\n      <button\n        type=\"button\"\n        class=\"btn-close\"\n        (click)=\"closeModal()\"\n        aria-label=\"Close\"\n      ></button>\n    </div>\n\n\n\n    <div class=\"modal-body\">\n        <div *ngFor=\"let getways of getwayDetails\">\n            <div class=\"mb-3 row\">\n                <label class=\"col-sm-4 \">{{\"Type\" | translate}}</label>\n                <div class=\"col-sm-8\">\n                  : <label class=\"text-dark\">{{typeName}}</label>\n                </div>\n              </div>\n              <div class=\"mb-3 row\">\n                <label class=\"col-sm-4 \">{{\"Name\" | translate}}</label>\n                <div class=\"col-sm-8\">\n                  : <label class=\"text-dark\">{{getways.vchName}}</label>\n                </div>\n              </div>\n              <div class=\"mb-3 row\">\n                <label class=\"col-sm-4 \">{{\"Url\" | translate}}</label>\n                <div class=\"col-sm-8\">\n                  : <label class=\"text-dark\">{{getways.url}}</label>\n                </div>\n              </div>\n              <div class=\"mb-3 row\">\n                <label class=\"col-sm-4 \">{{\"Data post method\" | translate}}</label>\n                <div class=\"col-sm-8\">\n                  : <label class=\"text-dark\">{{getways.dataPostMethod}} </label>\n                </div>\n              </div>\n              <div class=\"mb-3 row\">\n                <label class=\"col-sm-4 \">{{\"Contact Address\" | translate}}</label>\n                <div class=\"col-sm-8\">\n                  : <label class=\"text-dark\">{{getways.contactaddress}}</label>\n                </div>\n              </div>\n        </div>\n       \n       \n        <table class=\"table table-bordered mt-3\">\n            <thead>\n              <tr>\n                <th scope=\"col\">{{\"Label\" | translate}}</th>\n                <th scope=\"col\">{{\"Key\" | translate}}</th>\n                <th scope=\"col\">{{\"Value\" | translate}}</th>\n\n              </tr>\n            </thead>\n            <tbody>\n\n              <tr *ngFor=\"let apilist of getDetailslist; let i = index\">\n                <td>{{apilist.vchLabel}}</td>\n                <td>{{apilist.vchKey}}</td>\n                <td>{{apilist.vchValue}}</td>\n              </tr>\n\n            </tbody>\n          </table>\n    </div>\n  </ng-template>","/// <reference types=\"@types/ckeditor\" />\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { MsgengineLibService } from '../msgengine-lib.service';\nimport { ValidatorchecklistService } from '../validationchecklist.service';\nimport { EncrypyDecrpyService } from '../encrypy-decrpy.service';\nimport { CKEditorComponent } from 'ng2-ckeditor';\nimport * as CryptoJS from 'crypto-js';\nimport { Buffer } from 'buffer';\nimport { VarlistService } from '../varlist.service';\n\n@Component({\n  selector: 'lib-addmsgengine',\n  templateUrl: './addmsgengine.component.html',\n  styleUrls: ['./addmsgengine.component.css']\n})\nexport class AddmsgengineComponent implements OnInit {\n  // @ViewChild(CkeditornewComponent, { static: false }) CkeditornewComponent: CkeditornewComponent | undefined;\n  // siteUrl = this.varlist.siteURL;\n  title: any;\n  tablist: any;\n  utillist: any;\n  messaageslist: any = {\n      \"successMsg\": \"New Message Generated Successfully\",\n      \"updatesuccessMsg\": \"Updated Successfully\",\n      \"errorMsg\": \"Error in Message creation\",\n      \"configtype\": \"Configuration Type\",\n      \"formnames\": \"Please a Select Form Name\",\n      \"smsTempId\": \"Please Enter smsTempId\",\n      \"messageType\": \"Message Type\",\n      \"eventType\": \" a Event \",\n      \"smsSubject\": \"Please Enter SMS Subject\",\n      \"smscontent\": \"Please Enter SMS content\",\n      \"intMailTemplate\": \"Template\",\n      \"intDocumentType\": \"Document Type\",\n      \"vchDocument\": \"Please Choose a Document\",\n      \"vchLanguage\": \"Please Choose a Language\",\n      \"emailId\": \"Please Enter email id key\",\n      \"to\": \"Please select to\",\n      \"mobileNo\": \"Please enter mobile no key\",\n      \"gateWayDetails\": \"Configuration\",\n      \"formtype\": \"Form Name\"\n  };\n  @ViewChild(\"myckeditor\") ckeditor: CKEditorComponent;\n  ckeConfig: any;\n\n  jsonurl: any = [{\n      \"pagetitle\": \"Add Message Engine\",\n      \"tabList\": [\n\n          {\n              \"tabName\": \"Add\",\n              \"tabUrl\": \"\",\n              \"tabClass\": \"active add d-none\"\n          },\n          {\n              \"tabName\": \"Edit\",\n              \"tabUrl\": \"\",\n              \"tabClass\": \"active edit d-none\"\n          },\n          {\n              \"tabName\": \"View\",\n              \"tabUrl\": \"../viewmessageengine\"\n          },\n          {\n              \"tabName\": \"Reminder\",\n              \"tabUrl\": \"../viewmessagereminder\"\n          }\n      ],\n      \"utils\": [{\n              \"utilName\": \"mandatory\"\n          },\n          {\n              \"utilName\": \"back\"\n          }\n\n      ],\n\n  }];\n  messageId: any = \"\";\n  txtFormId: any=0;\n  formNameslist: any;\n  configtype: any = 0;\n  smsTempId: any = '';\n  smsSubject: any = '';\n  messageContent: any = '';\n  messageType: any = 0;\n  eventType: any = 0;\n  formnames: any = 0;\n  intMailTemplate: any = 0;\n  fileType: any = 0;\n  documentFile: any = '';\n  documentUrl: any;\n  sessiontoken: any;\n  userId: any;\n  messageList: any;\n  txtProcessName: any;\n  selFormName: any = 0;\n  keysArray: any;\n  StatickeysArray: any;\n  vchLanguage: any = 0;\n  languageList: any;\n  langKey: any = 'en';\n  mailsmstoApplicant: any = 0;\n  mailsmstoAuthority: any = 0;\n  emailId: any = '';\n  mobileNo: any = '';\n  gatewayconfigDetails: any = '';\n  gateWayconfigtype: any = 0;\n  getStaticConfigurationKeys: any;\n  fileeList: any = [];\n  formenable: any;\n  dynamicForm:any;\n  selformId:any=0;\n\n\n  constructor(private route: Router,\n      private router: ActivatedRoute,\n      private httpClient: HttpClient,\n      public vldChkLst: ValidatorchecklistService,\n      private encDec: EncrypyDecrpyService,\n      public commonserveice: MsgengineLibService,\n      private varlist: VarlistService) {\n      this.ckeConfig = this.varlist.ckconfig\n      this.formenable = this.varlist.formEnable;\n      this.dynamicForm = this.varlist.dynamicForm;\n\n      \n  }\n\n  ngOnInit(): void {\n\n      this.loadconfig();\n      if(this.varlist.formEnable == true){\n        this.getForms();\n      }\n      else{\n        this.txtFormId=this.varlist.formId\n      }\n     \n      this.getLanguage();\n      this.getStaticFormKeys();\n      //this.addChangeEventForLabel();\n      this.sessiontoken = sessionStorage.getItem('ADMIN_SESSION');\n    //  console.log(this.sessiontoken)\n    let SeetionParsed:any;\n    if(this.varlist.sessionEncrypted == true){\n        SeetionParsed = JSON.parse(CryptoJS.AES.decrypt(this.sessiontoken, this.varlist.apiHashingKey).toString(CryptoJS.enc.Utf8));\n        \n    }\n    else{\n        SeetionParsed =JSON.parse(this.sessiontoken)\n    }\n     \n\n      this.userId = SeetionParsed.USER_ID;\n      \n      let encSchemeId = this.router.snapshot.paramMap.get('id');\n\n      if (encSchemeId != \"\") {\n          let schemeStr = this.encDec.decText(encSchemeId);\n         \n          let schemeArr: any = schemeStr.split(':');\n\n          this.messageId = schemeArr[0];\n          this.txtFormId = schemeArr[1];\n          this.txtProcessName = schemeArr[2];\n          this.formnames = this.txtFormId;\n          if (this.messageId != '' || this.messageId != 0) {\n              this.getMessageinfo();\n              this.getFormKeys();\n          }\n      }\n\n\n\n\n  }\n  changedocType() {\n      this.fileeList = [];\n      this.documentFile = '';\n      this.documentUrl = '';\n  }\n  loadconfig() {\n      this.tablist = this.jsonurl[0].tabList;\n      this.utillist = this.jsonurl[0].utils\n      if (this.messageId == \"\") {\n          this.title = this.multilingual(this.jsonurl[0].pagetitle);\n      } else {\n          this.title = \"Edit Message Engine\";\n      }\n     \n  }\n  multilingual(test: any) {\n      return test;\n  };\n\n  getForms() {\n    let params={}\n    this.commonserveice.getForms(params).subscribe({\n        next: (response) => {\n            let respData = response.RESPONSE_DATA;\n            let respToken = response.RESPONSE_TOKEN;\n           let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n           if (respToken == verifyToken) {\n             let res: any = Buffer.from(respData, 'base64');\n             res = JSON.parse(res.toString());\n             //console.log('res');\n             if (res.status === 200) {\n               this.formNameslist = res.result;\n              \n             }\n             else {\n               console.log(res.messages)\n             }\n           } else {\n            this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n           }\n        },\n        error: (msg) => {\n            this.commonserveice.directlogoutlib()\n       }\n   })\n       \n  }\n\n\n\n\n  //\\\\ ======================== // Temp Uplaoad On select // ======================== //\\\\\n  onSelect(event: any) {\n\n      if (!this.vldChkLst.selectDropdown(this.fileType, this.messaageslist.intDocumentType)) {} else {\n\n\n          let newFile: FormData = new FormData();\n\n          let filetype: any = event.addedFiles[0].name;\n          let filesize: any = event.addedFiles[0].size;\n          let splititems: any = filetype.split('.', 2)\n        \n          if ((this.fileType == 1) && !(splititems[1] == 'mp3' || splititems[1] == 'mpeg')) {\n              Swal.fire({\n                  icon: 'error',\n                  text: this.commonserveice.langReplace(\"Only accept mp3 and mpeg file\"),\n              });\n          } else if ((this.fileType == 1) && (filesize > 1024 * 1024 * 5)) {\n\n              Swal.fire({\n                  icon: 'error',\n                  text: this.commonserveice.langReplace(\"Max allow file size 5 MB\"),\n\n              });\n          } else if ((this.fileType == 2) && !(splititems[1] == 'mp4' || splititems[1] == 'wmv' || splititems[1] == 'webm')) {\n              Swal.fire({\n                  icon: 'error',\n                  text: this.commonserveice.langReplace(\"Only mp4,wmv, webm file\"),\n              });\n          } else if ((this.fileType == 2) && (filesize > 131072 * 10)) {\n\n              Swal.fire({\n                  icon: 'error',\n                  text: this.commonserveice.langReplace(\"Max allow file size 10 MB\"),\n\n              });\n          } else if ((this.fileType == 3) && !(splititems[1] == 'jpeg' || splititems[1] == 'jpg' || splititems[1] == 'png')) {\n              Swal.fire({\n                  icon: 'error',\n                  text: this.commonserveice.langReplace(\"Only Upload .jpg, .jpeg, .png file\"),\n              });\n          } else if ((this.fileType == 3) && (filesize > 131072)) {\n              Swal.fire({\n                  icon: 'error',\n                  text: this.commonserveice.langReplace(\"Max allow file size 1 MB\"),\n\n              });\n          } else {\n              newFile.append('file', event.addedFiles[0])\n              newFile.append('fileType', splititems[1])\n              this.commonserveice.msguploadFile(newFile).subscribe({\n                next: (response) => {\n                    let respData = response.RESPONSE_DATA;\n                    let respToken = response.RESPONSE_TOKEN;\n\n                    let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n                    if (respToken == verifyToken) {\n                        let res: any = Buffer.from(respData, 'base64');\n                        let responseResult = JSON.parse(res)\n\n                        if (responseResult.status == 200) {\n\n                            //  this.files_dropped.push(event.addedFiles);\n                            let obj: any = {};\n                            obj['fileName'] = responseResult.result.fileName;\n                            obj['filePath'] = responseResult.result.filePath;\n                            obj['fileType'] = responseResult.result.fileType;\n                            this.fileeList.push(obj)\n\n                            this.documentFile = responseResult.result.fileName;\n                           \n\n                        } else if (responseResult.status == 400) {\n                            this.commonserveice.swalfire('error',this.commonserveice.langReplace(responseResult.message))\n                        \n                        }  else {\n\n                          \n                          this.commonserveice.directlogoutlib()\n                        }\n                    } else {\n                        //   this.loading = false;\n                        this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n                    }\n\n                },\n                error: (msg) => {\n                    this.commonserveice.directlogoutlib()\n               }\n           })\n             \n          }\n\n\n      }\n      //console.log(event.addedFiles);\n\n\n\n  }\n  //\\\\ ======================== // Temp Uplaoad On select // ======================== //\\\\\n\n  onRemove(event: any) {\n      this.fileeList.splice(this.fileeList.indexOf(event), 1);\n      // this.previewFile=false;\n      //this.resetform()\n  }\n\n  //\\\\ ======================== // Get file Type // ======================== //\\\\\n  getfiletypeicon(ftype: any) {\n\n\n      let icon: any;\n      if (ftype == 'pdf') {\n          icon = 'bi-file-pdf text-danger';\n      } else if (ftype == 'jpg' || ftype == 'jpeg' || ftype == 'png' || ftype == 'gif') {\n          icon = 'bi-card-image';\n      } else if (ftype == 'mp4' || ftype == 'mkv') {\n          icon = 'bi-camera-video';\n      } else if (ftype == 'mp3' || ftype == 'WAV') {\n          icon = 'bi-file-earmark-music';\n      } else if (ftype == 'doc' || ftype == 'docx') {\n          icon = 'bi-filetype-doc text-primary';\n      } else if (ftype == 'ppt' || ftype == 'pptx') {\n          icon = 'bi-filetype-ppt text-danger';\n      } else if (ftype == 'xls' || ftype == 'xlsx' || ftype == 'ods') {\n          icon = 'bi-filetype-xls text-success';\n      } else if (ftype == 'zip') {\n          icon = 'bi-file-zip text-warning';\n      } else {\n          icon = 'bi-folder-fill text-warning';\n      }\n      return icon;\n\n  }\n  //\\\\ ======================== // Get file Type // ======================== //\\\\\n  newGenerateMessage() {\n\n      // this.messageContent = this.CkeditornewComponent.ckdesc;\n      let configtypeVal = this.configtype;\n      let smsTempIdVal = this.smsTempId;\n      let messageTypeVal = this.messageType;\n      let eventTypeVal = this.eventType;\n      let smsSubjectVal = this.smsSubject;\n      //console.log('smsSubjectVal');\n      let messageContentVal = this.messageContent;\n      let intMailTemplateVal = this.intMailTemplate;\n      let intDocumentType = this.fileType;\n      let vchDocument = this.documentFile;\n      let vchLanguage = this.vchLanguage;\n\n\n      \n   if ((this.varlist.formEnable == true) && (this.varlist.dynamicForm == true) && (!this.vldChkLst.blankCheck(this.formnames, this.commonserveice.langReplace(this.messaageslist.formnames)))) {}\n       else if (!this.vldChkLst.selectDropdown(configtypeVal, this.commonserveice.langReplace(this.messaageslist.configtype),'configtype')) {} \n       else if (!this.vldChkLst.selectDropdown(this.gateWayconfigtype, this.commonserveice.langReplace(this.messaageslist.gateWayDetails),'gatewayConfigurationType')) {} \n       else if (!this.vldChkLst.selectDropdown(this.messageType, this.commonserveice.langReplace(this.messaageslist.messageType),'messageType')) {} \n       else if (!this.vldChkLst.blankCheck(vchLanguage, this.commonserveice.langReplace(this.messaageslist.vchLanguage),'vchLanguage')) {} \n       else if ((configtypeVal == 2) && (!this.vldChkLst.blankCheck(this.smsTempId, this.commonserveice.langReplace(this.messaageslist.smsTempId),'smsTempId'))) {} \n       else if (!this.vldChkLst.selectDropdown(messageTypeVal, this.commonserveice.langReplace(this.messaageslist.messageType),'messageType')) {} \n       else if ((this.messageType == 1) && (!this.vldChkLst.selectDropdown(eventTypeVal, this.commonserveice.langReplace(this.messaageslist.eventType),'eventType'))) {} \n       else if ((this.mailsmstoApplicant == '') && (!this.vldChkLst.blankCheck(this.mailsmstoAuthority, this.commonserveice.langReplace(this.messaageslist.to)))) {} \n       else if ((configtypeVal == 1) && (this.mailsmstoApplicant == 1) && (!this.vldChkLst.blankCheck(this.emailId, this.commonserveice.langReplace(this.messaageslist.emailId),'emailId'))) {} \n       else if ((configtypeVal != 1) && (this.mailsmstoApplicant == 1) && (!this.vldChkLst.blankCheck(this.mobileNo, this.commonserveice.langReplace(this.messaageslist.mobileNo),'mobileNo'))) {} \n       else if (!this.vldChkLst.blankCheck(smsSubjectVal, this.commonserveice.langReplace(this.messaageslist.smsSubject),'smsSubject')) {}\n      // else if ((configtypeVal == 1) && (!this.vldChkLst.blankCheck(intMailTemplateVal,this.messaageslist.intMailTemplate))) {}\n      else if ((configtypeVal == 3) && (!this.vldChkLst.selectDropdown(intDocumentType, this.commonserveice.langReplace(this.messaageslist.intDocumentType),'fileType'))) {} \n      else if ((configtypeVal == 3) && (!this.vldChkLst.selectDropdown(vchDocument, this.commonserveice.langReplace(this.messaageslist.vchDocument),'documentFile'))) {} \n      else if (!this.vldChkLst.blankCheck(messageContentVal, this.commonserveice.langReplace(this.messaageslist.smscontent),'messageContent')) {} \n      else {\n          if (this.varlist.formEnable == false) {\n              this.txtFormId = this.varlist.formId;\n          }\n          else if((this.varlist.formEnable == true) && (this.varlist.dynamicForm == false)) {\n            this.txtFormId = this.selformId;\n        }\n          messageContentVal = this.encDec.escapeHtml(messageContentVal);\n          let mailSmsApp: any = '';\n          if (this.mailsmstoApplicant && this.mailsmstoAuthority) {\n              mailSmsApp = '1,2';\n          } else if (this.mailsmstoAuthority) {\n              mailSmsApp = '2';\n          } else if (this.mailsmstoApplicant) {\n              mailSmsApp = '1';\n          }\n\n          let formparams = {\n              \"itemId\": this.messageId,\n              \"formId\": this.txtFormId,\n              \"messageConfType\": configtypeVal,\n              \"smsTemplateId\": smsTempIdVal,\n              \"messageType\": messageTypeVal,\n              \"eventType\": eventTypeVal,\n              \"subject\": smsSubjectVal,\n              \"messageContent\": messageContentVal,\n              \"intCreatedBy\": this.userId,\n              \"intUpdatedBy\": this.userId,\n              \"intMailTemplate\": this.intMailTemplate,\n              \"intDocumentType\": intDocumentType,\n              \"vchDocument\": vchDocument,\n              \"vchLanguage\": vchLanguage,\n              \"itemStatus\": '',\n              \"vchEmailIdKey\": this.emailId,\n              \"vchMobileKey\": this.mobileNo,\n              \"gateWayconfigId\": this.gateWayconfigtype,\n              \"mailSmsTo\": mailSmsApp\n          }\n\n          this.commonserveice.newMessage(formparams).subscribe({\n            next: (response) => {\n                let respData = response.RESPONSE_DATA;\n                let respToken = response.RESPONSE_TOKEN;\n                let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n                if (respToken == verifyToken) {\n                    let res: any = Buffer.from(respData, 'base64');\n                    let responseResult = JSON.parse(res)\n\n                    if (responseResult.status == 200) {\n\n                        Swal.fire({\n\n                            text: this.commonserveice.langReplace(this.messaageslist.successMsg),\n                            icon: 'success',\n                            confirmButtonColor: '#3085d6',\n                            confirmButtonText: this.commonserveice.langReplace('Ok')\n                        }).then((result) => {\n\n\n                            if (messageTypeVal == 1) {\n                                this.route.navigate(['/admin/viewmessageengine'])\n                            } else {\n\n                                this.route.navigate(['/admin/viewmessagereminder'])\n                            }\n                            this.resetform();\n\n\n                        })\n\n                    } else if (responseResult.status == 202) {\n\n                        // this.loading=false;\n\n                        Swal.fire({\n\n                            text: this.commonserveice.langReplace(this.messaageslist.updatesuccessMsg),\n                            icon: 'success',\n                            confirmButtonColor: '#3085d6',\n                            confirmButtonText: this.commonserveice.langReplace('Ok')\n                        }).then((result) => {\n\n\n                            if (messageTypeVal == 1) {\n\n                                this.route.navigate(['../viewmessageengine'])\n                            } else {\n\n                                this.route.navigate(['..viewmessagereminder'])\n                            }\n                            this.resetform();\n                        })\n\n                    } else if (responseResult.status == 501) {\n\n                        this.commonserveice.directlogoutlib()\n                    } else if (responseResult.status == 400) {\n                        this.commonserveice.swalfire('error',this.commonserveice.langReplace(responseResult.message.metaName[0]))\n                        // this.loading=false;\n                  \n\n\n                    } else {\n                        //this.loading=false;\n                        this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.somethingWrong))\n                    \n                    }\n                } else {\n\n                    this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.messaageslist.errorMsg))\n                    \n                }\n            },\n            error: (msg) => {\n                       this.commonserveice.directlogoutlib()\n           }\n       })\n\n\n        \n\n\n\n\n      }\n\n  }\n\n  getMessageinfo() {\n      let messageParams = {\n          \"intMessageConfigId\": this.messageId,\n          \"intMessageConfigType\": '',\n          \"formId\": \"\",\n          \"formName\": ''\n      };\n      this.commonserveice.viewMessage(messageParams).subscribe({\n        next: (response) => {\n            let respData = response.RESPONSE_DATA;\n            let respToken = response.RESPONSE_TOKEN;\n            let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n            if (respToken == verifyToken) {\n                let res: any = Buffer.from(respData, 'base64');\n                res = JSON.parse(res.toString());\n                if (res.status == 200) {\n                    this.messageList = res.result;\n                    if (this.messageList.length > 0) {\n                      setTimeout(()=>{                          \n                          this.selformId = this.messageList[0].intProcessId;\n                      },1000);\n                    \n                       \n  \n                        this.configtype = this.messageList[0].intMessageConfigType;\n                        this.formnames = this.messageList[0].intProcessId;\n                        this.messageType = this.messageList[0].intmessageType;\n                        this.eventType = this.messageList[0].intEventType;\n                        this.smsSubject = this.messageList[0].vchSubject;\n                        this.messageContent = this.encDec.decodeHtml(this.messageList[0].vchMessageContent);\n                        // this.messageContent = this.messageList[0].vchMessageContent;\n                        // console.log(this.encDec.decodeHtml(this.messageList[0].vchMessageContent));\n                        // console.log(this.messageList[0].vchMessageContent);\n                        this.smsTempId = this.messageList[0].vchSmsTemplateId;\n                        this.fileType = this.messageList[0].intDocumentType;\n                        this.documentUrl = this.messageList[0].vchDocument;\n                        this.intMailTemplate = this.messageList[0].intMailTemplate;\n                        this.vchLanguage = this.messageList[0].vchLanguage;\n                        this.emailId = this.messageList[0].vchEmailIdKey;\n                        this.mobileNo = this.messageList[0].vchMobileKey;\n                        let explodedAllMailValue = (this.messageList[0].vchMailSmsTo).split(',');\n                        this.gateWayconfigtype = this.messageList[0].intGateWayConfigId;\n                        this.getGateWayConfigDetails();\n                        if (explodedAllMailValue.includes('1')) {\n                            this.mailsmstoApplicant = '1';\n                        }\n                        if (explodedAllMailValue.includes('2')) {\n                            this.mailsmstoAuthority = '2';\n                        }\n                        // alert(this.messageList[0].vchLanguage);\n                    }\n                } else if (res.status == 417) {\n                    this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.errorApiResponse))\n                 \n                } else {\n                    this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.somethingWrong))\n                   \n                }\n            } else {\n                this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.errorApiResponse))\n               \n            }\n        },\n        error: (msg) => {\n                   this.commonserveice.directlogoutlib()\n       }\n   })\n     \n  };\n\n  resetform() {\n      this.configtype = \"0\";\n      this.formnames = \"0\";\n      this.smsTempId = null;\n      this.messageType = null;\n      this.eventType = null;\n      this.smsSubject = null;\n      this.messageContent = 0;\n      this.intMailTemplate = 0;\n      this.fileType = 0;\n      this.documentFile = null;\n      this.vchLanguage = 0;\n\n  }\n  //form key and description section----------------------------\n\n  getFormKeys() {\n      let keyParams = {\n          \"itemId\": this.txtFormId\n      };\n      this.commonserveice.getConfigurationKeys(keyParams).subscribe({\n        next: (response) => {\n            let respData = response.RESPONSE_DATA;\n            let respToken = response.RESPONSE_TOKEN;\n            let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n            if (respToken == verifyToken) {\n              let res: any = Buffer.from(respData, 'base64');\n              res = JSON.parse(res.toString());\n              if (res.status == 200) {\n                this.keysArray = res.result;\n              } else if (res.status == 417) {\n                this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n              } else {\n                this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.somethingWrong))\n              }\n            } else {\n                this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n             \n            }\n        },\n        error: (msg) => {\n                   this.commonserveice.directlogoutlib()\n       }\n   })\n    \n  }\n  //\n\n\n\n  getStaticFormKeys() {\n      let keyParams = {\n\n      };\n      this.commonserveice.getStaticConfigurationKeys(keyParams).subscribe({\n        next: (response) => {\n            let respData = response.RESPONSE_DATA;\n            let respToken = response.RESPONSE_TOKEN;\n            let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n            if (respToken == verifyToken) {\n                let res: any = Buffer.from(respData, 'base64');\n                res = JSON.parse(res.toString());\n                if (res.status == 200) {\n                    this.StatickeysArray = res.result;\n                } else if (res.status == 417) {\n                    this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n                } else {\n                    this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.somethingWrong))\n                }\n            } else {\n                this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n            }\n        },\n        error: (msg) => {\n                   this.commonserveice.directlogoutlib()\n       }\n   })\n  \n\n\n\n\n  }\n\n\n\n  getLanguage() {\n      let params = {\n          \"intId\": '',\n\n      };\n      this.commonserveice.getLanguage(params).subscribe({\n        next: (response) => {\n            let respData = response.RESPONSE_DATA;\n          let respToken = response.RESPONSE_TOKEN;\n          let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n          if (respToken == verifyToken) {\n              let res: any = Buffer.from(respData, 'base64');\n              res = JSON.parse(res.toString());\n              if (res.status == 200) {\n                  this.languageList = res.result;\n               //   console.log(this.languageList)\n              } else {\n                  console.log(res.messages)\n              }\n          } else {\n            this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n          }\n        },\n        error: (msg) => {\n                   this.commonserveice.directlogoutlib()\n       }\n   })\n     \n  }\n  // addChangeEventForLabel() {\n  //   let sessionUserLangtoken: any = sessionStorage.getItem('USER_LANGPREF');\n  //   let sessionUserLang = JSON.parse(CryptoJS.AES.decrypt(sessionUserLangtoken, this.varlist.apiHashingKey).toString(CryptoJS.enc.Utf8));\n  //   setTimeout(() => {\n  //     this.langKey = sessionUserLang;\n  //     let labelChangeEle: any = document.getElementById('languageListH');\n  //     labelChangeEle.addEventListener('change', () => {\n  //       this.langKey = labelChangeEle.value;\n  //     });\n  //   }, 1000);\n\n  // }\n\n  mailSmsTo(evt: any) {\n      let elemnt: any = evt.target;\n      if (elemnt.checked) {\n          if (evt.target.value == 1) {\n              this.mailsmstoApplicant = evt.target.value;\n          } else {\n              this.mailsmstoAuthority = evt.target.value;\n          }\n\n\n      } else {\n          if (evt.target.value == 1) {\n              this.mailsmstoApplicant = 0;\n          } else {\n              this.mailsmstoAuthority = 0;\n          }\n      }\n  }\n  getGateWayConfigDetails() {\n      let params = {\n          \"tinType\": this.configtype,\n      };\n      this.commonserveice.getFetchPublishRecord(params).subscribe({\n        next: (response) => {\n            let respToken = response.RESPONSE_TOKEN;\n            let respData = response.RESPONSE_DATA\n            let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n            if (respToken == verifyToken) {\n                let respData = response.RESPONSE_DATA;\n                let res: any = Buffer.from(respData, 'base64');\n                res = JSON.parse(res.toString());\n                if (res.status == 200) {\n                    this.gatewayconfigDetails = res.result;\n                } else if (res.status == 400) {\n                    Swal.fire({\n                        icon: 'error',\n                        text: \"error\",\n                    });\n                }\n  \n            }\n        },\n        error: (msg) => {\n                   this.commonserveice.directlogoutlib()\n       }\n   })\n     \n  }\n\n}","<!--===Page Title===-->\n<div class=\"page-title\">\n\n    <h4>{{title | translate}}</h4>\n </div>\n <!--===Page Title===-->\n <div class=\"page-controls-section\" id=\"page-content\">\n    <div class=\"card\">\n       <div class=\"controls-section-header\">\n        \n        \n\n          <ul class=\"nav nav-tabs nav-fill\" role=\"tablist\">\n            <lib-libtabs *ngFor=\"let tablist of tablist\" [tabMessage]=\"tablist\" [activeid]=\"messageId\"></lib-libtabs>\n           \n         </ul>\n         <div class=\"indicatorslist\">\n             <lib-libutils *ngFor=\"let utillist of utillist\" [childMessage]=\"utillist\"></lib-libutils>\n            \n         </div>\n\n       </div>\n       <div class=\"card-body\">\n          <div class=\"controls-section\">\n           \n             <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\" *ngIf=\"formenable && !dynamicForm\">\n                 \n                     <div class=\"row\">\n                        <label class=\"col-md-6 col-lg-4\">* {{\"Form Name\" | translate}}</label>\n                        <div class=\"col-md-6 col-lg-6\">\n                           <select class=\"form-select\" id=\"selformId\" [(ngModel)]=\"selformId\">\n                              <option value=0>{{\"Select\" | translate}}</option>\n                              <option *ngFor=\"let flist of formNameslist\" value=\"{{flist.intId}}\">\n                                 {{flist.vchProcessName}}\n                              </option>\n                              \n                           </select>\n                           \n                        </div>\n                     </div>\n                  </div>\n                   <div class=\"form-group\" *ngIf=\"formenable && dynamicForm\">\n                 \n                      <div class=\"row\">\n                         <label class=\"col-md-6 col-lg-4\">* {{\"Form Name\" | translate}}</label>\n                         <div class=\"col-md-6 col-lg-6\">\n                            <input type=\"text\" class=\"form-control\" id=\"txtProcessName\" readonly [value]=\"txtProcessName\">\n                            <input type=\"hidden\" class=\"form-control\" [(ngModel)]=\"formnames\">\n                         </div>\n                      </div>\n                   </div>\n                   <div class=\"form-group\">\n                      <div class=\"row\">\n                         <label class=\"col-md-6 col-lg-4\">* {{\"Configuration Type\" | translate}}</label>\n                         <div class=\"col-md-6 col-lg-6\">\n                            <select class=\"form-select docSizeType\" id=\"configtype\" [(ngModel)]=\"configtype\" (change)=\"getGateWayConfigDetails()\">\n                               <option value=0  selected>{{\"Select\" | translate}}</option>\n                               <option value=1>Mail</option>\n                               <option value=2>SMS</option>\n                               <option value=9>Whatsapp</option>\n                            </select>\n                         </div>\n                      </div>\n                   </div>\n                   <div class=\"form-group\">\n                      <div class=\"row\">\n                         <label class=\"col-md-6 col-lg-4\">* {{\"Configuration\" | translate}}</label>\n                         <div class=\"col-md-6 col-lg-6\">\n                            <select class=\"form-select docSizeType\" id=\"gatewayConfigurationType\" [(ngModel)]=\"gateWayconfigtype\">\n                               <option value='0' [selected]=\"true\">{{\"Select\" | translate}}</option>\n                               <ng-container *ngFor=\"let gtway of gatewayconfigDetails\">\n                                  <option  value={{gtway.intId}} [selected]=\"gtway.intId==gateWayconfigtype\">{{gtway.vchName}}</option>\n                               </ng-container>\n                               \n                            </select>\n                         </div>\n                      </div>\n                   </div>\n                   <div class=\"form-group\">\n                      <div class=\"row\">\n                         <label class=\"col-md-6 col-lg-4\">* {{\"Message Type\" | translate}}</label>\n                         <div class=\"col-md-6 col-lg-6\">\n                            <select class=\"form-select docSizeType\" id=\"messageType\" name=\"messageType\" [(ngModel)]=\"messageType\">\n                               <option value=0 disabled selected>{{\"Select\" | translate}}</option>\n                               <option value=1>Messaging</option>\n                               <option value=2>Reminder</option>\n                            </select>\n                         </div>\n                      </div>\n                   </div>\n \n                   <!-- get language -->\n                   <div class=\"form-group\">\n                      <div class=\"row\">\n                         <label class=\"col-md-6 col-lg-4\">* {{\"Languages\" | translate}}</label>\n                         <div class=\"col-md-6 col-lg-6\">\n                            <!-- {{vchLanguage | json }}\n                            -->\n                            <select class=\"form-select docSizeType\" name=\"vchLanguage\" id=\"vchLanguage\" [(ngModel)]=\"vchLanguage\">\n                               <option value=0 disabled selected>{{\"Select\" | translate}}</option>\n                               <!-- <option value=0>--Select--</option>\n                               <option value=\"en\">English</option> -->\n                               \n                               <option *ngFor=\"let mNames of languageList\"  value=\"{{mNames.vchAliasName}}\">\n                                  {{mNames.vchLanguageName}}\n                               </option>\n                            </select>\n                         </div>\n                      </div>\n                   </div>\n \n                   <div class=\"form-group\" *ngIf=\"configtype == 2\">\n                      <div class=\"row\">\n                         <label class=\"col-md-6 col-lg-4\">* {{\"SMS Template Id\" | translate}}</label>\n                         <div class=\"col-md-6 col-lg-6\">\n                            <input type=\"text\" class=\"form-control\" id=\"smsTempId\" name=\"smsTempId\" [(ngModel)]=\"smsTempId\">\n                         </div>\n                      </div>\n                   </div>\n \n                   <div class=\"form-group\" *ngIf=\"messageType == 1\">\n                      <div class=\"row\">\n                         <label class=\"col-md-6 col-lg-4\">* {{\"Events\" | translate}}</label>\n                         <div class=\"col-md-6 col-lg-6\">\n                            <select class=\"form-select docSizeType\" name=\"messageType\" id=\"eventType\" [(ngModel)]=\"eventType\">\n                               <option value=0 disabled selected>{{\"Select\" | translate}}</option>\n                               <option value=1>OnSubmit</option>\n                               <option value=2>OnLoad</option>\n                            </select>\n                         </div>\n                      </div>\n                   </div>\n                   <div class=\"form-group\" >\n                      <div class=\"row\">\n                         <label class=\"col-md-6 col-lg-4\">* {{\"To\" | translate}}</label>\n                         <div class=\"col-md-6 col-lg-6\"><div class=\"form-check form-check-inline\">\n                            <input name=\"mailSmsTo\" type=\"checkbox\" id=\"mailSmsTo1\" class=\"form-check-input\" value=\"1\" (change)=\"mailSmsTo($event)\" [checked]=\"mailsmstoApplicant=='1'\">\n                            <label for=\"mailSmsTo1\" class=\"form-check-label\">{{\"Applicant\" | translate}}</label></div><div class=\"form-check form-check-inline\"><input name=\"mailSmsTo\" type=\"checkbox\" id=\"mailSmsTo2\" class=\"form-check-input \" value=\"2\" (change)=\"mailSmsTo($event)\" [checked]=\"mailsmstoAuthority=='2'\"><label for=\"mailSmsTo2\" class=\"form-check-label\">{{\"Authority\" | translate}}</label></div></div> \n                      </div>\n                   </div>\n                   <div class=\"form-group\" *ngIf=\"mailsmstoApplicant==1 && configtype==1\">\n                      <div class=\"row\">\n                         <label class=\"col-md-6 col-lg-4\">* {{\"Email\" | translate}} ({{\"key\" | translate}})</label>\n                         <div class=\"col-md-6 col-lg-6\">\n                            <input type=\"text\" class=\"form-control\" name=\"emailId\" id=\"emailId\" [(ngModel)]=\"emailId\">\n                         </div>\n                      </div>\n                   </div>\n                   <div class=\"form-group\" *ngIf=\"mailsmstoApplicant==1 && configtype!=1\">\n                      <div class=\"row\">\n                         <label class=\"col-md-6 col-lg-4\">* {{\"Mobile No\" | translate}} ({{\"key\" | translate}})</label>\n                         <div class=\"col-md-6 col-lg-6\">\n                            <input type=\"text\" class=\"form-control\" name=\"mobileNo\" id=\"mobileNo\" [(ngModel)]=\"mobileNo\">\n                         </div>\n                      </div>\n                   </div>\n                   <!-- mailsmstoApplicant -->\n                   <div class=\"form-group\" >\n                      <div class=\"row\">\n                         <label class=\"col-md-6 col-lg-4\">* {{\"Subject\" | translate}}</label>\n                         <div class=\"col-md-6 col-lg-6\">\n                            <input type=\"text\" class=\"form-control\" name=\"smsSubject\" id=\"smsSubject\" [(ngModel)]=\"smsSubject\">\n                         </div>\n                      </div>\n                   </div>\n                   <div class=\"form-group d-none\" *ngIf=\"configtype == 1\">\n                      <div class=\"row\">\n                         <label class=\"col-md-6 col-lg-4\">* {{\"Choose Template\" | translate}}</label>\n                         <div class=\"col-md-6 col-lg-6\">\n                            <select class=\"form-select docSizeType\" name=\"messageType\" id=\"intMailTemplate\" [(ngModel)]=\"intMailTemplate\">\n                               <option value=0 disabled selected>{{\"Select\" | translate}}</option>\n                               <option value=temp_1>Template-1</option>\n                               <option value=temp_2>Template-2</option>\n                               <option value=temp_3>Template-3</option>\n                            </select>\n                         </div>\n                      </div>\n                   </div>\n                  \n                   <div class=\"form-group\" *ngIf=\"configtype == 9\">\n                      <div class=\"row\">\n                         <label class=\"col-md-6 col-lg-4\">* {{\"Document Type\" | translate}}</label>\n                         <div class=\"col-md-6 col-lg-6\">\n                            <select class=\"form-select docSizeType\" id=\"fileType\" name=\"messageType\" (change)=\"changedocType()\"\n                               [(ngModel)]=\"fileType\">\n                               <option value=0 disabled selected>{{\"Select\" | translate}}</option>\n                               <option value=1>Audio</option>\n                               <option value=2>Video</option>\n                               <option value=3>Image</option>\n                            </select>\n                         </div>\n                      </div>\n                   </div>\n                   \n                   <div class=\"form-group row\" *ngIf=\"configtype == 9 && fileType > 0 \">\n                      <label class=\"col-md-6 col-lg-4\">* {{\"Upload Document\" | translate}}</label>\n                      <div class=\"col-md-6 col-lg-6\">\n                        <div *ngIf=\"fileeList?.length == 0\">\n                           <div class=\"custom-dropzone\" ngx-dropzone  (change)=\"fileType > 0 ? onSelect($event) :''\" >\n                                   <ngx-dropzone-label>\n                                     <div>\n                                           <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"63\" height=\"64\" viewBox=\"0 0 63 64\">\n                                               <g  fill-rule=\"nonzero\">\n                                                   <path\n                                                       d=\"M42.656 15.135a1.953 1.953 0 0 1-1.391-.578L31.5 4.795l-9.765 9.762a1.97 1.97 0 1 1-2.785-2.785L30.106.616a1.97 1.97 0 0 1 2.785 0l11.157 11.156a1.97 1.97 0 0 1-1.392 3.363z\" />\n                                                   <path\n                                                       d=\"M31.5 36.791a1.97 1.97 0 0 1-1.969-1.969V2.01a1.97 1.97 0 0 1 3.938 0v32.812a1.97 1.97 0 0 1-1.969 1.969z\" />\n                                                   <path\n                                                       d=\"M55.781 63.041H7.22A7.225 7.225 0 0 1 0 55.822V41.385a4.599 4.599 0 0 1 4.594-4.594h7.234a4.567 4.567 0 0 1 4.402 3.276l2.814 9.382a.658.658 0 0 0 .628.467h23.656a.658.658 0 0 0 .628-.467l2.814-9.385a4.572 4.572 0 0 1 4.402-3.273h7.234A4.599 4.599 0 0 1 63 41.385v14.437a7.225 7.225 0 0 1-7.219 7.219zM4.594 40.729a.656.656 0 0 0-.657.656v14.437a3.286 3.286 0 0 0 3.282 3.282H55.78a3.286 3.286 0 0 0 3.282-3.282V41.385a.656.656 0 0 0-.657-.656h-7.234a.65.65 0 0 0-.628.467L47.73 50.58a4.628 4.628 0 0 1-4.402 3.274H19.672a4.567 4.567 0 0 1-4.402-3.276l-2.814-9.382a.65.65 0 0 0-.628-.467H4.594z\" />\n                                               </g>\n                                           </svg>\n                                       \n                                           <h3>{{\"Drag and drop file here\" | translate}}</h3>\n                                           <h3>{{\"or\" | translate}}</h3>\n                                           <label for=\"fileDropRef\">{{\"Browse for file\" | translate}}</label>\n                                      \n                                     </div>\n                                   </ngx-dropzone-label>\n                                 </div>\n\n                             \n                               </div>\n                         <small class=\"text-danger\" *ngIf=\"(fileType == 1) && (fileeList?.length == 0)\">\n                            ({{\"Only .mp3, .mpeg file only maxsize 5 MB\"}})\n                         </small>\n                         <small class=\"text-danger\" *ngIf=\"(fileType == 2) && (fileeList?.length == 0)\">\n                            ({{\"Only .mp4,.wmv, .webm files only maxsize 10 MB\"}})\n                         </small>\n                         <small class=\"text-danger\" *ngIf=\"(fileType == 3) && (fileeList?.length == 0)\">\n                            ({{\"Only .jpg, .jpeg, .png file only maxsize 1 MB\"}})\n                         </small>\n                         <div class=\"files-list\" href=\"javascript:void(0)\" *ngFor=\"let f of fileeList\" >\n                           <div>\n                             <i class=\"h6 mr-1\" [ngClass]=\"getfiletypeicon(f.fileType)\" ></i> \n                           <span>{{f.fileName}}</span>\n                        </div>\n                       \n                           <a (click)=\"onRemove(f)\" class=\"text-danger\" ngbTooltip=\"Back to upload\" title=\"\"  data-original-title=\"Cancel\"><i class=\"bi bi-trash\"></i></a>\n                       </div>\n                      </div>\n                   \n                      <!-- <div class=\"col-md-1 col-lg-1\">\n                         <div *ngIf=\"fileType == 1 && documentUrl\">\n                            <audio controls>\n                               <source src=\"{{documentUrl}}\" type=\"audio/ogg\">\n                               <source src=\"{{documentUrl}}\" type=\"audio/mpeg\">\n                               {{\"Your browser does not support the audio tag\"}}.\n                            </audio>\n \n                         </div>\n                         <div *ngIf=\"fileType == 2 && documentUrl\">\n                            <video style=\"width:100%\" style=\"height:80px\" controls>\n                               <source src=\"{{documentUrl}}\" type=\"video/mp4\">\n                               <source src=\"{{documentUrl}}\" type=\"video/ogg\">\n                               {{\"Your browser does not support the video tag\"}}.\n                            </video>\n \n                         </div>\n                         <div *ngIf=\"fileType == 3 && documentUrl\">\n                            <img src=\"{{documentUrl}}\" class=\"border\" width=\"100%\" alt=\"{{documentUrl}}\">\n                         </div>\n                      </div> -->\n                   </div>\n                </div>\n \n                <!-- =========== Dynamic Key Description Section Start =================== -->\n \n                <div class=\"col-md-6\">\n                   <div class=\"mb-4\" *ngIf=\"formenable\">\n                      <h6>{{\"Dynamic keys for value\"}} <small><i\n                               class=\"fa fa-question-circle pos-abs  hlpICNKey\" data-phlp=\"tooltip\"\n                               style=\"top:10px;right:-15px;cursor: pointer;\"></i></small></h6>\n                      <div class=\"p-2 overflow-auto\" style=\"height:240px;\">\n                         <table class=\"table table-bordered\">\n                            <thead>\n                               <tr>\n                                  <th scope=\"col\">{{\"Key\" | translate}}</th>\n                                  <th scope=\"col\">{{\"Label Name\" | translate}}</th>\n                               </tr>\n                            </thead>\n                            <tbody>\n                               <tr *ngFor=\"let keys of keysArray; let i = index\">\n                                  <td>{{'{' +keys.ctrlId+'}'}}</td>\n                                  <td>{{keys.ctrlLabel}}</td>\n                               </tr>\n                            </tbody>\n                         </table>\n                      </div>\n </div>\n                      <div class=\"\" >\n                      <h6 >{{\"Static keys for value\" | translate}} <small><i\n                         class=\"fa fa-question-circle pos-abs  hlpICNKey\" data-phlp=\"tooltip\"\n                         style=\"top:10px;right:-15px;cursor: pointer;\"></i></small></h6>\n                <div class=\"overflow-auto\" style=\"height:240px;\">\n                   <table class=\"table table-bordered\">\n                      <thead>\n                         <tr>\n                            <th scope=\"col\">{{\"Key\" | translate}}</th>\n                            <th scope=\"col\">{{\"Key Description\" | translate}}</th>\n                         </tr>\n                      </thead>\n                      <tbody>\n                         <tr *ngFor=\"let keys of StatickeysArray let i = index\">\n                            <td>{{keys.keyName}}</td>\n                            <td>{{keys.keyDescription}}</td>\n                         </tr>\n                      </tbody>\n                   </table>\n                </div>\n           \n                   </div>\n                </div>\n                <!-- =========== Dynamic Key Description Section End =================== -->\n                <div class=\"form-group\">\n                   <div class=\"row\">\n                      <label class=\"col-md-4 col-lg-2\">* {{\"Message Content\" | translate}}</label>\n                      <div class=\"col-md-8 col-lg-10\">\n                        <ckeditor [(ngModel)]=\"messageContent\"  id=\"messageContent\"\n                        #myckeditor=\"ngModel\"\n                        name=\"myckeditor\"\n                        required\n                        [config]=\"ckeConfig\" \n                        debounce=\"500\" \n                        >\n                       \n                        </ckeditor>\n                         <!-- <app-ckeditornew [ckdesc]=\"messageContent\" [(ngModel)]=\"messageContent\"></app-ckeditornew> -->\n                      </div>\n                   </div>\n                </div>\n             </div>\n          </div>\n \n          <div class=\"form-group\">\n             <div class=\"row\">\n                <label class=\"col-md-4 col-lg-2\"></label>\n                <div class=\"col-md-8 col-lg-10\" *ngIf=\"messageId == ''\">\n \n                   <button class=\"btn btn-primary\"\n                      (click)=\"newGenerateMessage()\">{{\"Submit\" | translate}}</button>\n                   <button class=\"btn btn-danger ml-1\" (click)=\"resetform()\">{{\"Reset\" | translate}}</button>\n                </div>\n                <div class=\"col-md-8 col-lg-10\" *ngIf=\"messageId\">\n \n                   <button class=\"btn btn-primary\"\n                      (click)=\"newGenerateMessage()\">{{\"Update\" | translate}}</button>\n                   <button class=\"btn btn-danger ml-1\" (click)=\"resetform()\">{{\"Cancel\" | translate}}</button>\n                </div>\n             </div>\n          </div>\n       </div>\n    </div>\n </div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { MsgengineLibService } from '../msgengine-lib.service';\nimport * as CryptoJS from 'crypto-js';\nimport { EncrypyDecrpyService } from '../encrypy-decrpy.service';\nimport { VarlistService } from '../varlist.service';\nimport { Buffer } from 'buffer';\n\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'lib-viewmsgengine',\n  templateUrl: './viewmsgengine.component.html',\n  styleUrls: ['./viewmsgengine.component.css']\n})\nexport class ViewmsgengineComponent implements OnInit {\n\n  title: any;\n  tablist: any;\n  utillist: any;\n  messaageslist: any;\n  jsonurl:any = [\n    {\n      \"pagetitle\":\"View Message Engine\",\n      \"tabList\":[\n        {\"tabName\":\"Add\",\"tabUrl\":\"../addmessageengine\"},\n        {\"tabName\":\"View\",\"tabUrl\":\"../viewmessageengine\",\"tabClass\":\"active\"},\n        {\"tabName\":\"Reminder\",\"tabUrl\":\"../viewmessagereminder\"}],\n    \n        \n      \"utils\":[\n       \n        {\"utilName\":\"search\"},\n        {\"utilName\":\"print\"},\n        {\"utilName\":\"delete\"},\n        {\"utilName\":\"publish\"},\n        {\"utilName\":\"unpublish\"},\n      \n        ],\n      \"messages\":\n        {\n        \"successMsg\":\"Date saved successfully\",\n        \"errorMsg\":\"Something Went Wrong\",\n        \"warningtype\":\"You want to delete this record\",\n        \"deleteMsg\":\"Record has been deleted\"\n      }\n      \n    }\n  ];\n  letterID: any = \"\";\n  editor: any;\n  // editor: any = ClassicEditor;\n  isFlag = true;\n\n  page: number = 1;\n  count: number = 0;\n  tableSize: number = 10;\n  pageSizes = [10, 20, 50, 100, 500, 1000];\n\n  loading = false;\n  letterIdArray: any = [];\n  pubUnpStatus: any[] = [];\n  sevName: any = \"\";\n  messageList: any;\n  selFormName: any = 0;\n  formNames: any;\n  txtLetterName: any = null;\n  intMessageConfigType: any;\n  txtMessageConfigType: any;\n  langKey: any = 'en';\n  indexNumber: any = 0;\n  formenable:any;\n\n  constructor(private route: Router,\n    private httpClient: HttpClient,\n   \n    // public commonserveice: CommonvarlistService,\n    // private getwayService: GetwayvarlistuartionService,\n    public commonserveice:MsgengineLibService,\n    private varlist:VarlistService, \n    private modalService: NgbModal, \n    private encDec: EncrypyDecrpyService\n    ) { \n    \n      this.formenable=this.varlist.formEnable;\n      this.sevName=varlist.serviceModuleconfig;\n    } \n\n  ngOnInit(): void {\n    this.loadconfig();\n    this.viewItems('','','','',1);\n    if(this.formenable==true){\n      this.getForms();\n    }\n    \n    //this.addChangeEventForLabel();\n\n  }\n  loadconfig() {\n   \n      this.tablist = this.jsonurl[0].tabList;\n      this.utillist = this.jsonurl[0].utils\n      this.messaageslist = this.jsonurl[0].messages;\n      this.title = this.jsonurl[0].pagetitle;\n \n  }\n  multilingual(test: any) {\n    return test;\n  }\n  getForms() {\n\n\n    let params={}\n    this.commonserveice.getForms(params).subscribe({\n      next: (response) => {\n        let respData = response.RESPONSE_DATA;\n        let respToken = response.RESPONSE_TOKEN;\n       let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n       if (respToken == verifyToken) {\n         let res: any = Buffer.from(respData, 'base64');\n         res = JSON.parse(res.toString());\n         //console.log('res');\n         if (res.status === 200) {\n           this.formNames = res.result;\n          \n         }\n         else {\n           console.log(res.messages)\n         }\n       } else {\n        this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n       }\n      },\n      error: (msg) => {\n             this.commonserveice.directlogoutlib()\n     }\n   })\n   \n\n \n  }\n  viewItems(MessageConfigId:any,intMessageConfigType:any,formId:any,formName:any,messageType:any) {\n    this.letterIdArray = [];\n    this.txtMessageConfigType = 0;\n    this.selFormName = null;\n    let messageParams = {\n      \"intMessageConfigId\": MessageConfigId,\n      \"intMessageConfigType\": intMessageConfigType,\n      \"formId\": formId,\n      \"formName\": formName,\n      \"messageType\": messageType\n    };\n    this.loading = true;\n    this.pubUnpStatus = [];\n    this.commonserveice.viewMessage(messageParams).subscribe({\n      next: (response) => {\n        let respData = response.RESPONSE_DATA;\n        let respToken = response.RESPONSE_TOKEN;\n        let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n        if (respToken == verifyToken) {\n          let res: any = Buffer.from(respData, 'base64');\n          res = JSON.parse(res.toString());\n          if (res.status == 200) {\n            this.messageList = res.result;\n           // console.log(this.messageList)\n            this.isFlag = true;\n            this.loading = false;\n          } else if (res.status == 417) {\n            this.isFlag = false;\n            this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n          } else {\n            this.isFlag = false;\n            this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n          }\n        } else {\n          this.isFlag = false;\n          this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n        }\n      },\n      error: (msg) => {\n             this.commonserveice.directlogoutlib()\n     }\n   })\n   \n  }\n  viewSearchList() {\n    let Formid = this.selFormName;\n    let MessageConfigType = this.txtMessageConfigType;\n    this.viewItems('',MessageConfigType,Formid,'',1);\n \n  }\n\n\n\n\n  onTableDataChange(event: any) {\n    this.page = event;\n    this.indexNumber = (this.page - 1) * this.tableSize;\n\n  }\n  onTableSizeChange(event: any): void {\n    this.tableSize = event.target.value;\n    this.page = 1;\n    this.indexNumber = 0;\n  }\n  onChange(checkid: any, e: any, publishStatus: any) {\n    let totalCheckbox:any = document.querySelectorAll('.rowCheck').length;\n    let totalChecked:any = document.querySelectorAll('.rowCheck:checked').length;\n    let parentcheck:any = document.querySelectorAll('.checkall');\n   \n    if(totalCheckbox == totalChecked) {\n      parentcheck[0].checked = true;\n    } else {\n      parentcheck[0].checked = false;\n    }\n    if (e.target.checked) {\n      if (!this.letterIdArray.includes(checkid)) {\n        this.letterIdArray.push(checkid);\n        this.pubUnpStatus.push({ 'letterId': checkid, 'publishUnpublisStatus': publishStatus });\n      }\n    } else {\n      let index = this.letterIdArray.indexOf(checkid);\n      let indxAdd: number = 0;\n      for (let mk of this.pubUnpStatus) {\n        if (mk.letterId == checkid) {\n          this.pubUnpStatus.splice(indxAdd, 1);\n          break;\n        }\n        indxAdd++;\n      }\n      this.letterIdArray.splice(index, 1);\n    }\n  }\n  selectAll(e: any) {\n    let checkBoxes:any = document.querySelectorAll('.rowCheck');\n    if (e.target.checked) {\n      for (let i = 0; i < checkBoxes.length; i++) {\n\n        let ids = checkBoxes[i].id;\n        this.letterIdArray.push(parseInt(ids));\n        this.pubUnpStatus.push({ 'letterId': ids, 'publishUnpublisStatus': checkBoxes[i].getAttribute(\"pubstatus\") })\n        checkBoxes[i].checked = true;\n      }\n\n    }\n    else {\n      this.pubUnpStatus = [];\n      this.letterIdArray = [];\n      for (let i = 0; i < checkBoxes.length; i++) {\n        checkBoxes[i].checked = false;\n      }\n    }\n  }\n\n  //edit function call for edit id================================\n  editMessage(messageStr: any) {\n    \n    let encSchemeStr = this.encDec.encText(messageStr.toString());\n    this.route.navigate(['/admin/addmessageengine', encSchemeStr]);\n  }\n  deleteLetter(messageId: any) {\n    let messageParams = {\n      \"itemId\": messageId,\n      \"itemStatus\": \"1\"\n    };\n    Swal.fire({\n      title: 'Are you sure' + '?',\n      text: this.messaageslist.warningtype,\n      icon: 'warning',\n      showCancelButton: true,\n      cancelButtonText: 'Cancel',\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes' + ', ' + 'delete it' + \"!\"\n    }).then((result: any) => {\n\n      if (result.isConfirmed) {\n        \n        this.commonserveice.newMessage(messageParams).subscribe({\n  next: (response) => {\n    if (response.status == 200) {\n      this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.messaageslist.deleteMsg))\n  \n      this.viewItems('','','','',1)\n\n    }\n    else {\n      this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.messaageslist.errorMsg))\n   \n    }\n  },\n  error: (msg) => {\n         this.commonserveice.directlogoutlib()\n }\n})\n   \n      }\n    })\n  }\n  htmldecode(data:any){\n    let doc = new DOMParser().parseFromString(data, \"text/html\");\n  return doc.documentElement.textContent;\n\n  }\n  // addChangeEventForLabel() {\n  //   let sessionUserLangtoken: any = sessionStorage.getItem('USER_LANGPREF');\n  //   let sessionUserLang = JSON.parse(CryptoJS.AES.decrypt(sessionUserLangtoken, this.varlist.apiHashingKey).toString(CryptoJS.enc.Utf8));\n  //   setTimeout(() => {\n  //     this.langKey = sessionUserLang;\n  //     let labelChangeEle: any = document.getElementById('languageListH');\n  //     labelChangeEle.addEventListener('change', () => {\n  //       this.langKey = labelChangeEle.value;\n\n  //     });\n\n  //   }, 1000);\n\n  // }\n\n}\n","<!--===Page Title===-->\n<div class=\"page-title\">\n\n    <h4>{{title | translate}}</h4>\n  </div>\n  <!--===Page Title===-->\n  <!--===controle section===-->\n  <div class=\"page-controls-section\" id=\"page-content\">\n    <div class=\"card\">\n      <div class=\"controls-section-header\">\n       \n        <ul class=\"nav nav-tabs nav-fill\" role=\"tablist\">\n            <lib-libtabs *ngFor=\"let tablist of tablist\" [tabMessage]=\"tablist\"></lib-libtabs>\n    \n        </ul>\n        <div class=\"indicatorslist\">\n\n            <lib-libutils *ngFor=\"let utillist of utillist\" [childMessage]=\"utillist\" [sendIds]=\"letterIdArray\" \n            [funType]=\"sevName\" [pubUnpubStatus]=\"pubUnpStatus\"  (callfunction)=\"viewItems('','','','',1)\"\n            (callfunction2)='selectAll($event)'></lib-libutils>\n          \n         \n        </div>\n\n      </div>\n      <div class=\"card-body\">\n  \n  \n        <div class=\"controls-section\">\n          <!-- Search Panel -->\n          <div class=\"search-container active\" id=\"search-container\">\n  \n            <div class=\"search-sec\">\n  \n              <div class=\"row\">\n  \n                <div class=\"col-12 col-md-3 col-lg-3\" *ngIf=\"formenable\">\n                  <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"selFormName\" placeholder=\"Select Form Name\">\n                  </div>\n                </div>\n  \n                <div class=\"col-12 col-md-3 col-lg-3\">\n                  <div class=\"form-group\">\n                    <select class=\"form-select docSizeType\" [(ngModel)]=\"txtMessageConfigType\">\n                      <option value=\"0\" disabled selected>{{\"Select Message config Type\" | translate}}</option>\n                      <option value=1>Mail</option>\n                      <option value=2>SMS</option>\n                      <option value=3>Whatsapp</option>\n                    </select>\n  \n                  </div>\n                </div>\n  \n  \n                <div class=\"col-12 col-md-3 col-lg-3\">\n                  <div class=\"form-group\">\n                    <button class=\"btn btn-primary\" (click)=\"viewSearchList()\"> {{\"Search\" | translate}}</button>\n                    <button class=\"btn btn-danger ml-1\" (click)=\"viewItems('','','','',1)\"> {{\"Reset\" | translate}}</button>\n                  </div>\n                </div>\n              </div>\n  \n  \n            </div>\n  \n  \n          </div>\n          <!-- Search Panel -->\n          <div *ngIf=\"messageList?.length > 0; else norecord\">\n  \n            <div class=\"d-flex justify-content-between mb-3\">\n              <div>\n                <ul class=\"legends\">\n                  <li><span class=\"bg-success\"></span> {{\"Publish\" | translate}}</li>\n                  <li><span class=\"bg-danger\"></span> {{\"Unpublish\" | translate}}</li>\n                </ul>\n              </div>\n              <div>\n                {{\"Per Page\" | translate}}:\n                <select (change)=\"onTableSizeChange($event)\">\n                  <option *ngFor=\"let size of pageSizes\" [ngValue]=\"size\">\n                    {{ size }}\n                  </option>\n                </select>\n              </div>\n            </div>\n            <div class=\"table-responsive print-section\" id=\"print-section\"> \n              <table data-toggle=\"table\" class=\"table table-bordered valign-middle\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\" style=\"width:40px\" class=\"noPrint\">\n                      <div class=\"form-check\">\n                        <input class=\"form-check-input checkall\" type=\"checkbox\" (change)=\"selectAll($event)\" id=\"checkall\"\n                          name=\"checkall\" value=\"checkall\">\n  \n                      </div>\n                    </th>\n                    <th scope=\"col\" class=\"noPrint\" style=\"width:40px\">{{\"Sl No\"| translate }}</th>\n                    <th scope=\"col\" *ngIf=\"formenable\">{{\"Form Name\" | translate}}</th>\n                    <th scope=\"col\">{{\"Configuration Type\" | translate}}</th>\n                    <th scope=\"col\">{{\"SMS TemplateId\" | translate}}</th>\n                    <th scope=\"col\">{{\"Message Type\" | translate}}</th>\n                    <th scope=\"col\">{{\"Language\" | translate}}</th>\n                    <th scope=\"col\">{{\"Created On\" | translate}}</th>\n                    <th scope=\"col\" class=\"noPrint\" style=\"width:80px\">{{\"Action\" | translate}}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr  *ngFor=\"let messages of messageList | paginate\n                          : {\n                              itemsPerPage: tableSize,\n                              currentPage: page,\n                              totalItems: count\n                            };\n                      let i = index\">\n                    <td class=\"noPrint border-left-2\"\n                      [ngClass]=\"{'border-left-danger': messages.tinPublishStatus === 0 , 'border-left-success': messages.tinPublishStatus === 1 }\">\n                      <div>\n                        <input class=\"form-check-input rowCheck\" type=\"checkbox\"\n                          (change)=\"onChange(messages.intMessageConfigId, $event,messages.tinPublishStatus)\"\n                          name=\"{{messages.intMessageConfigId }}\" [id]=\"messages.intMessageConfigId\"\n                          [value]=\"messages.intMessageConfigId\" [attr.pubstatus]=\"messages.tinPublishStatus\">\n                      </div>\n                    </td>\n                    <td>{{i+1+indexNumber}} </td>\n                    <td *ngIf=\"formenable\"><a type=\"button\" class=\"text-primary\" data-bs-toggle=\"modal\"\n                        [attr.data-bs-target]=\"'#previewModal'+i\">\n                        {{messages.vchProcessName}}\n                      </a>\n                    </td>\n                    <td>\n                      <a type=\"button\" *ngIf=\"!formenable\" class=\"text-primary\" data-bs-toggle=\"modal\"\n                        [attr.data-bs-target]=\"'#previewModal'+i\">\n                        {{(messages.intMessageConfigType == 1) ? 'Mail':(messages.intMessageConfigType == 2) ?'SMS':\n                      'Whatsapp'}}\n                      </a>\n                      <span *ngIf=\"formenable\">\n                      {{(messages.intMessageConfigType == 1) ? 'Mail':(messages.intMessageConfigType == 2) ?'SMS':\n                      'Whatsapp'}}</span></td>\n                    <td>{{messages.vchSmsTemplateId !='' ? messages.vchSmsTemplateId: '--'}}</td>\n                    <td>{{messages.intmessageType == 1 ? 'Messaging': 'Reminder'}}</td>\n                    <td>{{messages.vchLanguage}}</td>\n                    <td>{{messages.dtmCreatedOn}}</td>\n                    <td class=\"noPrint\"><a class=\"text-primary\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Edit\"\n                        (click)=\"editMessage(messages.intMessageConfigId+':'+messages.intProcessId+':'+messages.vchProcessName)\"><i\n                          class=\"icon-edit-solid\"></i></a>\n                         \n                          <div class=\"modal fade noPrint\"  id=\"previewModal{{i}}\" tabindex=\"-1\" aria-labelledby=\"previewModalLabel\"\n                          aria-hidden=\"true\">\n                          <div class=\"modal-dialog modal-lg\">\n                            <div class=\"modal-content\">\n                              <div class=\"modal-header\">\n                                <h5 class=\"modal-title mb-0\" id=\"previewModalLabel\">{{\"Message Details\" | translate}}\n                                </h5>\n                                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                              </div>\n                              <div class=\"modal-body\">\n                                <table class=\"table table-bordered\">\n                                  <tbody>\n                                    <tr *ngIf=\"formenable\">\n                                      <td class=\"w-25 fw-bold\">{{\"Form Name\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.vchProcessName}}</td>\n                                    </tr>\n      \n                                    <tr>\n                                      <td class=\"fw-bold\">{{\"Subject\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.vchSubject}}</td>\n                                    </tr>\n      \n                                    <tr *ngIf=\"messages.intMessageConfigType == 2\">\n                                      <td class=\"w-25 fw-bold\">{{\"SMS TemplateId\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.vchSmsTemplateId}}</td>\n                                    </tr>\n      \n                                    <tr *ngIf=\"messages.intMessageConfigType == 3 && messages.intDocumentType == 1\">\n                                      <td class=\"w-25 fw-bold\"> {{\"Audio\" | translate}} </td>\n                                      <td colspan=\"2\">\n                                        <audio controls>\n                                          <source src=\"{{messages.vchDocument}}\" type=\"audio/mp3\">\n                                          {{\"Your browser does not support the audio tag\"}}.\n                                        </audio>\n                                      </td>\n                                    </tr>\n      \n                                    <tr *ngIf=\"messages.intMessageConfigType == 3 && messages.intDocumentType == 2\">\n                                      <td class=\"w-25 fw-bold\"> {{\"Video\" | translate}} </td>\n                                      <td colspan=\"2\">\n                                        <video width=\"320\" height=\"240\" controls>\n                                          <source src=\"{{messages.vchDocument}}\" type=\"video/mp4\">\n                                          {{\"Your browser does not support the video tag\"}}.\n                                        </video>\n                                      </td>\n                                    </tr>\n      \n                                    <tr *ngIf=\"messages.intMessageConfigType == 3 && messages.intDocumentType == 3\">\n                                      <td class=\"w-25 fw-bold\"> {{\"Image\" | translate}} </td>\n                                      <td colspan=\"2\"><img src=\"{{messages.vchDocument}}\" style=\"max-width:100%\"\n                                          height=\"70px\"></td>\n                                    </tr>\n      \n                                    <tr>\n                                      <td class=\"fw-bold\">{{\"Message Content\" | translate}} </td>\n                                      <td>\n                                        <div class=\"pdfContainer\" [innerHtml]=\"htmldecode(messages.vchMessageContent)\">\n\n                                        \n                                        </div>\n                                      </td>\n                                    </tr>\n      \n      \n      \n                                  </tbody>\n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        </td>\n\n\n                \n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <lib-libpagination [page]=\"page\" [count]=\"count\" [tableSize]=\"tableSize\" (callfunction)=\"onTableDataChange($event)\"></lib-libpagination>\n          </div>\n          <ng-template #norecord>\n            <h6 class=\"no-content\"> {{\"No Record Found\" | translate}}</h6>\n          </ng-template>\n        </div>\n  \n      </div>\n    </div>\n  </div>\n  <div class=\"loader\" *ngIf=\"loading\">\n    <div class=\"loader-item\"></div>\n    <p>{{\"Loading\"}}...</p>\n  </div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { MsgengineLibService } from '../msgengine-lib.service';\nimport * as CryptoJS from 'crypto-js';\nimport { EncrypyDecrpyService } from '../encrypy-decrpy.service';\nimport { VarlistService } from '../varlist.service';\nimport { Buffer } from 'buffer';\nimport * as $ from 'jquery'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ValidatorchecklistService } from '../validationchecklist.service';\n\n@Component({\n  selector: 'lib-viewmsgreminder',\n  templateUrl: './viewmsgreminder.component.html',\n  styleUrls: ['./viewmsgreminder.component.css']\n})\nexport class ViewmsgreminderComponent implements OnInit {\n  @ViewChild('createreminderModal') createreminderModal: ElementRef;\n  // siteUrl = this.varlist.siteURL;\n  title: any;\n  tablist: any;\n  utillist: any;\n  messaageslist: any= \n  {\n  \"successMsg\":\"Date saved successfully\",\n  \"errorMsg\":\"Something Went Wrong\",\n  \"warningtype\":\"You want to delete this record\",\n  \"deleteMsg\":\"Record has been deleted\",\n  \"schedularUrl\":\"Please Enter a URL\",\n  \"schedularUrlValid\":\"Please Enter a Valid URL\",\n  \"startDate\":\"Please select a Start Date\",\n  \"freqType\":\" frequency Type\",\n  \"freqDuration\":\"Please Enter frequency Duration\"\n};\n  jsonurl:any=[\n    {\n      \"pagetitle\":\"View Reminder\",\n      \"tabList\":[\n        {\"tabName\":\"Add\",\"tabUrl\":\"../addmessageengine\"},\n        {\"tabName\":\"View\",\"tabUrl\":\"../viewmessageengine\"},\n        {\"tabName\":\"Reminder\",\"tabUrl\":\"./viewmessagereminder\",\"tabClass\":\"active\"}],\n        \n        \n      \"utils\":[\n       \n        {\"utilName\":\"search\"},\n        {\"utilName\":\"print\"},\n        {\"utilName\":\"delete\"},\n        {\"utilName\":\"publish\"},\n        {\"utilName\":\"unpublish\"},\n      \n       \n        ],\n     \n      \n    }\n  ];\n  letterID: any = \"\";\n  editor: any;\n  isFlag = true;\n\n  page: number = 1;\n  count: number = 0;\n  tableSize: number = 10;\n  pageSizes = [10, 20, 50, 100, 500, 1000];\n\n  loading = false;\n  letterIdArray: any = [];\n  pubUnpStatus: any[] = [];\n  sevName: any = \"\";\n  messageList: any;\n  selFormName: any = 0;\n  formNames: any;\n  txtLetterName: any = null;\n  intMessageConfigType: any;\n  txtMessageConfigType: any;\n\n  startDateTime: any;\n  endDateTime: any;\n  freqType: any = 0;\n  freqDuration: any = null;\n  messageId: any;\n  sessiontoken: any;\n  userId: any;\n  encSchemeId: any;\n  txtFormId: any = null;\n  schedularUrl: any = null;\n  schedularStatus: any = 0;\n  excuteList: any;\n  langKey: any = 'en';\n formenable:any;\n indexNumber: any = 0;\n sMintProcessId: any;\n sMintMessageConfigId: any;\n sMintMessageConfigType: any;\n\n  constructor(private route: Router,\n    private httpClient: HttpClient,\n   \n    public commonserveice:MsgengineLibService,\n    private varlist:VarlistService, \n    private modalService: NgbModal, \n    public vldChkLst: ValidatorchecklistService,\n    private encDec: EncrypyDecrpyService) { \n      this.formenable=this.varlist.formEnable;\n      this.sevName=varlist.serviceModuleconfig;\n    }\n\n  ngOnInit(): void {\n    this.loadconfig();\n   \n    this.viewItemsReminder('','','','',2);\n    //this.addChangeEventForLabel();\n    if(this.formenable==true){\n      this.getForms();\n    }\n    this.sessiontoken = sessionStorage.getItem('ADMIN_SESSION');\n    let SeetionParsed:any;\n    if(this.varlist.sessionEncrypted == true){\n        SeetionParsed = JSON.parse(CryptoJS.AES.decrypt(this.sessiontoken, this.varlist.apiHashingKey).toString(CryptoJS.enc.Utf8));\n        \n    }\n    else{\n        SeetionParsed =JSON.parse(this.sessiontoken)\n    }\n    this.userId = SeetionParsed.USER_ID;\n\n  }\n  loadconfig() {\n    \n      this.tablist = this.jsonurl[0].tabList;\n      this.utillist = this.jsonurl[0].utils\n    \n      this.title = this.jsonurl[0].pagetitle;\n    \n  }\n  multilingual(test: any) {\n    return test;\n  }\n  getForms() {\n    let params={}\n    this.commonserveice.getForms(params).subscribe({\n      next: (response) => {\n        let respData = response.RESPONSE_DATA;\n        let respToken = response.RESPONSE_TOKEN;\n        let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n        if (respToken == verifyToken) {\n          let res: any = Buffer.from(respData, 'base64');\n          res = JSON.parse(res.toString());\n          if (res.status === 200) {\n            this.formNames = res.result;\n          }\n          else {\n            console.log(res.messages)\n          }\n        } else {\n          this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n        }\n      },\n      error: (msg) => {\n             this.commonserveice.directlogoutlib()\n     }\n   })\n   \n  }\n  selectAll(e: any) {\n    let checkBoxes:any = document.querySelectorAll('.rowCheck');\n    if (e.target.checked) {\n      for (let i = 0; i < checkBoxes.length; i++) {\n\n        let ids = checkBoxes[i].id;\n        this.letterIdArray.push(parseInt(ids));\n        this.pubUnpStatus.push({ 'letterId': ids, 'publishUnpublisStatus': checkBoxes[i].getAttribute(\"pubstatus\") })\n        checkBoxes[i].checked = true;\n      }\n\n     \n    }\n    else {\n      this.pubUnpStatus = []\n      this.letterIdArray = [];\n      for (let i = 0; i < checkBoxes.length; i++) {\n      checkBoxes[i].checked = false;\n      }\n    }\n  }\n\n  viewItemsReminder(intMessageConfigId:any,intMessageConfigType:any,formId:any,formName:any,messageType:any) {\n    this.letterIdArray = [];\n    this.txtMessageConfigType = 0;\n    this.selFormName = null;\n    let messageParams = {\n      \"intMessageConfigId\": intMessageConfigId,\n      \"intMessageConfigType\": intMessageConfigType,\n      \"formId\": formId,\n      \"formName\": formName,\n      \"messageType\": messageType\n    };\n    this.loading = true;\n    this.pubUnpStatus = [];\n    this.commonserveice.viewMessage(messageParams).subscribe({\n      next: (response) => {\n        let respData = response.RESPONSE_DATA;\n        let respToken = response.RESPONSE_TOKEN;\n        let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n        if (respToken == verifyToken) {\n          let res: any = Buffer.from(respData, 'base64');\n          res = JSON.parse(res.toString());\n          if (res.status == 200) {\n            this.messageList = res.result;\n           // console.log(this.messageList)\n            this.isFlag = true;\n            this.loading = false;\n          } else if (res.status == 417) {\n            this.isFlag = false;\n            this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n          } else {\n            this.isFlag = false;\n            this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n          }\n        } else {\n          this.isFlag = false;\n          this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n        }\n      },\n      error: (msg) => {\n             this.commonserveice.directlogoutlib()\n     }\n   })\n   \n  \n  }\n  viewSearchList() {\n    let Formid = this.selFormName;\n    let MessageConfigType = this.txtMessageConfigType;\n\n   \n    this.viewItemsReminder('',MessageConfigType,Formid,'',2)\n  }\n  createreminder(intProcessId:any,intMessageConfigId:any,intMessageConfigType:any){\n    this.open(this.createreminderModal);\n    this.sMintProcessId=intProcessId;\n    this.sMintMessageConfigId=intMessageConfigId;\n    this.sMintMessageConfigType=intMessageConfigType;\n    \n  }\n  onTableDataChange(event: any) {\n    this.page = event;\n    this.indexNumber = (this.page - 1) * this.tableSize;\n\n  }\n  onTableSizeChange(event: any): void {\n    this.tableSize = event.target.value;\n    this.page = 1;\n    this.indexNumber = 0;\n  }\n  onChange(checkid: any, e: any, publishStatus: any) {\n    let totalCheckbox:any = document.querySelectorAll('.rowCheck').length;\n    let totalChecked:any = document.querySelectorAll('.rowCheck:checked').length;\n    let parentcheck:any = document.querySelectorAll('.checkall');\n   \n    if(totalCheckbox == totalChecked) {\n      parentcheck[0].checked = true;\n    } else {\n      parentcheck[0].checked = false;\n    }\n    if (e.target.checked) {\n      if (!this.letterIdArray.includes(checkid)) {\n        this.letterIdArray.push(checkid);\n       \n        this.pubUnpStatus.push({ 'letterId': checkid, 'publishUnpublisStatus': publishStatus });\n      }\n    } else {\n      let index = this.letterIdArray.indexOf(checkid);\n      let indxAdd: number = 0;\n      for (let mk of this.pubUnpStatus) {\n        if (mk.letterId == checkid) {\n          this.pubUnpStatus.splice(indxAdd, 1);\n          break;\n        }\n        indxAdd++;\n      }\n      this.letterIdArray.splice(index, 1);\n    }\n  }\n  editReminder(messageStr: any) {\n    let encSchemeStr = this.encDec.encText(messageStr.toString());\n    this.route.navigate(['/admin/editReminderEngine', encSchemeStr]);\n  }\n\n\n //\\\\ ======================== // Create Scheduler // ======================== //\\\\\n\n  createSchedular() {\n\n    let startDateVal = this.startDateTime;\n    let freqTypeVal = this.freqType;\n    let freqDurationVal = this.freqDuration;\n  if (!this.vldChkLst.blankCheck(this.schedularUrl, this.commonserveice.langReplace(this.messaageslist.schedularUrl),'schedularUrl')) {}\n  else if (!this.vldChkLst.is_url(this.schedularUrl)) {}\n  else if (!this.vldChkLst.blankCheck(startDateVal, this.commonserveice.langReplace(this.messaageslist.startDate),'startDateTime')) {}\n  else if (!this.vldChkLst.selectDropdown(freqTypeVal, this.commonserveice.langReplace(this.messaageslist.freqType),'freqType')) {}\n  else if (!this.vldChkLst.blankCheck(freqDurationVal, this.commonserveice.langReplace(this.messaageslist.freqDuration),'freqDuration')) {}\n  else {\n      let messageParams = {\n        \"MessageConfigId\": this.sMintMessageConfigId,\n        \"processId\": this.sMintProcessId,\n        \"MessageConfigType\": this.sMintMessageConfigType,\n        \"startDate\": startDateVal,\n        \"endDate\": this.endDateTime,\n        \"frequencyType\": freqTypeVal,\n        \"frequencyDuration\": this.freqDuration,\n        \"schedularUrl\": this.schedularUrl,\n        \"SchedularStatus\": this.schedularStatus\n      };\n\n\n\n\n      this.loading = true;\n\n      this.commonserveice.reminderSchedular(messageParams).subscribe({\n        next: (response) => {\n          let respData = response.RESPONSE_DATA;\n          let respToken = response.RESPONSE_TOKEN;\n          let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n          if (respToken == verifyToken) {\n            let res: any = Buffer.from(respData, 'base64');\n            res = JSON.parse(res.toString());\n            if (res.status == 200) {\n              this.loading = false;\n              this.isFlag = true;\n  \n              Swal.fire({\n  \n                text: this.commonserveice.langReplace(\"Your Schedular Created Successfully\")+' !',\n                icon: 'success',\n                confirmButtonColor: '#3085d6',\n                confirmButtonText: this.commonserveice.langReplace('Ok')\n            }).then((result) => {\n  \n              this.modalService.dismissAll();\n              this.viewItemsReminder('','','','',2);\n              this.resetSchedular()\n  \n  \n            })\n  \n            \n           \n             \n            }else if(res.status==417){\n              this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.somethingWrong))\n            }\n            else {\n              this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n            }\n          }else{\n            this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n          }\n          \n        },\n        error: (msg) => {\n               this.commonserveice.directlogoutlib()\n       }\n     })\n\n   \n    }\n  }\n   //\\\\ ======================== // Create Scheduler // ======================== //\\\\\n\n //\\\\ ======================== // Executed Scheduler // ======================== //\\\\\n\n  executeSchedular(intMessageConfigId: any, intProcessId: any) {\n    let messageParams = {\n      \"MessageConfigId\": intMessageConfigId,\n      \"processId\": intProcessId,\n    };\n    \n    this.commonserveice.msgexecuteSchedular(messageParams).subscribe({\n  next: (response) => {\n    let respData = response.RESPONSE_DATA;\n    let respToken = response.RESPONSE_TOKEN;\n    let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n    if (respToken == verifyToken) {\n      let res: any = Buffer.from(respData, 'base64');\n      res = JSON.parse(res.toString());\n      if (res.status == 200) {\n        this.loading = false;\n        this.isFlag = true;\n        Swal.fire({\n          icon: 'success',\n          text:this.commonserveice.langReplace(\"Your Scheduler Execution Started\")+' !',\n\n        });\n        this.viewItemsReminder('','','','',2);\n        \n      } else if (res.status == 417) {\n        this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.somethingWrong))\n      }\n      else {\n        this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n      }\n    } else {\n      this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n    }\n  },\n  error: (msg) => {\n         this.commonserveice.directlogoutlib()\n }\n})\n \n  }\n  //\\\\ ======================== // Executed Scheduler // ======================== //\\\\\n  //\\\\ ======================== // Stop Scheduler // ======================== //\\\\\n  stopSchedular(intMessageConfigId: any, intProcessId: any) {\n    let messageParams = {\n      \"MessageConfigId\": intMessageConfigId,\n      \"processId\": intProcessId,\n    };\n    this.commonserveice.msgstopSchedular(messageParams).subscribe({\n      next: (response) => {\n        let respData = response.RESPONSE_DATA;\n        let respToken = response.RESPONSE_TOKEN;\n        let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n        if (respToken == verifyToken) {\n          let res: any = Buffer.from(respData, 'base64');\n          res = JSON.parse(res.toString());\n          if (res.status == 200) {\n            this.loading = false;\n            this.isFlag = true;\n            Swal.fire({\n              icon: 'success',\n              text:this.commonserveice.langReplace(\"Your Scheduler Is Stopped\")+' !',\n  \n            });\n            this.viewItemsReminder('','','','',2);\n            \n          } else if (res.status == 417) {\n            this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n          }\n          else {\n            this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n          }\n        } else {\n          this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n        }\n      },\n      error: (msg) => {\n             this.commonserveice.directlogoutlib()\n     }\n   })\n   \n  }\n\n  //\\\\ ======================== // Stop Scheduler // ======================== //\\\\\n  resetSchedular() {\n    this.startDateTime = '';\n    this.endDateTime = '';\n    this.freqType = 0;\n    this.freqDuration = '';\n    this.schedularUrl = '';\n\n  }\n   //\\\\ ======================== // Show Preview // ======================== //\\\\\n  showPreview(intMessageConfigId: any, intProcessId: any) {\n\n    let messageParams = {\n      \"intMessageConfigId\": intMessageConfigId,\n      \"intMessageConfigType\": \"\",\n      \"formId\": intProcessId,\n      \"formName\": \"\",\n      \"messageType\": \"2\"\n    };\n   // console.log(messageParams)\n    this.loading = true;\n    this.commonserveice.viewMessage(messageParams).subscribe({\n      next: (response) => {\n        let respData = response.RESPONSE_DATA;\n        let respToken = response.RESPONSE_TOKEN;\n        let verifyToken = CryptoJS.HmacSHA256(respData, this.varlist.apiHashingKey).toString();\n        if (respToken == verifyToken) {\n          let res: any = Buffer.from(respData, 'base64');\n          res = JSON.parse(res.toString());\n          if (res.status == 200) {\n            this.excuteList = res.result;\n            //console.log(this.excuteList)\n            this.isFlag = true;\n            this.loading = false;\n          } else if (res.status == 417) {\n            this.isFlag = false;\n           \nthis.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.somethingWrong))\n          }\n          else {\n            this.isFlag = false;\n            this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n          }\n        } else {\n          this.isFlag = false;\n          this.commonserveice.swalfire('error',this.commonserveice.langReplace(this.varlist.invalidResponse))\n        }\n      },\n      error: (msg) => {\n             this.commonserveice.directlogoutlib()\n     }\n   })\n \n\n  }\n   //\\\\ ======================== // Show Preview // ======================== //\\\\\n\n\n  //\\\\ ======================== // Modal Open // ======================== //\\\\ \n  open(content: any) {\n    this.modalService.open(content, { size: 'lg', backdrop: 'static', keyboard: false, ariaLabelledBy: 'modal-basic-title' }).result.then((result: any) => {\n    }, (reason: any) => { });\n  }\n  //\\\\ ======================== // Modal Open // ======================== //\\\\ \n  closeModal() {\n    this.modalService.dismissAll();\n   this.resetSchedular()\n  }\n  //\\\\ ======================== // Modal Close // ======================== //\\\\\n  htmldecode(data:any){\n    let doc = new DOMParser().parseFromString(data, \"text/html\");\n  return doc.documentElement.textContent;\n\n  }\n\n  // addChangeEventForLabel() {\n  //   let sessionUserLangtoken: any = sessionStorage.getItem('USER_LANGPREF');\n  //   let sessionUserLang = JSON.parse(CryptoJS.AES.decrypt(sessionUserLangtoken, this.varlist.apiHashingKey).toString(CryptoJS.enc.Utf8));\n  //   setTimeout(() => {\n  //     this.langKey = sessionUserLang;\n  //     let labelChangeEle: any = document.getElementById('languageListH');\n  //     labelChangeEle.addEventListener('change', () => {\n  //       this.langKey = labelChangeEle.value;\n\n  //     });\n\n  //   }, 1000);\n\n  // }\n}\n","<!--===Page Title===-->\n<div class=\"page-title\">\n \n    <h4>{{title | translate}}</h4>\n  </div>\n  <!--===Page Title===-->\n  \n  <div class=\"page-controls-section\" id=\"page-content\">\n    <div class=\"card\">\n      <div class=\"controls-section-header\">\n       \n\n        <ul class=\"nav nav-tabs nav-fill\" role=\"tablist\">\n            <lib-libtabs *ngFor=\"let tablist of tablist\" [tabMessage]=\"tablist\"></lib-libtabs>\n    \n        </ul>\n        <div class=\"indicatorslist\">\n\n            <lib-libutils *ngFor=\"let utillist of utillist\" [childMessage]=\"utillist\"  [sendIds]=\"letterIdArray\"\n            [funType]=\"sevName\" [pubUnpubStatus]=\"pubUnpStatus\"  (callfunction)=\"viewItemsReminder('','','','',2)\"\n            (callfunction2)='selectAll($event)'></lib-libutils>\n\n   \n         \n        </div>\n\n\n      </div>\n      <div class=\"card-body\">\n  \n  \n        <div class=\"controls-section\">\n          <!-- Search Panel -->\n          <div class=\"search-container active\" id=\"search-container\">\n  \n            <div class=\"search-sec\">\n  \n              <div class=\"row\">\n  \n                <div class=\"col-12 col-md-3 col-lg-3\" *ngIf=\"formenable\">\n                  <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"selFormName\" placeholder=\"Select Form Name\">\n                  </div>\n                </div>\n  \n                <div class=\"col-12 col-md-3 col-lg-3\">\n                  <div class=\"form-group\">\n                    <select class=\"form-select docSizeType\" [(ngModel)]=\"txtMessageConfigType\">\n                      <option value=\"0\" disabled selected>{{\"Select Message config Type\" | translate}}</option>\n                      <option value=1>Mail</option>\n                      <option value=2>SMS</option>\n                      <option value=3>Whatsapp</option>\n                    </select>\n                  </div>\n                </div>\n  \n  \n                <div class=\"col-12 col-md-3 col-lg-3\">\n                  <div class=\"form-group\">\n                    <button class=\"btn btn-primary\" (click)=\"viewSearchList()\">{{\"Search\" | translate}} </button>\n                    <button class=\"btn btn-danger ml-1\" (click)=\"viewItemsReminder('','','','',2)\">\n                      {{\"Reset\" | translate}}</button>\n                  </div>\n                </div>\n              </div>\n  \n  \n            </div>\n  \n  \n          </div>\n          <!-- Search Panel -->\n          <div *ngIf=\"messageList?.length > 0; else norecord\">\n  \n            <div class=\"d-flex justify-content-between mb-3\">\n              <div>\n                <ul class=\"legends\">\n                  <li><span class=\"bg-success\"></span> {{\"Publish\" | translate}}</li>\n                  <li><span class=\"bg-danger\"></span>{{\"Unpublish\" | translate}} </li>\n                </ul>\n              </div>\n              <div>\n                {{\"Per Page\" | translate}} :\n                <select (change)=\"onTableSizeChange($event)\">\n                  <option *ngFor=\"let size of pageSizes\" [ngValue]=\"size\">\n                    {{ size }}\n                  </option>\n                </select>\n              </div>\n            </div>\n            <div class=\"table-responsive print-section\" id=\"print-section\">\n              <table data-toggle=\"table\" class=\"table table-bordered valign-middle\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\" style=\"width:40px\" class=\"noPrint\">\n                      <div class=\"form-check\">\n                        <input class=\"form-check-input checkall\" type=\"checkbox\" (change)=\"selectAll($event)\" id=\"checkall\"\n                          name=\"checkall\" value=\"checkall\">\n  \n                      </div>\n                    </th>\n                    <th scope=\"col\" style=\"width:50px\">{{\"Sl No\" | translate}}</th>\n                    <th scope=\"col\" *ngIf=\"formenable\">{{\"Form Name\" | translate}}</th>\n                    <th scope=\"col\">{{\"Configuration Type\" | translate}}</th>\n                    <th scope=\"col\">{{\"Message Type\" | translate}}</th>\n                    <th scope=\"col\">{{\"Created On\" | translate}}</th>\n                    <th scope=\"col\">{{\"Last Execution Date\" | translate}}</th>\n                    <th scope=\"col\" [width]=\"150\">{{\"Set Reminder\" | translate}}</th>\n                    <th scope=\"col\" class=\"noPrint\">{{\"Preview\" | translate}}</th>\n                    <th scope=\"col\" class=\"noPrint\" style=\"width:80px\">{{\"Action\" | translate}}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor=\"let messages of messageList | paginate\n                          : {\n                              itemsPerPage: tableSize,\n                              currentPage: page,\n                              totalItems: count\n                            };\n                      let i = index\">\n                    <td class=\"noPrint border-left-2\"\n                      [ngClass]=\"{'border-left-danger': messages.tinPublishStatus === 0 , 'border-left-success': messages.tinPublishStatus === 1 }\">\n                      <div>\n                        <input class=\"form-check-input rowCheck\" [attr.pubstatus]=\"messages.tinPublishStatus\"\n                          type=\"checkbox\"\n                          (change)=\"onChange(messages.intMessageConfigId, $event,messages.tinPublishStatus)\"\n                          name=\"{{messages.intMessageConfigId}}\" [id]=\"messages.intMessageConfigId\"\n                          [value]=\"messages.intMessageConfigId\">\n                      </div>\n                    </td>\n\n\n                    \n                    <td>{{i+1+indexNumber}}</td>\n                    <td *ngIf=\"formenable\"><a type=\"button\" class=\"text-primary\" data-bs-toggle=\"modal\"\n                        [attr.data-bs-target]=\"'#previewModal'+i\">\n                        {{messages.vchProcessName}}</a>\n                    </td>\n                    <td>\n                      <a type=\"button\" *ngIf=\"!formenable\" class=\"text-primary\" data-bs-toggle=\"modal\"\n                        [attr.data-bs-target]=\"'#previewModal'+i\">\n                        {{(messages.intMessageConfigType == 1) ? 'Mail':(messages.intMessageConfigType == 2) ?'SMS':\n                      'Whatsapp'}}\n                      </a>\n                      <span *ngIf=\"formenable\">\n                      {{(messages.intMessageConfigType == 1) ? 'Mail':(messages.intMessageConfigType == 2) ?'SMS':\n                      'Whatsapp'}}</span></td>\n                    <td>{{messages.intmessageType == 1 ? 'Messaging': 'Reminder'}}</td>\n                    <td>{{messages.dtmCreatedOn}}</td>\n                    <td>{{(messages.schedularStatus == 1) ? messages.stopExecutionDate :'--'}}</td>\n                    <!-- <td>{{messages.vchLanguage}}</td> -->\n                    <td>\n                      <a type=\"button\" class=\"btn btn-primary btn-sm text-white width-100\" \n                        *ngIf=\"messages.schedularStatus == 0\" (click)=\"createreminder(messages.intProcessId,messages.intMessageConfigId,messages.intMessageConfigType)\">\n                        {{\"Create\" | translate}} </a>\n                      <span *ngIf=\"messages.schedularStatus == 1\">\n                        <a type=\"button\" class=\"btn btn-success btn-sm text-white width-100\"\n                          (click)=\"executeSchedular(messages.intMessageConfigId,messages.intProcessId)\">{{\"EXECUTE\" | translate}}</a>\n                      </span>\n                      <span *ngIf=\"messages.schedularStatus == 2\">\n                        <a type=\"button\" class=\"btn btn-danger btn-sm text-white width-100\"\n                          (click)=\"stopSchedular(messages.intMessageConfigId,messages.intProcessId)\">{{\"STOP\" | translate}}</a>\n                      </span>\n                    </td>\n                    <td class=\"noPrint\">\n                      <div *ngIf=\"messages.schedularStatus == 1;else nodt \">\n                        <a href=\"javascriprt:void(0)\" class=\"text-info\" data-bs-toggle=\"modal\"\n                          [attr.data-bs-target]=\"'#excuteModal'+i\">{{\"Preview\" | translate}}</a>\n                      </div>\n                      <ng-template #nodt>-</ng-template>\n                    </td>\n                    <!--=========== Modal For Message Details ===================-->\n  \n                    <td class=\"noPrint\"><a class=\"text-primary\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Edit\"\n                        (click)=\"editReminder(messages.intMessageConfigId+':'+messages.intProcessId+':'+messages.vchProcessName)\"><i\n                          class=\"icon-edit-solid\"></i></a>\n\n                          <div class=\"modal fade noPrint\" id=\"excuteModal{{i}}\" tabindex=\"-1\" aria-labelledby=\"excuteModalLabel\"\n                          aria-hidden=\"true\">\n                          <div class=\"modal-dialog modal-lg\">\n                            <div class=\"modal-content\">\n                              <div class=\"modal-header\">\n                                <h5 class=\"modal-title mb-0\" id=\"excuteModalLabel\">{{\"Execute Details\" | translate}}\n                                </h5>\n                                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                              </div>\n                              <div class=\"modal-body\">\n                                <table class=\"table table-bordered\">\n                                  <tbody>\n                                    <tr>\n                                      <td class=\"w-25 fw-bold\">{{\"Scheduler URL\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.schedularUrl}}</td>\n      \n                                    </tr>\n      \n                                    <tr>\n                                      <td class=\"fw-bold\">{{\"Start Date and Time\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.dtmStartDate}}</td>\n                                    </tr>\n      \n                                    <tr>\n                                      <td class=\"fw-bold\">{{\"End Date and Time\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.dtmEndDate}}</td>\n                                    </tr>\n      \n                                    <tr>\n                                      <td class=\"fw-bold\">{{\"Frequency Type\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.frequencyType == 1 ? 'Month': (messages.frequencyType == 2)\n                                        ?'Day': (messages.frequencyType == 3) ?'Hour' :'Second'}}</td>\n                                    </tr>\n                                    <tr>\n                                      <td class=\"fw-bold\">{{\"Frequency Duration\" | translate}}</td>\n                                      <td colspan=\"2\">{{messages.frequencyDuration}}</td>\n                                    </tr>\n                                  </tbody>\n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n      \n      \n                        <div class=\"modal fade noPrint\" id=\"previewModal{{i}}\" tabindex=\"-1\" aria-labelledby=\"previewModalLabel\"\n                          aria-hidden=\"true\">\n                          <div class=\"modal-dialog modal-lg\">\n                            <div class=\"modal-content\">\n                              <div class=\"modal-header\">\n                                <h5 class=\"modal-title mb-0\" id=\"previewModalLabel\">{{\"Message Details\" | translate}}\n                                </h5>\n                                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                              </div>\n                              <div class=\"modal-body\">\n                                <table class=\"table table-bordered\">\n                                  <tbody>\n                                    <tr *ngIf=\"formenable\">\n                                      <td class=\"w-25 fw-bold\">{{\"Form Name\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.vchProcessName}}</td>\n                                    </tr>\n      \n                                    <tr>\n                                      <td class=\"fw-bold\">{{\"Message Subject\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.vchSubject}}</td>\n                                    </tr>\n      \n                                    <tr *ngIf=\"messages.intMessageConfigType == 2\">\n                                      <td class=\"w-25 fw-bold\">{{\"SMS TemplateId\" | translate}} </td>\n                                      <td colspan=\"2\">{{messages.vchSmsTemplateId}}</td>\n                                    </tr>\n      \n                                    <tr *ngIf=\"messages.intMessageConfigType == 3 && messages.intDocumentType == 1\">\n                                      <td class=\"w-25 fw-bold\"> {{\"Audio\" | translate}} </td>\n                                      <td colspan=\"2\">\n                                        <audio controls>\n                                          <source src=\"{{messages.vchDocument}}\" type=\"audio/mp3\">\n                                          {{\"Your browser does not support the audio tag\"}}.\n                                        </audio>\n                                      </td>\n                                    </tr>\n      \n                                    <tr *ngIf=\"messages.intMessageConfigType == 3 && messages.intDocumentType == 2\">\n                                      <td class=\"w-25 fw-bold\"> {{\"Video\" | translate}} </td>\n                                      <td colspan=\"2\">\n                                        <video width=\"320\" height=\"240\" controls>\n                                          <source src=\"{{messages.vchDocument}}\" type=\"video/mp4\">\n                                          {{\"Your browser does not support the video tag\"}}.\n                                        </video>\n                                      </td>\n                                    </tr>\n      \n                                    <tr *ngIf=\"messages.intMessageConfigType == 3 && messages.intDocumentType == 3\">\n                                      <td class=\"w-25 fw-bold\"> {{\"Image\" | translate}} </td>\n                                      <td colspan=\"2\"><img src=\"{{messages.vchDocument}}\" style=\"max-width:100%\"\n                                          height=\"70px\"></td>\n                                    </tr>\n      \n                                    <tr>\n                                      <td class=\"fw-bold\">{{\"Message Content\" | translate}} </td>\n                                      <td>\n                                        <div class=\"pdfContainer\" [innerHtml]=\"htmldecode(messages.vchMessageContent)\"  ></div>\n                                      </td>\n                                    </tr>\n      \n                                  </tbody>\n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        </td>\n\n\n           \n  \n  \n  \n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <lib-libpagination [page]=\"page\" [count]=\"count\" [tableSize]=\"tableSize\" (callfunction)=\"onTableDataChange($event)\"></lib-libpagination>\n           \n          </div>\n          <ng-template #norecord>\n            <h6 class=\"no-content\">{{\"No Record Found\" | translate}} </h6>\n          </ng-template>\n        </div>\n  \n      </div>\n    </div>\n  </div>\n\n  <ng-template #createreminderModal id=\"createreminderModal\" class=\"noPrint\" let-modal>\n    <div class=\"modal-header\">\n      <h5 class=\"modal-title mb-0\" >\n        {{\"Reminder Scheduler\" | translate}}\n      </h5>\n      <button\n        type=\"button\"\n        class=\"btn-close\"\n        (click)=\"closeModal()\"\n        aria-label=\"Close\"\n      ></button>\n    </div>\n\n\n\n    <div class=\"modal-body\">\n \n      <div class=\"form-group\">\n        <div class=\"row\">\n          <label class=\"col-md-4 col-lg-3 text-dark\"> <span class=\"text-danger\">*</span>\n            {{\"Scheduler URL\" | translate}}</label>\n          <div class=\"col-md-8 col-lg-6\">\n            <input type=\"text\" [(ngModel)]=\"schedularUrl\" id=\"schedularUrl\" class=\"form-control\" name=\"\"\n              placeholder=\"https://www.google.co.in/\">\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"row\">\n          <label class=\"col-md-4 col-lg-3 text-dark\"> <span class=\"text-danger\">*</span>{{\"Start Date and Time\" | translate}} </label>\n          <div class=\"col-md-8 col-lg-6\">\n            <input type=\"datetime-local\" [(ngModel)]=\"startDateTime\"  id=\"startDateTime\"  class=\"form-control\" name=\"\">\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"row\">\n          <label class=\"col-md-4 col-lg-3 text-dark\"><span class=\"text-danger\"> </span>{{\"End Date and Time\" | translate}} </label>\n          <div class=\"col-md-8 col-lg-6\">\n            <input type=\"datetime-local\" [(ngModel)]=\"endDateTime\"  id=\"endDateTime\"  class=\"form-control\" name=\"\">\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"row\">\n          <label class=\"col-md-4 col-lg-3 text-dark\"><span class=\"text-danger\">*</span>{{\"Frequency Type\" | translate}} </label>\n          <div class=\"col-md-8 col-lg-6\">\n            <select class=\"form-select docSizeType\" [(ngModel)]=\"freqType\"  id=\"freqType\" >\n              <option value=\"0\" disabled selected>{{\"Select\" | translate}}</option>\n              <option value=1>Month</option>\n              <option value=2>Day</option>\n              <option value=3>Hours</option>\n              <option value=4>Seconds</option>\n            </select>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"row\">\n          <label class=\"col-md-4 col-lg-3 text-dark\"><span class=\"text-danger\">*</span> {{\"Frequency Duration\" | translate}}</label>\n          <div class=\"col-md-8 col-lg-6\">\n            <input type=\"number\" [(ngModel)]=\"freqDuration\"  id=\"freqDuration\"  class=\"form-control\" name=\"\"\n              placeholder=\"\">\n          </div>\n        </div>\n      </div>\n\n    \n      <div class=\"form-group\">\n        <div class=\"row\">\n          <label class=\"col-md-4 col-lg-3 text-dark\"> </label>\n          <div class=\"col-md-8 col-lg-6\">\n            <button class=\"btn btn-primary\"\n          \n              (click)=\"createSchedular()\">{{\"Submit\" | translate}}</button>\n            <button class=\"btn btn-danger ml-1\"\n              (click)=\"resetSchedular()\">{{\"Reset\" | translate}}</button>\n          </div>\n        </div>\n      </div>\n       \n       \n    </div>\n  </ng-template>","import { NgModule } from '@angular/core';\nimport { MsgengineLibComponent } from './msgengine-lib.component';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { CKEditorModule } from 'ckeditor4-angular';\nimport { AddgetwayComponent } from './addgetway/addgetway.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { RouterModule } from '@angular/router';\nimport { LibtabsComponent } from './libtabs/libtabs.component';\nimport { LibutilsComponent } from './libutils/libutils.component';\nimport { LibpaginationComponent } from './libpagination/libpagination.component';\nimport { ViewgetwayComponent } from './viewgetway/viewgetway.component';\nimport { AddmsgengineComponent } from './addmsgengine/addmsgengine.component';\nimport { ViewmsgengineComponent } from './viewmsgengine/viewmsgengine.component';\nimport { ViewmsgreminderComponent } from './viewmsgreminder/viewmsgreminder.component';\nimport { TranslatePipe } from './translate.pipe';\n\n\n\n\n// import { AddgetwayconfigComponent } from './addgetwayconfig/addgetwayconfig.component';\n// import { ViewgetwayconfigComponent } from './viewgetwayconfig/viewgetwayconfig.component';\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    MsgengineLibComponent,\n    AddgetwayComponent,\n    LibtabsComponent,\n    LibutilsComponent,\n    LibpaginationComponent,\n    ViewgetwayComponent,\n    AddmsgengineComponent,\n    ViewmsgengineComponent,\n    ViewmsgreminderComponent,\n    TranslatePipe,\n    \n\n\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxDropzoneModule,\n    NgbModule,\n    CKEditorModule,\n    NgxPaginationModule,\n    NgxDropzoneModule,\n    RouterModule\n  ],\n  exports: [\n    MsgengineLibComponent,\n    AddgetwayComponent,\n    LibtabsComponent,\n    ViewgetwayComponent,\n    AddmsgengineComponent,\n    ViewmsgengineComponent,\n    ViewmsgreminderComponent,\n  ]\n})\nexport class MsgengineLibModule { \n\n\n  \n}\n","/*\n * Public API Surface of msgengine-lib\n */\n\nexport * from './lib/msgengine-lib.service';\nexport * from './lib/msgengine-lib.component';\n\n// export * from './lib/viewgetwayconfig/viewgetwayconfig.component';\nexport * from './lib/msgengine-lib.module';\nexport * from \"./lib/addgetway/addgetway.component\";\nexport * from \"./lib/viewgetway/viewgetway.component\";\nexport * from \"./lib/addmsgengine/addmsgengine.component\";\nexport * from \"./lib/viewmsgengine/viewmsgengine.component\";\nexport * from \"./lib/viewmsgreminder/viewmsgreminder.component\";\nexport * from \"./lib/varlist.service\";\nexport * from \"./lib/libtabs/libtabs.component\";\nexport * from \"./lib/libutils/libutils.component\";\nexport * from './lib/encrypy-decrpy.service';\nexport * from './lib/validationchecklist.service';\nexport * from './lib/translate.pipe';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i3.VarlistService","i1.MsgengineLibService","i1.VarlistService","i2","i3","i4.TranslatePipe","i1","i3.MsgengineLibService","i4.EncrypyDecrpyService","i5.VarlistService","i6","i7.TranslatePipe","i4.ValidatorchecklistService","i5.EncrypyDecrpyService","i6.VarlistService","i9.LibtabsComponent","i10.LibutilsComponent","i11.TranslatePipe","i2.TranslatePipe","i4.VarlistService","i6.EncrypyDecrpyService","i11.LibpaginationComponent","i13.TranslatePipe","i3.ValidatorchecklistService","i5.MsgengineLibService","i10","i12.LibtabsComponent","i13.LibutilsComponent","i14.TranslatePipe","i6.ValidatorchecklistService","i7.EncrypyDecrpyService","i8","i9","i10.LibtabsComponent","i11.LibutilsComponent","i12.LibpaginationComponent","i13"],"mappings":"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"}