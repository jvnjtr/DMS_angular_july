import { MsgengineLibService } from './msgengine-lib.service';
import * as i0 from "@angular/core";
export declare class ValidatorchecklistService {
    commonserveice: MsgengineLibService;
    constructor(commonserveice: MsgengineLibService);
    blankCheck(elmVal: any, msg: any, elmId?: any): boolean;
    blankImgCheck(elmVal: any, msg: any): boolean;
    blankCheckRdo(elmNm: any, msg: any, elmId?: any): boolean;
    blankCheckRdoDynamic(clsName: any, msg: any, elmId?: any): boolean;
    blankCheckChkboxDynamic(clsName: any, msg: any, elmId?: any): boolean;
    selectDropdown(elmVal: any, msg: any, elmId?: any): boolean;
    maxLength(elmVal: any, fldLngth: any, msg: any, elmId?: any): boolean;
    minLength(elmVal: any, fldLngth: any, msg: any, elmId?: any): boolean;
    validEmail(elmVal: any, elmId?: any): boolean;
    validMob(elmVal: any, elmId?: any): boolean;
    blockspecialchar_first(evt: any, blockStatus: boolean): boolean;
    checkForSpecialCharacterAllPostion(evt: any, type?: any): boolean;
    textareaSpecialCharacterAllPostion(evt: any, type?: any): boolean;
    validPassword(elmVal: any, elmId?: any): boolean;
    validAadhar(elmVal: any): boolean;
    isCharKey(event: any): boolean;
    isCharKeyMob(val: any): any;
    isNumberKey(event: any): boolean;
    isNumberKeyMob(val: any): any;
    isAlphaNumeric(event: any): boolean;
    isAlphaNumericDynamic(event: any, blockSpecialChars: any): boolean;
    allowspecialChar(event: any): boolean;
    isAlphaNumericMob(val: any): boolean;
    isDecimal(event: any): boolean;
    isDecimalMob(val: any): any;
    dynCtrlVal(ctrlValParam: any, elemObj: any): boolean;
    isDashSlashNumeric(event: any): boolean;
    isDashSlashNumericMob(val: any): any;
    is_url(str: any): boolean;
    chkPassword(str: any): boolean;
    chkblankspace(str: any): boolean;
    validateFile(fileUploadType: string, actualFileType: any): boolean;
    validateFileSize(uploadedFileSize: any, actualFileSize: any, actualFileSizeType: any): boolean;
    tablenameval(obj: any): void;
    checkForSpaceInAllPostion(evt: any): boolean;
    containsSpecialChars(str: any): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<ValidatorchecklistService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ValidatorchecklistService>;
}
